{"version":3,"sources":["images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","Pages/Utils/InputSearchMeals.jsx","Pages/Utils/InputSearchCocktails.jsx","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","Context/RecipesProvider.jsx","Components/Footer.js","Pages/Utils/ProfileButton.jsx","Pages/Utils/SearchButton.jsx","Pages/HeaderWithSearch.jsx","Pages/DrinksPage.jsx","Pages/HeaderWithoutSearch.jsx","Pages/ProfilePage.jsx","Pages/Login.js","Pages/ExplorePage.jsx","Pages/ExploreMealsPage.jsx","Pages/ExploreMealsByIngredient.jsx","Pages/ExploreDrinksPage.jsx","Pages/ExploreDrinksByIngredient.jsx","Pages/ExploreMealsByArea.jsx","Pages/DoneRecipes.jsx","Pages/FavoriteRecipes.jsx","Pages/CustomCarousel.jsx","Pages/Utils/FavoriteButton.jsx","Pages/DrinkDetails.jsx","Pages/MealDetails.jsx","Pages/Utils/CategoriesButtons.jsx","Pages/MealsPage.jsx","Pages/ExploreMealsRecipesByIngredient.jsx","Pages/ExploreDrinksRecipesByIngredient.jsx","Pages/NotFound.jsx","Pages/MealsInProgress.jsx","Pages/DrinkInProgress.jsx","App.js","serviceWorker.js","index.js","Context/RecipesContext.js"],"names":["module","exports","InputSearchMeals","useContext","RecipesContext","mealsAndInputs","meals","search","mealInput","setMealsAndInputs","apiMealsUrl","alert","response","global","Array","isArray","length","to","idMeal","className","type","name","id","data-testid","onChange","ev","target","value","htmlFor","onClick","apiIngredienteRequest","a","fetch","then","resp","json","apiNomeRequest","apiLetraRequest","InputSearchCocktails","useState","setSearch","cocktailInput","setCocktailInput","apiCocktails","api","setApi","drinksList","drinks","idDrink","slice","map","drink","index","key","src","strDrinkThumb","alt","strDrink","RecipesProvider","children","email","setEmail","password","setPassword","searchBar","setsearchBar","mealDetails","setMealDetails","setMeals","setDrinks","contextValue","Provider","Footer","drinkIcon","exploreIcon","mealIcon","ProfileButton","JSON","parse","localStorage","getItem","setItem","stringify","profileIcon","SearchButton","searchIcon","HeaderWithSearch","location","useLocation","pathname","style","alignSelf","includes","DrinksPage","drinkCategories","setDrinkCategories","category","toogle","categoryToogle","setCategoryToogle","fetchDrinkAPI","categoriesDrinksList","drinkArrayCategories","reduce","acc","current","strCategory","Object","keys","useEffect","fetchDrinkCatergoryAPI","handleDrinkCatecory","buttonCategory","categoryDrinks","HeaderWithoutSearch","ProfilePage","currentEmail","clear","Login","placeholder","disabled","test","ExplorePage","ExploreMealsPage","history","useHistory","handleClick","push","ExploreMealsByIngredient","mealsList","fetchAPI","meal","strIngredient","ingredient","aria-hidden","strIngredient1","ExploreMealsByArea","areas","setAreas","selectedArea","setSelectedArea","areaList","fetchAreas","fetchFilterByAreas","filterByAreasAPI","mealList","event","area","strArea","strMealThumb","strMeal","DoneRecipes","lsDoneRecipes","recipe","tags","tag","index1","FavoreiteRecipes","CustomCarousel","props","firstCarousel","secondCarousel","count1","count2","pathIsMeals","Carousel","CarouselItem","Caption","marginBottom","FavoriteButton","drinkDetails","favorite","setFavorite","mealId","replace","drinkId","favoriteRecipes","blackOrWhite","some","item","recipes","favRecipes","filter","storeMealRecipe","alcoholicOrNot","image","recipesToStore","setOrRemoveFavoriteDrinkRecipes","storeDrinkRecipe","strAlcoholic","setFavoriteDrinksRecipes","removeFavoriteDrinksRecipes","blackHeartIcon","whiteHeartIcon","copy","require","DrinkDetalis","setDrinkDetails","copyLink","setCopyLink","locationToClipboard","recipeInProgress","cocktails","test2","youtubeSource","strYoutube","ingredientList","fetchDrinkIdAPi","res","fetchMealAPI","hiddenButton","strInstructions","width","height","title","frameBorder","allow","allowFullScreen","str1","MealDetalis","recipesDone","fetchMealIdAPi","w-100","CategoriesButtons","mealsCategories","handleMealCatecory","categoryMeals","MealsPage","setMealsCategories","categoriesMealsList","mealArrayCategories","fetchMealCatergoryAPI","buttonsUtils","ExploreRecipesByIngredient","ExploreDrinksRecipesByIngredient","NotFound","MealsInProgress","setIngredientList","useParams","lsValue","ingredientes","oldValue","newValue","checked","onCheckboxClick","DrinkInProgress","console","log","App","exact","path","component","MealDetails","DrinkDetails","ExploreMealsByIngredients","ExploreDrinksPage","ExploreDrinksByIngredient","FavoriteRecipes","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createContext"],"mappings":"mIAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,+ICI5B,SAASC,IAAoB,IAAD,EAGtBC,qBAAWC,KAHW,IACjCC,eACJC,EAFqC,EAErCA,MAAOC,EAF8B,EAE9BA,OAAQC,EAFsB,EAEtBA,UAAaC,EAFS,EAETA,kBAChCJ,EAHyC,EAGzCA,eAGMK,EAAc,sDAGdC,EAAQ,SAACC,GACTA,EAASN,OACXG,EACE,CAAEF,OAAQ,GAAIC,UAAW,GAAIF,MAAOM,EAASN,QAG5CM,EAASN,OACZO,EAAOF,MARM,wEAYjB,GAAIG,MAAMC,QAAQT,IAA2B,IAAjBA,EAAMU,OAChC,OAAQ,kBAAC,IAAD,CACNC,GAAE,mBACYX,EAAM,GAAGY,UA2C3B,OACE,yBAAKC,UAAU,gBACb,2BACEC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,cAAY,eACZC,SAAW,SAACC,GAAD,OAAQhB,EAAkB,2BAC9BJ,GAD6B,IACbG,UAAWiB,EAAGC,OAAOC,YAG9C,2BAAOC,QAAQ,eACb,2BACER,KAAK,QACLG,cAAY,0BACZD,GAAG,cACHD,KAAK,SACLQ,QAAU,kBAAMpB,EAAkB,2BAC3BJ,GAD0B,IACVE,OAAQ,oBAPnC,eAYA,2BAAOqB,QAAQ,QACb,2BACER,KAAK,QACLG,cAAY,oBACZD,GAAG,OACHD,KAAK,SACLQ,QAAU,kBAAMpB,EAAkB,2BAAKJ,GAAN,IAAsBE,OAAQ,aANnE,QAUA,2BAAOqB,QAAQ,kBACb,2BACER,KAAK,QACLG,cAAY,4BACZD,GAAG,iBACHD,KAAK,SACLQ,QAAU,kBAAMpB,EAAkB,2BAC3BJ,GAD0B,IACVE,OAtGR,uBA+FnB,kBAYA,4BACEsB,QApFc,WAClB,IAAMC,EAAqB,uCAAG,4BAAAC,EAAA,sEACLC,MAAM,GAAD,OAzBN,sDAyBM,aAA0BxB,IACnDyB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFK,OACtBvB,EADsB,OAG5BD,EAAMC,GAHsB,2CAAH,qDAMrBwB,EAAc,uCAAG,4BAAAL,EAAA,sEACEC,MAAM,GAAD,OAAItB,EAAJ,aAAoBF,IAC7CyB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFF,OACfvB,EADe,OAGrBD,EAAMC,GAHe,2CAAH,qDAMdyB,EAAe,uCAAG,4BAAAN,EAAA,sEACCC,MAAM,GAAD,OAAItB,EAAJ,aAAoBF,IAC7CyB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFD,OAChBvB,EADgB,OAGtBD,EAAMC,GAHgB,2CAAH,qDAUrB,OA/CqB,mBA2CjBL,GAAkD,IAArBC,EAAUQ,QACzCH,EAAOF,MAAM,iDAGPJ,GACR,IAAK,cACHuB,IACA,MACF,IAAK,OACHM,IACA,MACF,IAtDqB,iBAuDnBC,MAsDEjB,KAAK,SACLG,cAAY,mBAHd,c,iKC/GS,SAASe,IAAwB,IAAD,EACjBC,mBAAS,IADQ,mBACtChC,EADsC,KAC9BiC,EAD8B,OAEHD,mBAAS,IAFN,mBAEtCE,EAFsC,KAEvBC,EAFuB,KAKvCC,EAAe,0DALwB,EAMrBxC,qBAAWC,KAA3BwC,EANqC,EAMrCA,IAAKC,EANgC,EAMhCA,OACTC,EAAaF,EAAIG,OAIfpC,EAAQ,SAACC,GACTA,EAASmC,QAAQF,EAAOjC,GACvBA,EAASmC,QAAQlC,EAAOF,MAJd,wEA6CjB,OAA0B,IAAtBmC,EAAW9B,OACN,kBAAC,IAAD,CAAUC,GAAE,mBAAe6B,EAAW,GAAGE,YAG9CF,EAAW9B,OAlDA,KAkDiB8B,EAAaA,EAAWG,MAAM,EAlD/C,KAqDb,yBAAK9B,UAAU,gBACb,2BACEC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,cAAY,eACZC,SAAW,SAACC,GAAD,OAAQiB,EAAiBjB,EAAGC,OAAOC,UAEhD,2BAAOC,QAAQ,eACb,2BACER,KAAK,QACLG,cAAY,0BACZD,GAAG,cACHD,KAAK,SACLQ,QAAU,kBAAMW,EAAU,kBAN9B,eAUA,2BAAOZ,QAAQ,QACb,2BACER,KAAK,QACLG,cAAY,oBACZD,GAAG,OACHD,KAAK,SACLQ,QAAU,kBAAMW,EAAU,WAN9B,QAUA,2BAAOZ,QAAQ,kBACb,2BACER,KAAK,QACLG,cAAY,4BACZD,GAAG,iBACHD,KAAK,SACLQ,QAAU,kBAAMW,EA5FD,qBAsFnB,kBAUA,4BACEX,QApFc,WAClB,IAAMC,EAAqB,uCAAG,4BAAAC,EAAA,sEACLC,MAAM,GAAD,OAdN,0DAcM,aAA0BS,IACnDR,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFK,OACtBvB,EADsB,OAG5BD,EAAMC,GAHsB,2CAAH,qDAMrBwB,EAAc,uCAAG,4BAAAL,EAAA,sEACEC,MAAM,GAAD,OAAIW,EAAJ,aAAqBF,IAC9CR,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFF,OACfvB,EADe,OAGrBD,EAAMC,GAHe,2CAAH,qDAMdyB,EAAe,uCAAG,4BAAAN,EAAA,sEACCC,MAAM,GAAD,OAAIW,EAAJ,aAAqBF,IAC9CR,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFD,OAChBvB,EADgB,OAGtBD,EAAMC,GAHgB,2CAAH,qDAUrB,OApCqB,mBAgCjBL,GAAsD,IAAzBkC,EAAczB,QAC7CH,EAAOF,MAAM,iDAGPJ,GACR,IAAK,cACHuB,IACA,MACF,IAAK,OACHM,IACA,MACF,IA3CqB,iBA4CnBC,MAsDEjB,KAAK,SACLG,cAAY,mBAHd,UAOEuB,EAAWI,KAAI,SAACC,EAAOC,GAAR,OACf,yBAAKjC,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,gBAAuCC,IAAMD,GACjE,yBACE7B,cAAA,UAAiB6B,EAAjB,aACAE,IAAMH,EAAMI,cACZC,IAAI,cAEN,uBAAGjC,cAAA,UAAiB6B,EAAjB,eAAuCD,EAAMM,mB,qCCrH1DzD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,yKC6C5ByD,MAzCf,YAAwC,IAAbC,EAAY,EAAZA,SAAY,EACXpB,mBAAS,IADE,mBAC9BqB,EAD8B,KACvBC,EADuB,OAELtB,mBAAS,IAFJ,mBAE9BuB,EAF8B,KAEpBC,EAFoB,OAGHxB,oBAAS,GAHN,mBAG9ByB,EAH8B,KAGnBC,EAHmB,OAIf1B,mBAAS,CAAEjC,MAAO,GAAIyC,OAAQ,KAJf,mBAI9BH,EAJ8B,KAIzBC,EAJyB,OAKCN,mBAAS,IALV,mBAK9B2B,EAL8B,KAKjBC,EALiB,OAMX5B,mBAAS,IANE,mBAM9BjC,EAN8B,KAMvB8D,EANuB,OAOT7B,mBAAS,IAPA,mBAO9BQ,EAP8B,KAOtBsB,EAPsB,OAQO9B,mBAC1C,CAAEjC,MAAO,GAAIC,OAAQ,GAAIC,UAAW,KATD,mBAY/B8D,EAAe,CAAEV,QACrBC,WACAC,WACAC,cACAC,YACAC,eACArB,MACAC,SACAqB,cACAC,iBACA7D,QACA8D,WACA/D,eAxBmC,KAyBnCI,kBAzBmC,KA0BnCsC,SACAsB,aAGF,OACE,kBAACjE,EAAA,EAAemE,SAAhB,CAAyB5C,MAAQ2C,GAC9BX,I,iGCLQa,MAzBf,WACE,OACE,4BAAQjD,cAAY,UAClB,kBAAC,IAAD,CAAMN,GAAG,YACP,4BAAQG,KAAK,UACX,yBAAKkC,IAAMmB,IAAYjB,IAAI,kBAAkBjC,cAAY,wBAG7D,kBAAC,IAAD,CAAMN,GAAG,aACP,4BAAQG,KAAK,UACX,yBACEkC,IAAMoB,IACNlB,IAAI,oBACJjC,cAAY,yBAIlB,kBAAC,IAAD,CAAMN,GAAG,YACP,4BAAQG,KAAK,UACX,yBAAKkC,IAAMqB,IAAWnB,IAAI,kBAAkBjC,cAAY,wB,iBCrBnD,SAASqD,IACtB,OACE,kBAAC,IAAD,CAAM3D,GAAG,WACP,4BACEG,KAAK,SACLS,QAAU,WACagD,KAAKC,MAAMC,aAAaC,QAAQ,UAEnDD,aACGE,QAAQ,OAAQJ,KAAKK,UAAU,CAAEtB,MAAO,uBAI/C,yBAAKrC,cAAY,kBAAkB+B,IAAM6B,IAAc3B,IAAI,mB,2BCZpD,SAAS4B,IAAgB,IAAD,EACDjF,qBAAWC,KAAvC4D,EAD6B,EAC7BA,UAAWC,EADkB,EAClBA,aAEnB,OACE,4BAAQ3C,GAAG,gBAAgBF,KAAK,SAASS,QAAU,kBAAMoC,GAAcD,KACrE,yBAAKzC,cAAY,iBAAiB+B,IAAM+B,IAAa7B,IAAI,uB,oBCDhD,SAAS8B,IAAoB,IAClCtB,EAAc7D,qBAAWC,KAAzB4D,UACFuB,EAAWC,cAAcC,SAE/B,OACE,oCACE,gCACE,kBAACb,EAAD,MACA,wBACErD,cAAY,aACZmE,MAAQ,CAAEC,UAAW,WAEpBJ,EAASK,SAAS,YAAc,UAAY,WAE/C,kBAACR,EAAD,OAEDpB,GAA0B,aAAbuB,EAA0B,kBAACrF,EAAA,EAAD,MAAuB,KAC9D8D,GAA0B,aAAbuB,EAA0B,kBAACjD,EAAA,EAAD,MAA2B,MCpB1D,SAASuD,IAAc,IAAD,EACL1F,qBAAWC,KAAjC2C,EAD2B,EAC3BA,OAAQsB,EADmB,EACnBA,UADmB,EAEW9B,mBAAS,IAFpB,mBAE5BuD,EAF4B,KAEXC,EAFW,OAGSxD,mBAAS,CAAEyD,SAAU,GAAIC,QAAQ,IAH1C,mBAG5BC,EAH4B,KAGZC,EAHY,cAOpBC,IAPoB,2EAOnC,8BAAArE,EAAA,4DACoB,4DADpB,SAEyBC,MADL,6DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF9D,OAEQvB,EAFR,QAGMkC,EAAalC,EAASmC,QACX/B,OAPF,KAOmB8B,EAAaA,EAAWG,MAAM,EAPjD,KAQboB,EAAUvB,GALZ,4CAPmC,kEAenC,gCAAAf,EAAA,4DACsB,8DADtB,SAEyBC,MADH,+DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFhE,OAEQvB,EAFR,OAGQyF,EAHR,YAGmCzF,EAASmC,QACpCuD,EAAuBD,EAAqBE,QAAO,SAACC,EAAKC,GAAa,IAClEC,EAAgBD,EAAhBC,YACR,OAAO,2BAAKF,GAAZ,kBAAkBE,EAAcA,MAC/B,IACHX,EAAmBY,OAAOC,KAAKN,GAAsBrD,MAAM,EAlBhD,IAUb,4CAfmC,sBA0BnC4D,qBAAU,WACRT,IA3BiC,mCA4BjCU,KACC,IAEH,IAAMC,EAAmB,uCAAG,WAAOf,GAAP,mBAAAjE,EAAA,6DACpBiF,EADoB,mEACyDhB,GADzD,SAEHhE,MAAMgF,GAAgB/E,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFvC,OAEpBvB,EAFoB,OAGpBqG,EAHoB,YAGCrG,EAASmC,OAAOE,MAAM,EA9BpC,KA+BboB,EAAU4C,GAJgB,2CAAH,sDAOzB,OACE,oCACE,kBAAC,EAAD,MAEEnB,EACG5C,KAAI,SAAC8C,GAAD,OACH,4BACE7E,UAAU,kBACVC,KAAK,SACLiC,IAAM2C,EACNzE,cAAA,UAAiByE,EAAjB,oBACAnE,QAAU,WACJqE,EAAeD,SACbD,IAAaE,EAAeF,WAC9BI,IACAD,EAAkB,CAAEH,WAAUC,QAASC,EAAeD,UAEpDD,IAAaE,EAAeF,WAC9Be,EAAoBf,GACpBG,EAAkB,CAAEH,WAAUC,QAASC,EAAeD,WAGrDC,EAAeD,SAClBc,EAAoBf,GACpBG,EAAkB,CAAEH,WAAUC,QAASC,EAAeD,YAIzDD,MAGT,4BACE5E,KAAK,SACLG,cAAY,sBACZM,QAAUuE,GAHZ,OAQErD,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACT,kBAAC,IAAD,CAAMC,IAAMD,EAAQnC,GAAE,mBAAekC,EAAMH,UACzC,yBAAK7B,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,iBACpB,yBACEE,IAAG,UAAMH,EAAMI,eACfC,IAAML,EAAMM,SACZlC,cAAA,UAAiB6B,EAAjB,eAEF,wBAAI7B,cAAA,UAAiB6B,EAAjB,eAAqC,2BAAID,EAAMM,gBAK3D,kBAAC,EAAD,OC5FS,SAASyD,IACtB,OACE,gCACE,kBAACtC,EAAD,MACA,wBAAIrD,cAAY,aAAamE,MAAQ,CAAEC,UAAW,WAAlD,YCHS,SAASwB,IACtB,IAAIC,EAAevC,KAAKC,MAAMC,aAAaC,QAAQ,SAEnD,OADKoC,IAAcA,EAAe,CAAExD,MAAO,KAEzC,oCACE,kBAACsD,EAAD,MACA,wBAAI3F,cAAY,cAAhB,UACA,wBAAIA,cAAY,iBAAkB6F,EAAaxD,OAC/C,kBAAC,IAAD,CAAM3C,GAAG,oBACP,4BAAQG,KAAK,SAASG,cAAY,oBAAlC,oBAIF,kBAAC,IAAD,CAAMN,GAAG,uBACP,4BAAQG,KAAK,SAASG,cAAY,wBAAlC,uBAIF,kBAAC,IAAD,CAAMN,GAAG,KACP,4BACEG,KAAK,SACLS,QAAU,WAAQkD,aAAasC,SAC/B9F,cAAY,sBAHd,SAQF,kBAAC,EAAD,OC3BS,SAAS+F,IAAS,IAAD,EACqBnH,qBAAWC,KAAtDwD,EADsB,EACtBA,MAAOC,EADe,EACfA,SAAUC,EADK,EACLA,SAAUC,EADL,EACKA,YAkBnC,OACE,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACC,IACD,mCACA,mCACA,qCAGJ,2BACEA,UAAU,YACVC,KAAK,QACLmG,YAAY,QACZhG,cAAY,cACZC,SAAW,SAACC,GAAD,OAAQoC,EAASpC,EAAGC,OAAOC,UAExC,2BACER,UAAU,YACVC,KAAK,WACLmG,YAAY,WACZhG,cAAY,iBACZC,SAAW,SAACC,GAAD,OAAQsC,EAAYtC,EAAGC,OAAOC,UAE3C,kBAAC,IAAD,CAAMV,GAAG,YACP,4BACEE,UAAU,YACVC,KAAK,SACLG,cAAY,mBACZiG,WAnDa,8BAGJC,KAAK7D,IAAUE,EAAS9C,OAF3B,GAmDNa,QAAU,kBA1ChBkD,aAAaE,QAAQ,aAAc,KACnCF,aAAaE,QAAQ,iBAAkB,UACvCF,aAAaE,QAAQ,OAAQJ,KAAKK,UAAU,CAAEtB,aAmC1C,WClDO,SAAS8D,IACtB,OACE,6BAGE,gCACE,kBAAC9C,EAAD,MACA,wBAAIrD,cAAY,aAAamE,MAAQ,CAAEC,UAAW,WAAlD,YACA,+BAIF,kBAAC,IAAD,CAAM1E,GAAG,qBACP,4BAAQE,UAAU,kBAAkBI,cAAY,eAAeH,KAAK,UAApE,qBAIF,kBAAC,IAAD,CAAMH,GAAG,qBACP,4BAAQE,UAAU,kBAAkBI,cAAY,iBAAiBH,KAAK,UAAtE,qBAIF,kBAAC,EAAD,OCrBS,SAASuG,IACtB,IAAMC,EAAUC,cAEVC,EAAW,uCAAG,8BAAA/F,EAAA,sEACKC,MAAM,GAAD,OANP,uDAOlBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFL,OACZvB,EADY,OAIVM,EAAWN,EAASN,MAAM,GAA1BY,OACR0G,EAAQG,KAAR,mBAAyB7G,IALP,2CAAH,qDAQjB,OACE,6BACE,gCACE,kBAAC0D,EAAD,MACA,wBAAIrD,cAAY,aAAamE,MAAQ,CAAEC,UAAW,WAAlD,oBAGA,+BAIF,kBAAC,IAAD,CAAM1E,GAAG,kCACP,4BACEE,UAAU,kBACVI,cAAY,wBACZH,KAAK,UAHP,qBAQF,kBAAC,IAAD,CAAMH,GAAG,0BACP,4BAAQE,UAAU,kBAAkBI,cAAY,kBAAkBH,KAAK,UAAvE,wBAKF,4BAAQS,QAAUiG,EAAcvG,cAAY,mBAAmBH,KAAK,UAApE,kBAIA,kBAAC,EAAD,OC1CS,SAAS4G,IAA4B,IAAD,EACH7H,qBAAWC,KAAjDC,EADyC,EACzCA,eAAgBI,EADyB,EACzBA,kBADyB,EAEvB8B,mBAAS,IAFc,mBAE1CjC,EAF0C,KAEnC8D,EAFmC,KAMjDyC,qBAAU,WAAM,4CACd,8BAAA9E,EAAA,4DACmB,0DADnB,SAEyBC,MADN,2DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF7D,OAEQvB,EAFR,QAGMqH,EAHN,YAGsBrH,EAASN,QACfU,OARH,KAQoBiH,EAAYA,EAAUhF,MAAM,EARhD,KASXmB,EAAS6D,GALX,4CADc,uBAAC,WAAD,wBAQdC,KACC,IAWH,OACE,6BACE,kBAAChB,EAAD,MACA,wBAAI3F,cAAY,cAAhB,yBACCjB,EAAM4C,KAAI,SAACiF,EAAM/E,GAAP,OACT,kBAAC,IAAD,CAAMC,IAAMD,EAAQnC,GAAE,+BAA2BkH,EAAKC,gBACpD,yBACEvG,QAAU,kBAhBCwG,EAgBiBF,EAAKC,mBAfd,uCAAG,4BAAArG,EAAA,sEACLC,MAAM,GAAD,OAfN,sDAeM,aAA0BqG,IACnDpG,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFK,OACtBvB,EADsB,OAG5BH,EAAkB,2BAAKJ,GAAN,IAAsBC,MAAOM,EAASN,SAH3B,2CAAH,oDAK3BwB,GANkB,IAACuG,GAiBXC,cAAY,OACZnH,UAAU,OACVI,cAAA,UAAiB6B,EAAjB,qBAEA,yBACEE,IAAG,UAlCA,iDAkCA,OAAe6E,EAAKC,cAApB,cACH5E,IAAM2E,EAAKC,cACX7G,cAAA,UAAiB6B,EAAjB,eAEF,wBACE7B,cAAA,UAAiB6B,EAAjB,eAEA,2BAAI+E,EAAKC,qBAKjB,kBAAC,EAAD,OClDS,SAAST,IACtB,IAAMC,EAAUC,cAEVC,EAAW,uCAAG,8BAAA/F,EAAA,sEACKC,MAAM,GAAD,OANN,2DAOnBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFL,OACZvB,EADY,OAIVoC,EAAYpC,EAASmC,OAAO,GAA5BC,QACR4E,EAAQG,KAAR,mBAAyB/E,IALP,2CAAH,qDAOjB,OACE,6BACE,gCACE,kBAAC4B,EAAD,MACA,wBAAIrD,cAAY,aAAamE,MAAQ,CAAEC,UAAW,WAAlD,oBAGA,+BAIF,kBAAC,IAAD,CAAM1E,GAAG,kCACP,4BAAQM,cAAY,wBAAwBH,KAAK,UAAjD,qBAIF,kBAAC,IAAD,CAAMH,GAAG,0BACP,4BAAQuG,UAAQ,EAACjG,cAAY,GAAGH,KAAK,UAArC,aAKF,4BAAQS,QAAUiG,EAAcvG,cAAY,mBAAmBH,KAAK,UAApE,kBAIA,kBAAC,EAAD,OCrCS,SAASuG,IAAmB,MAEXxH,qBAAWC,KAAjC2C,EAFiC,EAEjCA,OAAQsB,EAFyB,EAEzBA,UAKhBwC,qBAAU,WAAM,4CACd,8BAAA9E,EAAA,4DACoB,8DADpB,SAEyBC,MADL,+DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF9D,OAEQvB,EAFR,QAGMkC,EAHN,YAGuBlC,EAASmC,SACf/B,OATJ,KASqB8B,EAAaA,EAAWG,MAAM,EATnD,KAUXoB,EAAUvB,GALZ,4CADc,uBAAC,WAAD,wBAQdoF,KACC,IAaH,OACE,6BACE,kBAAChB,EAAD,MACA,wBAAI3F,cAAY,cAAhB,yBACCwB,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACV,kBAAC,IAAD,CAAMC,IAAMD,EAAQnC,GAAE,+BAA2BkC,EAAMoF,iBACrD,yBACE1G,QAAU,kBAlBCwG,EAkBiBlF,EAAMoF,oBAjBf,uCAAG,8BAAAxG,EAAA,sEACLC,MAAM,GAAD,OAfN,0DAeM,aAA0BqG,IACnDpG,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFK,OACtBvB,EADsB,QAGxBkC,EAHwB,YAGPlC,EAASmC,SACf/B,OApBJ,KAoBqB8B,EAAaA,EAAWG,MAAM,EApBnD,KAqBXoB,EAAUvB,GALkB,2CAAH,oDAO3BhB,GARkB,IAACuG,GAmBXlH,UAAU,OACVI,cAAA,UAAiB6B,EAAjB,oBACAkF,cAAY,QAEZ,yBACEhF,IAAG,UAtCA,qDAsCA,OAAeH,EAAMoF,eAArB,cACH/E,IAAML,EAAMoF,eACZhH,cAAA,UAAiB6B,EAAjB,eAEF,wBAAI7B,cAAA,UAAiB6B,EAAjB,eAAqC,2BAAID,EAAMoF,sBAIzD,kBAAC,EAAD,OCnDS,SAASC,IAAsB,IAAD,EACjBjG,mBAAS,IADQ,mBACpCkG,EADoC,KAC7BC,EAD6B,OAEHnG,mBAAS,OAFN,mBAEpCoG,EAFoC,KAEtBC,EAFsB,OAGjBrG,mBAAS,IAHQ,mBAGpCjC,EAHoC,KAG7B8D,EAH6B,KAyB3C,OApBAyC,qBAAU,WAAM,4CACd,8BAAA9E,EAAA,4DACmB,0DADnB,SAEyBC,MADN,2DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF7D,OAEQvB,EAFR,OAGQiI,EAAWjI,EAASN,MAC1BoI,EAASG,GAJX,4CADc,uBAAC,WAAD,wBAOdC,KACC,IACHjC,qBAAU,WAAO,SACAkC,IADD,2EACd,gCAAAhH,EAAA,6DACQiH,EADR,+DACmFL,GADnF,SAEyB3G,MAAMgH,GAAkB/G,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFrE,OAEQvB,EAFR,OAIEqI,GADIA,EAAWrI,EAASN,MAAT,YAAqBM,EAASN,OAAS,IAClC2C,MAAM,EAff,IAgBXmB,EAAS6E,GALX,4CADc,sBAQO,QAAjBN,GAAwBI,IACxBJ,GAAcI,MACjB,CAACJ,IAEF,oCACE,kBAACrD,EAAD,MACA,wBAAI/D,cAAY,aAAamE,MAAQ,CAAEC,UAAW,WAAlD,mBACA,4BACEhE,MAAQgH,EACRnH,SAAW,SAAC0H,GAAD,OAAWN,EAAgBM,EAAMxH,OAAOC,QACnDJ,cAAY,2BACZD,GAAG,SAEFmH,EAAMvF,KAAI,SAACiG,GAAD,OACT,4BACE9F,IAAM8F,EAAKC,QACXzH,MAAQwH,EAAKC,QACb7H,cAAA,UAAiB4H,EAAKC,QAAtB,YAECD,EAAKC,YAGV,4BACE5H,SAAW,SAAC0H,GAAD,OAAWN,EAAgBM,EAAMxH,OAAOC,QACnDJ,cAAY,cAFd,QAODjB,EAAM4C,KAAI,SAACiF,EAAM/E,GAAP,OACT,kBAAC,IAAD,CAAMC,IAAMD,EAAQnC,GAAE,mBAAekH,EAAKjH,SACxC,yBAAKC,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,iBACpB,yBACEE,IAAM6E,EAAKkB,aACX7F,IAAM2E,EAAKkB,aACX9H,cAAA,UAAiB6B,EAAjB,eAEF,wBAAI7B,cAAA,UAAiB6B,EAAjB,eAAsC+E,EAAKmB,cAIrD,kBAAC,EAAD,OChES,SAASC,IACtB,IAAIC,EAAgBzE,aAAaC,QAAQ,gBAAkB,KAG3D,OAFAwE,EAAgB3E,KAAKC,MAAM0E,GAGzB,oCACE,kBAACtC,EAAD,MACA,wBAAI3F,cAAY,cAAhB,mBACA,kBAAC,IAAD,CAAMN,GAAG,KACP,4BAAQG,KAAK,SAASG,cAAY,qBAAlC,QAIF,kBAAC,IAAD,CAAMN,GAAG,KACP,4BAAQG,KAAK,SAASG,cAAY,sBAAlC,SAIF,kBAAC,IAAD,CAAMN,GAAG,KACP,4BAAQG,KAAK,SAASG,cAAY,uBAAlC,WAIDiI,EAActG,KAAI,SAACuG,EAAQrG,GAAT,OACjB,yBAAKC,IAAMD,GACRqG,EAAOC,KAAKxG,KAAI,SAACyG,EAAKC,GAAN,OACf,uBACEvG,IAAMuG,EACNrI,cAAA,UAAiB6B,EAAjB,YAA0BqG,EAAOC,KAAKE,GAAtC,oBAECD,MAEL,yBACErG,IAAG,UAAMF,GACTI,IAAI,cACJjC,cAAA,UAAiB6B,EAAjB,uBAEF,uBAAG7B,cAAA,UAAiB6B,EAAjB,0BACH,uBAAG7B,cAAA,UAAiB6B,EAAjB,sBACH,uBAAG7B,cAAA,UAAiB6B,EAAjB,2BACH,4BAAQhC,KAAK,SAASG,cAAA,UAAiB6B,EAAjB,0BAAtB,qBCzCK,SAASyG,IACtB,OACE,oCACE,kBAAC3C,EAAD,MACA,wBAAI3F,cAAY,cAAhB,uB,oBCDS,SAASuI,EAAT,GAEZ,IAAD,IADEC,MAASC,EACX,EADWA,cAAeC,EAC1B,EAD0BA,eAEtBC,EAAS,EACTC,EAAS,EAEPC,EAAc5E,cAAcC,SAASG,SAAS,YAEpD,OACE,oCACE,kBAACyE,EAAA,EAAD,KACGL,EAAc9G,KAAI,SAACC,EAAOC,GAEzB,OADIA,EAAQ,IAAG8G,GAAU,GAEvB,kBAACI,EAAA,EAAD,CACEjH,IAAG,eAAWD,GACd7B,cAAA,UAAiB2I,EAAjB,wBAEA,yBACE/I,UAAU,gBACVmC,IAAM8G,EAAcjH,EAAMI,cAAgBJ,EAAMkG,aAChD7F,IAAI,UAEN,kBAAC6G,EAAA,EAASE,QAAV,KACE,2BAAIpH,EAAMuD,aACV,uBACEnF,cAAA,UAAiB2I,EAAjB,yBAECE,EAAcjH,EAAMM,SAAWN,EAAMmG,eAMlD,kBAACe,EAAA,EAAD,CAAU3E,MAAQ,CAAE8E,aAAc,UAC/BP,EAAe/G,KAAI,SAACC,EAAOC,GAE1B,OADIA,EAAQ,IAAG+G,GAAU,GAEvB,kBAACG,EAAA,EAAD,CACEjH,IAAG,eAAWD,GACd7B,cAAA,UAAiB4I,EAAjB,wBAGA,yBACEhJ,UAAU,gBACVmC,IAAM8G,EAAcjH,EAAMI,cAAgBJ,EAAMkG,aAChD7F,IAAI,SAEN,kBAAC6G,EAAA,EAASE,QAAV,KACE,2BAAIpH,EAAMuD,aACV,uBACEnF,cAAA,UAAiB4I,EAAjB,yBAECC,EAAcjH,EAAMM,SAAWN,EAAMmG,gB,sCCrDzC,SAASmB,EAAT,GAAmE,IAAD,IAAxCV,MAAS7F,EAA+B,EAA/BA,YAAawG,EAAkB,EAAlBA,aAAkB,EAC/CnI,oBAAS,GADsC,mBACxEoI,EADwE,KAC9DC,EAD8D,KAEzErF,EAAWC,cAAcC,SAASG,SAAS,YAC3CiF,EAASrF,cAAcC,SAASqF,QAAQ,YAAa,IACrDC,EAAUvF,cAAcC,SAASqF,QAAQ,YAAa,IAEtDE,EAAkBnG,KACrBC,MAAMC,aAAaC,QAAQ,qBAAuB,GAC/CiG,EAAe1F,EAAWyF,EAC7BE,MAAK,SAACC,GAAD,OAAUA,EAAK7J,KAAOuJ,KAAUG,EACrCE,MAAK,SAACC,GAAD,OAAUA,EAAK7J,KAAOyJ,KAEzBhG,aAAaC,QAAQ,oBACxBD,aAAaE,QAAQ,kBAAmB,MAG1C,IA8CMwC,EAAOwD,EAdsB,WACjC,IAAMG,EAAUvG,KAAKC,MAAMC,aAAaC,QAAQ,oBAC1CqG,EAAaxG,KAAKK,UAAUkG,EAAQE,QAAO,SAAC7B,GAAD,OAAYA,EAAOnI,KAAOuJ,MAC3E9F,aAAaE,QAAQ,kBAAmBoG,GACxCT,GAAaD,IApCiB,WAC9B,IAAMS,EAAUvG,KAAKC,MAAMC,aAAaC,QAAQ,oBAC1CuG,EAAkB,CAAEjK,GAAI4C,EAAYhD,OACxC8E,SAAU9B,EAAYwC,YACtBtF,KAAM,SACN+H,KAAMjF,EAAYkF,QAClBoC,eAAgB,GAChBnK,KAAM6C,EAAYoF,QAClBmC,MAAOvH,EAAYmF,cAErB+B,EAAQrD,KAAKwD,GACb,IAAMG,EAAiB7G,KAAKK,UAAUkG,GACtCrG,aAAaE,QAAQ,kBAAmByG,GACxCd,GAAaD,IAsCTgB,EAAkC,WACjCV,GArC0B,WAC/B,IAAMG,EAAUvG,KAAKC,MAAMC,aAAaC,QAAQ,oBAC1C4G,EAAmB,CAAEtK,GAAIoJ,EAAa1H,QAC1CgD,SAAU0E,EAAahE,YACvBtF,KAAM,SACN+H,KAAM,GACNqC,eAAgBd,EAAamB,aAC7BxK,KAAMqJ,EAAajH,SACnBgI,MAAOf,EAAanH,eAGtB6H,EAAQrD,KAAK6D,GACb,IAAMF,EAAiB7G,KAAKK,UAAUkG,GACtCrG,aAAaE,QAAQ,kBAAmByG,GACxCd,GAAaD,GAuBMmB,GACfb,GAd8B,WAClC,IAAMG,EAAUvG,KAAKC,MAAMC,aAAaC,QAAQ,oBAC1CqG,EAAaxG,KAAKK,UAAUkG,EAAQE,QAAO,SAAC7B,GAAD,OAAYA,EAAOnI,KAAOyJ,MAC3EhG,aAAaE,QAAQ,kBAAmBoG,GACxCT,GAAaD,GAUKoB,IAGpB,OACE,4BACE3K,KAAK,SACLS,QAAU,WACJ0D,GAXRkC,IAYSlC,GAAUoG,MAGjB,yBACEpK,cAAY,eACZ+B,IAAM2H,EAAee,IAAiBC,IACtCzI,IAAI,wBClFZ,IAAM0I,GAAOC,EAAQ,IAEN,SAASC,KAAgB,IAAD,EACG7J,mBAAS,IADZ,mBAC9BmI,EAD8B,KAChB2B,EADgB,OAEL9J,oBAAS,GAFJ,mBAE9B+J,EAF8B,KAEpBC,EAFoB,OAGXhK,mBAAS,IAHE,mBAG9BjC,EAH8B,KAGvB8D,EAHuB,KAM/BoI,EAAsBhH,cAAcC,SAOpCgC,EADc5C,KAAKC,MAAMC,aAAaC,QAAQ,iBACxB,GACxByH,EAAmB5H,KACpBC,MAAMC,aAAaC,QAAQ,sBAC1ByH,IAAkBA,EAAmBA,EAAiBC,WACrDD,IAAkBA,EAAmB,IAE1C,IAAMzC,EAAgB1J,EAAMU,OAAS,CAACV,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAM,GAChE2J,EAAiB3J,EAAMU,OAAS,CAACV,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAM,GAEjEgB,EAAKkE,cAAcC,SAASqF,QAAQ,YAAa,IACjD6B,EAAQlF,EAAKyD,MAAK,SAACzB,GAAD,OAAYA,EAAOnI,KAAOA,KAG5CsL,EAAgBlC,EAAamC,WAAanC,EAC7CmC,WAAW/B,QAAQ,YAAa,UAAY,GAMzCgC,EAAiB,GACjBC,EAAe,uCAAG,4BAAAhL,EAAA,sEACCC,MAAM,4DAAD,OAA6DV,IAAMW,MAAK,SAAC+K,GAAD,OAASA,EAAI7K,UAD3F,OAChBvB,EADgB,OAEtByL,EAAgBzL,EAASmC,OAAO,IAFV,2CAAH,qDAlCgB,4CAuCrC,4BAAAhB,EAAA,4DACmB,wDADnB,SAEyBC,MADN,yDACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF7D,OAEQvB,EAFR,OAGEwD,EAASxD,EAASN,MAAM2C,MAAM,EAtCpB,IAmCZ,4CAvCqC,sBA6CrC4D,qBAAU,YA7C2B,mCA8CnCoG,GACAF,MACC,IAEH,IAAK,IAAI3J,EAAQ,EAAGA,GAnBL,GAmBsBA,GAAS,EAAG,CACH,IAAD,EAA3C,GAAIsH,EAAa,gBAAD,OAAiBtH,IAC/B0J,EAAe/E,MAAf,wCACiB3E,GAAUsH,EAAa,gBAAD,OAAiBtH,KADxD,+BAEaA,GAAUsH,EAAa,aAAD,OAActH,KAFjD,IAOJ,IAAM8J,EACJ,4BAAQ9L,KAAK,SAASG,cAAY,mBAAmBJ,UAAU,qBAC5DsL,EAAiBnL,GAAM,oBAAsB,mBAGlD,OACE,oCACE,yBACEgC,IAAMoH,EAAanH,cACnBC,IAAI,cACJjC,cAAY,iBAEd,uBAAGA,cAAY,gBAAiBmJ,EAAajH,UAC7C,uBAAGlC,cAAY,mBAAoBmJ,EAAamB,cAChD,4BACEhK,QAAU,WACR0K,GAAY,GACZL,GApEiB,+BAA2BM,KAsE9CpL,KAAK,SACLG,cAAY,aANd,gBAUA,kBAACkJ,EAAD,CAAgBV,MAAQ,CAAEW,kBACzB4B,GAAY,4CACb,uBAAG/K,cAAY,mBAAmBmJ,EAAahE,aAC/C,4BACIoG,EAAe5J,KAAI,SAACmF,EAAYjF,GAAb,OACnB,wBAAIC,IAAMD,EAAQ7B,cAAA,UAAiB6B,EAAjB,iCAAlB,UAEOiF,EAAW,cAAD,OAAejF,EAAQ,IAFxC,8BAGQiF,EAAW,UAAD,OAAWjF,EAAQ,UAIzC,gDACA,uBAAG7B,cAAY,gBAAgBmJ,EAAayC,iBAC5C,4BACE5L,cAAY,QACZ6L,MAAM,MACNC,OAAO,MACP/J,IAAMsJ,EACNU,MAAM,uBACNC,YAAY,IACZC,MAAM,2FAENC,gBA5EcC,4FA8EhB,kBAAC5D,EAAD,CAAgBC,MAAQ,CAAEC,gBAAeC,oBACzC,kBAAC,IAAD,CAAMhJ,GAAE,mBAAeK,EAAf,iBACJqL,EAAuB,KAAfO,I,UC/GZhB,GAAOC,EAAQ,IAEN,SAASwB,KAAe,IAAD,EACEpL,mBAAS,IADX,mBAC7B2B,EAD6B,KAChBC,EADgB,OAEJ5B,oBAAS,GAFL,mBAE7B+J,EAF6B,KAEnBC,EAFmB,OAIRhK,mBAAS,IAJD,mBAI7BQ,EAJ6B,KAIrBsB,EAJqB,KAM9BuJ,EAAc/I,KAAKC,MAAMC,aAAaC,QAAQ,gBAChDyH,EAAmB5H,KACpBC,MAAMC,aAAaC,QAAQ,sBAC1ByH,IAAkBA,EAAmBA,EAAiBnM,OACrDmM,IAAkBA,EAAmB,IAC1C,IAAMhF,EAAOmG,GAAe,GAItBpB,EAAsBhH,cAAcC,SAMpCnE,EAAKkE,cAAcC,SAASqF,QAAQ,YAAa,IACjD6B,EAAQlF,EAAKyD,MAAK,SAACzB,GAAD,OAAYA,EAAOnI,KAAOA,KAG5CsL,EAAgB1I,EAAY2I,WAAa3I,EAC5C2I,WAAW/B,QAAQ,YAAa,UAAY,GAMzCgC,EAAiB,GACjBe,EAAc,uCAAG,4BAAA9L,EAAA,sEACEC,MAAM,wDAAD,OAAyDV,IAAMW,MAAK,SAAC+K,GAAD,OAASA,EAAI7K,UADxF,OACfvB,EADe,OAErBuD,EAAevD,EAASN,MAAM,IAFT,2CAAH,qDAjCgB,4CAsCpC,4BAAAyB,EAAA,4DACoB,4DADpB,SAEyBC,MADL,6DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF9D,OAEQvB,EAFR,OAGEyD,EAAUzD,EAASmC,OAAOE,MAAM,EA7BtB,IA0BZ,4CAtCoC,sBA4CpC4D,qBAAU,YA5C0B,mCA6ClCT,GACAyH,MACC,IAKH,IAHA,IAAM7D,EAAgBjH,EAAO/B,OAAS,CAAC+B,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAM,GACpEkH,EAAiBlH,EAAO/B,OAAS,CAAC+B,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAM,GAElEK,EAAQ,EAAGA,GAtBL,GAsBsBA,GAAS,EAAG,CACG,IAAD,EAAjD,GAA6C,KAAzCc,EAAY,gBAAD,OAAiBd,IAC9B0J,EAAe/E,MAAf,wCACiB3E,GAAUc,EAAY,gBAAD,OAAiBd,KADvD,+BAEaA,GAAUc,EAAY,aAAD,OAAcd,KAFhD,IAOJ,IAAM8J,EACJ,4BACE9L,KAAK,SACLG,cAAY,mBACZJ,UAAU,qBAETsL,EAAiBnL,GAAM,oBAAsB,mBAGlD,OACE,oCACE,yBACEgC,IAAMY,EAAYmF,aAClB7F,IAAI,cACJjC,cAAY,iBAEd,uBAAGA,cAAY,gBAAiB2C,EAAYoF,SAC5C,4BACEzH,QAAU,WACR0K,GAAY,GACZL,GAhEiB,+BAA2BM,KAkE9CpL,KAAK,SACLG,cAAY,aANd,gBAUA,kBAACkJ,EAAD,CAAgBV,MAAQ,CAAE7F,iBACzBoI,GAAY,4CACb,uBAAG/K,cAAY,mBAAmB2C,EAAYwC,aAC9C,4BACIoG,EAAe5J,KAAI,SAACmF,EAAYjF,GAAb,OACnB,wBAAIC,IAAMD,EAAQ7B,cAAA,UAAiB6B,EAAjB,iCAAlB,UAEOiF,EAAW,cAAD,OAAejF,EAAQ,IAFxC,8BAGQiF,EAAW,UAAD,OAAWjF,EAAQ,UAIzC,gDACA,uBAAG7B,cAAY,gBAAgB2C,EAAYiJ,iBAC3C,mCACEW,SAAA,EACAxK,IAAMsJ,EACNrL,cAAY,QACZ+L,MAAM,uBACNC,YAAY,IACZC,MAAM,2FAENC,gBAjFcC,4FAmFhB,kBAAC5D,EAAD,CAAgBC,MAAQ,CAAEC,gBAAeC,oBACzC,kBAAC,IAAD,CAAMhJ,GAAE,mBAAeK,EAAf,iBACJqL,EAAuB,KAAfO,ICzHH,SAASa,GAAT,GAC4D,IAAD,IAD9BhE,MAASiE,EACqB,EADrBA,gBAAiB9H,EACI,EADJA,eACpE+G,EAAwE,EAAxEA,aAAc9G,EAA0D,EAA1DA,kBAAmB9F,EAAuC,EAAvCA,eAAgBI,EAAuB,EAAvBA,kBAE3CwN,EAAkB,uCAAG,WAAOjI,GAAP,mBAAAjE,EAAA,6DACnBiF,EADmB,+DACsDhB,GADtD,SAEFhE,MAAMgF,GAAgB/E,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFxC,OAEnBvB,EAFmB,OAGnBsN,EAHmB,YAGCtN,EAASN,MAAM2C,MAAM,EAJlC,KAKbxC,EAAkB,2BAAKJ,GAAN,IAAsBC,MAAO4N,KAJrB,2CAAH,sDAOxB,OACE,oCAEIF,EAAgB9K,KACd,SAAC8C,GAAD,OACE,4BACE7E,UAAU,kBACVC,KAAK,SACLiC,IAAM2C,EACNnE,QAAU,WACJqE,EAAeD,SACbD,IAAaE,EAAeF,WAC9BiH,IACA9G,EAAkB,CAAEH,WAAUC,QAASC,EAAeD,UAEpDD,IAAaE,EAAeF,WAC9BiI,EAAmBjI,GACnBG,EAAkB,CAAEH,WAAUC,OAAQC,EAAeD,WAGpDC,EAAeD,SAClBgI,EAAmBjI,GACnBG,EAAkB,CAAEH,WAAUC,QAASC,EAAeD,WAG1D1E,cAAA,UAAiByE,EAAjB,qBAECA,MAIT,4BACE5E,KAAK,SACLG,cAAY,sBACZM,QAAUoL,GAHZ,QCpCS,SAASkB,KAAa,IAAD,EACY5L,mBAAS,IADrB,mBAC3ByL,EAD2B,KACVI,EADU,OAEU7L,mBAAS,CAAEyD,SAAU,GAAIC,QAAQ,IAF3C,mBAE3BC,EAF2B,KAEXC,EAFW,OAKMhG,qBAAWC,KAF3CC,EAH0B,EAG1BA,eACYC,EAJc,EAIhCD,eAAkBC,MAClBG,EALgC,EAKhCA,kBAAmB0D,EALa,EAKbA,eACfoB,EAAWC,cAAcC,SANG,SAUnBwH,IAVmB,2EAUlC,8BAAAlL,EAAA,4DACmB,wDADnB,SAEyBC,MADN,yDACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAF7D,OAEQvB,EAFR,QAGMqH,EAHN,YAGsBrH,EAASN,QACfU,OAPD,KAOkBiH,EAAYA,EAAUhF,MAAM,EAP9C,KAQbxC,EAAkB,2BAAKJ,GAAN,IAAsBC,MAAO2H,KALhD,4CAVkC,kEAiBlC,gCAAAlG,EAAA,4DACsB,0DADtB,SAEyBC,MADH,2DACsBC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAFhE,OAEQvB,EAFR,OAGQyN,EAHR,YAGkCzN,EAASN,OACnCgO,EAAsBD,EAAoB9H,QAAO,SAACC,EAAKC,GAAa,IAChEC,EAAgBD,EAAhBC,YACR,OAAO,2BAAKF,GAAZ,kBAAkBE,EAAcA,MAC/B,IACH0H,EAAmBzH,OAAOC,KAAK0H,GAAqBrL,MAAM,EAjB/C,IASb,4CAjBkC,sBA4BlC4D,qBAAU,WACRoG,IA7BgC,mCA8BhCsB,KACC,IAEH,IAAMC,EAAe,CAAER,kBACrB9H,iBACA+G,eACA9G,oBACA1F,oBACAJ,kBACF,OACE,oCACE,kBAACiF,EAAD,MACCC,EAASK,SAAS,aAAe,kBAACmI,GAAD,CAAmBhE,MAAQyE,IAC5DjJ,EAASK,SAAS,aAAetF,EAAM4C,KAAI,SAACiF,EAAM/E,GAAP,OAC1C,kBAAC,IAAD,CACEvB,QAAU,kBAAMsC,EAAegE,IAC/B9E,IAAMD,EACNnC,GAAE,mBAAekH,EAAKjH,SAEtB,yBAAKC,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,iBACpB,yBACEE,IAAG,UAAM6E,EAAKkB,cACd7F,IAAM2E,EAAKC,cACX7G,cAAA,UAAiB6B,EAAjB,eAEF,wBAAI7B,cAAA,UAAiB6B,EAAjB,eAAqC,2BAAI+E,EAAKmB,eAIxD,kBAAC,EAAD,OC7DS,SAASmF,KAA8B,IAC1BnO,EAAYH,qBAAWC,KAAzCC,eAAkBC,MAC1B,OACE,oCACE,kBAACgF,EAAD,MACEhF,EAAM4C,KAAI,SAACiF,EAAM/E,GAAP,OACV,yBAAKC,IAAMD,EAAQjC,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,iBAClC,yBACEE,IAAG,UAAM6E,EAAKkB,cACd7F,IAAM2E,EAAKC,cACX7G,cAAA,UAAiB6B,EAAjB,eAEF,kBAAC,IAAD,CAAMnC,GAAE,mBAAekH,EAAKjH,SAC1B,wBAAIK,cAAA,UAAiB6B,EAAjB,eAAqC,2BAAI+E,EAAKmB,eAIxD,kBAAC,EAAD,OCjBS,SAASoF,KAAoC,IAClD3L,EAAW5C,qBAAWC,KAAtB2C,OAER,OACE,oCACE,kBAACuC,EAAD,MAEEvC,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACT,yBAAKC,IAAMD,EAAQjC,UAAU,OAAOI,cAAA,UAAiB6B,EAAjB,iBAClC,yBACEE,IAAG,UAAMH,EAAMI,eACfC,IAAML,EAAMM,SACZlC,cAAA,UAAiB6B,EAAjB,eAEF,kBAAC,IAAD,CAAMnC,GAAE,mBAAekC,EAAMH,UAC3B,wBAAIzB,cAAA,UAAiB6B,EAAjB,eAAqC,2BAAID,EAAMM,gBAK3D,kBAAC,EAAD,OCxBS,SAASkL,KACtB,OACE,yCCAW,SAASC,KAAmB,IAAD,EACFrM,mBAAS,IADP,mBACjC2B,EADiC,KACpBC,EADoB,OAEI5B,mBAAS,IAFb,mBAEjCuK,EAFiC,KAEjB+B,EAFiB,KAKhCvN,EAAOwN,cAAPxN,GAKRuF,qBAAU,WAKJvF,GAJgB,uCAAG,4BAAAS,EAAA,sEACEC,MAAM,wDAAD,OAAyDV,IAAMW,MAAK,SAAC+K,GAAD,OAASA,EAAI7K,UADxF,OACfvB,EADe,OAErBuD,EAAevD,EAASN,MAAM,IAFT,2CAAH,oDAKlBuN,GAGF,IAAMkB,EAAUlK,KAAKC,MAAMC,aAAaC,QAAQ,sBAC5C+J,EACFF,EAAkBE,EAAQzO,MAAMgB,IAEhCyD,aAAaE,QAAQ,oBACnBJ,KAAKK,UAAU,CAAEnC,OAAQ,GAAIzC,MAAM,eAAIgB,EAAK,SAE/C,CAACA,IAEJuF,qBAAU,WACR,GAAI3C,GAAe4I,EAAe9L,OAAS,EAAG,CAG5C,IAFA,IAAMgO,EAAe,GAEZ5L,EAAQ,EAAGA,GAxBT,GAwB0BA,GAAS,EAAG,CACJ,IAAD,EAA1C,GAAIc,EAAY,gBAAD,OAAiBd,IAC9B4L,EAAajH,MAAb,wCACiB3E,GAAUc,EAAY,gBAAD,OAAiBd,KADvD,+BAEaA,GAAUc,EAAY,aAAD,OAAcd,KAFhD,yBAGW,GAHX,IAOJyL,EAAkBG,MAEnB,CAAC9K,EAAa4I,IAEjBjG,qBAAU,WACR,IAAMkI,EAAUhK,aAAaC,QAAQ,sBAC9BH,KAAKK,UAAU,CAAEnC,OAAQ,GAAIzC,MAAO,KAErC2O,EAAWpK,KAAKC,MAAMiK,GAEtBpN,EAAK,eACRL,EADQ,YACCwL,IAENoC,EAAQ,2BAAQD,GAAR,IAAkB3O,MAAOqB,IACvCoD,aAAaE,QAAQ,oBAAqBJ,KAAKK,UAAUgK,MACxD,CAACpC,EAAgBxL,IAUpB,OACE,oCACE,yBACEgC,IAAMY,EAAYmF,aAClB7F,IAAI,cACJjC,cAAY,iBAEd,uBAAGA,cAAY,gBAAgB2C,EAAYoF,SAC3C,4BAAQlI,KAAK,SAASG,cAAY,aAAlC,gBACA,4BAAQH,KAAK,SAASG,cAAY,gBAAlC,aACA,uBAAGA,cAAY,mBAAmB2C,EAAYwC,aAC7CoG,EAAe5J,KAAI,SAACmF,EAAYjF,GAAb,OAClB,2BACEC,IAAMD,EACNxB,QAAO,oBAAgBwB,EAAQ,GAC/B7B,cAAA,UAAiB6B,EAAjB,qBAEA,2BACEhC,KAAK,WACLE,GAAE,oBAAgB8B,EAAQ,GAC1B+L,QAAU9G,EAAW8G,QACrB3N,SAAW,kBA7BG,SAAC4B,GACvB,IAAM8L,EAAQ,YAAOpC,GACrBoC,EAAS9L,GAAO+L,SAAWD,EAAS9L,GAAO+L,QAC3CN,EAAkBK,GA0BOE,CAAgBhM,MATrC,UAYOiF,EAAW,cAAD,OAAejF,EAAQ,IAZxC,gCAaYiF,EAAW,UAAD,OAAWjF,EAAQ,SAI3C,gDACA,uBAAG7B,cAAY,gBAAgB2C,EAAYiJ,iBAC3C,6BACE,kBAAC,IAAD,CAAMlM,GAAG,oBACP,4BACEG,KAAK,SACLG,cAAY,oBACZJ,UAAU,qBAHZ,wBCnGK,SAASkO,KAAmB,IAAD,EACA9M,mBAAS,IADT,mBACjCmI,EADiC,KACnB2B,EADmB,OAEI9J,mBAAS,IAFb,mBAEjCuK,EAFiC,KAEjB+B,EAFiB,KAKhC7L,EAAY8L,cAAZ9L,QAKR6D,qBAAU,WAKJ7D,GAJiB,uCAAG,4BAAAjB,EAAA,sEACCC,MAAM,4DAAD,OAA6DgB,IAAWf,MAAK,SAAC+K,GAAD,OAASA,EAAI7K,UADhG,OAChBvB,EADgB,OAEtByL,EAAgBzL,EAASmC,OAAO,IAFV,2CAAH,oDAKnBgK,GAGF,IAAMgC,EAAUlK,KAAKC,MAAMC,aAAaC,QAAQ,sBAC5C+J,EACFF,EAAkBE,EAAQhM,OAAOC,IAEjC+B,aAAaE,QAAQ,oBACnBJ,KAAKK,UAAU,CAAEnC,OAAO,eAAIC,EAAU,IAAM1C,MAAO,QAEtD,CAAC0C,IAEJ6D,qBAAU,WACR,GAAI6D,GAAgBoC,EAAe9L,OAAS,EAAG,CAC7C,IAAMgO,EAAe,GACrBM,QAAQC,IAAIzC,EAAe9L,QAE3B,IAAK,IAAIoC,EAAQ,EAAGA,GAzBT,GAyB0BA,GAAS,EAAG,CACH,IAAD,EAA3C,GAAIsH,EAAa,gBAAD,OAAiBtH,IAC/B4L,EAAajH,MAAb,wCACiB3E,GAAUsH,EAAa,gBAAD,OAAiBtH,KADxD,+BAEaA,GAAUsH,EAAa,aAAD,OAActH,KAFjD,yBAGW,GAHX,IAOJyL,EAAkBG,MAEnB,CAACtE,EAAcoC,IAElBjG,qBAAU,WACR,IAAMkI,EAAUhK,aAAaC,QAAQ,sBAC9BH,KAAKK,UAAU,CAAEnC,OAAQ,GAAIzC,MAAO,KAErC2O,EAAWpK,KAAKC,MAAMiK,GAEtBpN,EAAK,eACRqB,EADQ,YACM8J,IAEXoC,EAAQ,2BAAQD,GAAR,IAAkBlM,OAAQpB,IACxCoD,aAAaE,QAAQ,oBAAqBJ,KAAKK,UAAUgK,MACxD,CAACpC,EAAgB9J,IAUpB,OACE,oCACE,yBACEM,IAAMoH,EAAanH,cACnBC,IAAI,cACJjC,cAAY,iBAEd,uBAAGA,cAAY,gBAAgBmJ,EAAajH,UAC5C,4BAAQrC,KAAK,SAASG,cAAY,aAAlC,gBACA,4BAAQH,KAAK,SAASG,cAAY,gBAAlC,aACA,uBAAGA,cAAY,mBAAmBmJ,EAAahE,aAC9CoG,EAAe5J,KAAI,SAACmF,EAAYjF,GAAb,OAClB,2BACEC,IAAMD,EACNxB,QAAO,oBAAgBwB,EAAQ,GAC/B7B,cAAA,UAAiB6B,EAAjB,qBAEA,2BACEhC,KAAK,WACLE,GAAE,oBAAgB8B,EAAQ,GAC1B+L,QAAU9G,EAAW8G,QACrB3N,SAAW,kBA7BG,SAAC4B,GACvB,IAAM8L,EAAQ,YAAOpC,GACrBoC,EAAS9L,GAAO+L,SAAWD,EAAS9L,GAAO+L,QAC3CN,EAAkBK,GA0BOE,CAAgBhM,MATrC,UAYOiF,EAAW,cAAD,OAAejF,EAAQ,IAZxC,gCAaYiF,EAAW,UAAD,OAAWjF,EAAQ,SAI3C,gDACA,uBAAG7B,cAAY,gBAAgBmJ,EAAayC,iBAC5C,6BACE,kBAAC,IAAD,CAAMlM,GAAG,oBACP,4BACEG,KAAK,SACLG,cAAY,oBACZJ,UAAU,qBAHZ,wBCVKqO,OAvEf,WAGE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYrI,IAClC,kBAAC,IAAD,CAAOmI,OAAK,EAACC,KAAK,WAAWC,UAAYxB,KACzC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,sBAAsBC,UAAYxB,KACpD,kBAAC,IAAD,CACEsB,OAAK,EACLC,KAAK,oCACLC,UAAYlB,KAEd,kBAAC,IAAD,CACEgB,OAAK,EACLC,KAAK,iCACLC,UAAYxB,KAEd,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,UAAUC,UAAYxI,IACxC,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,WAAWC,UAAY9J,IACzC,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,oCACLC,UAAYjB,KAEd,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,YAAYC,UAAYjI,IAC1C,kBAAC,IAAD,CAAO+H,OAAK,EAACC,KAAK,oBAAoBC,UAAYhI,IAClD,kBAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,mBAAmBC,UAAYC,KACjD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,oBAAoBC,UAAYE,KAClD,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,gCACLC,UAAYN,KAEd,kBAAC,IAAD,CACEI,OAAK,EACLC,KAAK,iCACLC,UAAYG,IAEd,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,oBAAoBC,UAAYI,IAClD,kBAAC,IAAD,CACEN,OAAK,EACLC,KAAK,iCACLC,UAAYK,IAEd,kBAAC,IAAD,CACEP,OAAK,EACLC,KAAK,yBACLC,UAAYnH,IAEd,kBAAC,IAAD,CACEiH,OAAK,EACLC,KAAK,mBACLC,UAAYpG,IAEd,kBAAC,IAAD,CACEkG,OAAK,EACLC,KAAK,sBACLC,UAAYM,IAEd,kBAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,yBAAyBC,UAAYhB,KACvD,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,2BAA2BC,UAAYf,SC1E/CsB,QACW,cAA7BC,OAAO5K,SAAS6K,UAEe,UAA7BD,OAAO5K,SAAS6K,UAEhBD,OAAO5K,SAAS6K,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3O,MAAK,SAAA4O,GACjCA,EAAaC,iB,+BErInB,WAEM1Q,EAAiB2Q,0BAER3Q,Q","file":"static/js/main.3d2cf14c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\n\nexport default function InputSearchMeals() {\n  const { mealsAndInputs:\n    { meals, search, mealInput }, setMealsAndInputs,\n  mealsAndInputs } = useContext(RecipesContext);\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const apiMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?';\n\n  const NOTFOUND = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n  const alert = (response) => {\n    if (response.meals) {\n      setMealsAndInputs(\n        { search: '', mealInput: '', meals: response.meals },\n      );\n    }\n    if (!response.meals) {\n      global.alert(NOTFOUND);\n    }\n  };\n\n  if (Array.isArray(meals) && meals.length === 1) {\n    return (<Redirect\n      to={\n        `/comidas/${meals[0].idMeal}`\n      }\n    />);\n  }\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}s=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}f=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && mealInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n    case 'Ingrediente':\n      apiIngredienteRequest();\n      break;\n    case 'Nome':\n      apiNomeRequest();\n      break;\n    case PRIMEIRA_LETRA:\n      apiLetraRequest();\n      break;\n    default:\n      break;\n    }\n  };\n\n  return (\n    <div className=\"inputsSearch\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        id=\"search\"\n        data-testid=\"search-input\"\n        onChange={ (ev) => setMealsAndInputs(\n          { ...mealsAndInputs, mealInput: ev.target.value },\n        ) }\n      />\n      <label htmlFor=\"Ingrediente\">\n        <input\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"Ingrediente\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs(\n            { ...mealsAndInputs, search: 'Ingrediente' },\n          ) }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"Nome\">\n        <input\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          id=\"Nome\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs({ ...mealsAndInputs, search: 'Nome' }) }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"Primeira letra\">\n        <input\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"Primeira letra\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs(\n            { ...mealsAndInputs, search: PRIMEIRA_LETRA },\n          ) }\n        />\n        Primeira letra\n      </label>\n      <button\n        onClick={ handleClick }\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\n\nexport default function InputSearchCocktails() {\n  const [search, setSearch] = useState('');\n  const [cocktailInput, setCocktailInput] = useState('');\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?';\n  const apiCocktails = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?';\n  const { api, setApi } = useContext(RecipesContext);\n  let drinksList = api.drinks;\n  const TWELVE = 12;\n  const NOTFOUND = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\n  const alert = (response) => {\n    if (response.drinks) setApi(response);\n    if (!response.drinks) global.alert(NOTFOUND);\n  };\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiCocktails}s=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiCocktails}f=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && cocktailInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n    case 'Ingrediente':\n      apiIngredienteRequest();\n      break;\n    case 'Nome':\n      apiNomeRequest();\n      break;\n    case PRIMEIRA_LETRA:\n      apiLetraRequest();\n      break;\n    default:\n      break;\n    }\n  };\n\n  if (drinksList.length === 1) {\n    return <Redirect to={ `/bebidas/${drinksList[0].idDrink}` } />;\n  }\n\n  if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n\n  return (\n    <div className=\"inputsSearch\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        id=\"search\"\n        data-testid=\"search-input\"\n        onChange={ (ev) => setCocktailInput(ev.target.value) }\n      />\n      <label htmlFor=\"Ingrediente\">\n        <input\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"Ingrediente\"\n          name=\"search\"\n          onClick={ () => setSearch('Ingrediente') }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"Nome\">\n        <input\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          id=\"Nome\"\n          name=\"search\"\n          onClick={ () => setSearch('Nome') }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"Primeira letra\">\n        <input\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"Primeira letra\"\n          name=\"search\"\n          onClick={ () => setSearch(PRIMEIRA_LETRA) }\n        />\n        Primeira letra\n      </label>\n      <button\n        onClick={ handleClick }\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n      >\n        Buscar\n      </button>\n      { drinksList.map((drink, index) => (\n        <div className=\"card\" data-testid={ `${index}-recipe-card` } key={ index }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ drink.strDrinkThumb }\n            alt=\"Meal card\"\n          />\n          <p data-testid={ `${index}-card-name` }>{ drink.strDrink }</p>\n        </div>))}\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport RecipesContext from './RecipesContext';\n\nfunction RecipesProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [searchBar, setsearchBar] = useState(false);\n  const [api, setApi] = useState({ meals: [], drinks: [] });\n  const [mealDetails, setMealDetails] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsAndInputs, setMealsAndInputs] = useState(\n    { meals: [], search: '', mealInput: '' },\n  );\n\n  const contextValue = { email,\n    setEmail,\n    password,\n    setPassword,\n    searchBar,\n    setsearchBar,\n    api,\n    setApi,\n    mealDetails,\n    setMealDetails,\n    meals,\n    setMeals,\n    mealsAndInputs,\n    setMealsAndInputs,\n    drinks,\n    setDrinks,\n  };\n\n  return (\n    <RecipesContext.Provider value={ contextValue }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nfunction Footer() {\n  return (\n    <footer data-testid=\"footer\">\n      <Link to=\"/bebidas\">\n        <button type=\"button\">\n          <img src={ drinkIcon } alt=\"Icone de bebida\" data-testid=\"drinks-bottom-btn\" />\n        </button>\n      </Link>\n      <Link to=\"/explorar\">\n        <button type=\"button\">\n          <img\n            src={ exploreIcon }\n            alt=\"Icone de explorar\"\n            data-testid=\"explore-bottom-btn\"\n          />\n        </button>\n      </Link>\n      <Link to=\"/comidas\">\n        <button type=\"button\">\n          <img src={ mealIcon } alt=\"Icone de comida\" data-testid=\"food-bottom-btn\" />\n        </button>\n      </Link>\n    </footer>\n  );\n}\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../../images/profileIcon.svg';\n\nexport default function ProfileButton() {\n  return (\n    <Link to=\"/perfil\">\n      <button\n        type=\"button\"\n        onClick={ () => {\n          const currentEmail = JSON.parse(localStorage.getItem('user'));\n          if (!currentEmail) {\n            localStorage\n              .setItem('user', JSON.stringify({ email: 'email@email.com' }));\n          }\n        } }\n      >\n        <img data-testid=\"profile-top-btn\" src={ profileIcon } alt=\"Profile Icon\" />\n      </button>\n    </Link>\n  );\n}\n","import React, { useContext } from 'react';\nimport RecipesContext from '../../Context/RecipesContext';\nimport searchIcon from '../../images/searchIcon.svg';\nimport '../../App.css';\n\nexport default function SearchButton() {\n  const { searchBar, setsearchBar } = useContext(RecipesContext);\n\n  return (\n    <button id=\"search-button\" type=\"button\" onClick={ () => setsearchBar(!searchBar) }>\n      <img data-testid=\"search-top-btn\" src={ searchIcon } alt=\"Icone de pesquisa\" />\n    </button>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router';\nimport RecipesContext from '../Context/RecipesContext';\nimport ProfileButton from './Utils/ProfileButton';\nimport SearchButton from './Utils/SearchButton';\nimport '../App.css';\nimport InputSearchMeals from './Utils/InputSearchMeals';\nimport InputSearchCocktails from './Utils/InputSearchCocktails';\n\nexport default function HeaderWithSearch() {\n  const { searchBar } = useContext(RecipesContext);\n  const location = useLocation().pathname;\n\n  return (\n    <>\n      <header>\n        <ProfileButton />\n        <h3\n          data-testid=\"page-title\"\n          style={ { alignSelf: 'center' } }\n        >\n          {location.includes('/comidas') ? 'Comidas' : 'Bebidas'}\n        </h3>\n        <SearchButton />\n      </header>\n      {searchBar && location === '/comidas' ? <InputSearchMeals /> : null}\n      {searchBar && location === '/bebidas' ? <InputSearchCocktails /> : null}\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport MainFoodPage from './HeaderWithSearch';\n\nexport default function DrinksPage() {\n  const { drinks, setDrinks } = useContext(RecipesContext);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({ category: '', toogle: false });\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchDrinkAPI() {\n    const APIDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIDrinks).then((resp) => resp.json());\n    let drinksList = response.drinks;\n    if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n    setDrinks(drinksList);\n  }\n\n  async function fetchDrinkCatergoryAPI() {\n    const APICategory = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then((resp) => resp.json());\n    const categoriesDrinksList = [...response.drinks];\n    const drinkArrayCategories = categoriesDrinksList.reduce((acc, current) => {\n      const { strCategory } = current;\n      return { ...acc, [strCategory]: strCategory };\n    }, {});\n    setDrinkCategories(Object.keys(drinkArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchDrinkAPI();\n    fetchDrinkCatergoryAPI();\n  }, []);\n\n  const handleDrinkCatecory = async (category) => {\n    const buttonCategory = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n    const response = await fetch(buttonCategory).then((resp) => resp.json());\n    const categoryDrinks = [...response.drinks.slice(0, TWELVE)];\n    setDrinks(categoryDrinks);\n  };\n\n  return (\n    <>\n      <MainFoodPage />\n      {\n        drinkCategories\n          .map((category) => (\n            <button\n              className=\"categoryButtons\"\n              type=\"button\"\n              key={ category }\n              data-testid={ `${category}-category-filter` }\n              onClick={ () => {\n                if (categoryToogle.toogle) {\n                  if (category === categoryToogle.category) {\n                    fetchDrinkAPI();\n                    setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                  }\n                  if (category !== categoryToogle.category) {\n                    handleDrinkCatecory(category);\n                    setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                  }\n                }\n                if (!categoryToogle.toogle) {\n                  handleDrinkCatecory(category);\n                  setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                }\n              } }\n            >\n              {category}\n            </button>))\n      }\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ fetchDrinkAPI }\n      >\n        All\n      </button>\n      {\n        drinks.map((drink, index) => (\n          <Link key={ index } to={ `/bebidas/${drink.idDrink}` }>\n            <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n              <img\n                src={ `${drink.strDrinkThumb}` }\n                alt={ drink.strDrink }\n                data-testid={ `${index}-card-img` }\n              />\n              <h4 data-testid={ `${index}-card-name` }><b>{drink.strDrink}</b></h4>\n            </div>\n          </Link>\n        ))\n      }\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport ProfileButton from './Utils/ProfileButton';\nimport '../App.css';\n\nexport default function HeaderWithoutSearch() {\n  return (\n    <header>\n      <ProfileButton />\n      <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>Comidas</h3>\n    </header>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\nimport Footer from '../Components/Footer';\n\nexport default function ProfilePage() {\n  let currentEmail = JSON.parse(localStorage.getItem('user'));\n  if (!currentEmail) currentEmail = { email: '' };\n  return (\n    <>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Perfil</h3>\n      <h3 data-testid=\"profile-email\">{ currentEmail.email }</h3>\n      <Link to=\"/receitas-feitas\">\n        <button type=\"button\" data-testid=\"profile-done-btn\">\n          Receitas Feitas\n        </button>\n      </Link>\n      <Link to=\"/receitas-favoritas\">\n        <button type=\"button\" data-testid=\"profile-favorite-btn\">\n          Receitas Favoritas\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          onClick={ () => { localStorage.clear(); } }\n          data-testid=\"profile-logout-btn\"\n        >\n          Sair\n        </button>\n      </Link>\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipesContext from '../Context/RecipesContext';\nimport '../App.css';\n\nexport default function Login() {\n  const { email, setEmail, password, setPassword } = useContext(RecipesContext);\n\n  function validateButton() {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/i;\n    const SIX = 6;\n\n    if (emailRegex.test(email) && password.length > SIX) {\n      return false;\n    }\n    return true;\n  }\n\n  function setTokens() {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem('user', JSON.stringify({ email }));\n  }\n\n  return (\n    <div className=\"loginBG\">\n      <div className=\"container\">\n        <div className=\"animate six\">\n          <span>R</span>\n          <span>E</span>\n          <span>C</span>\n          <span>I</span>\n          <span>P</span>\n          <span>E</span>\n          <span>S</span>\n          {' '}\n          <span>A</span>\n          <span>P</span>\n          <span>P</span>\n        </div>\n      </div>\n      <input\n        className=\"textInput\"\n        type=\"email\"\n        placeholder=\"Email\"\n        data-testid=\"email-input\"\n        onChange={ (ev) => setEmail(ev.target.value) }\n      />\n      <input\n        className=\"textInput\"\n        type=\"password\"\n        placeholder=\"Password\"\n        data-testid=\"password-input\"\n        onChange={ (ev) => setPassword(ev.target.value) }\n      />\n      <Link to=\"/comidas\">\n        <button\n          className=\"textInput\"\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ validateButton() }\n          onClick={ () => setTokens() }\n        >\n          Login\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import HeaderWithoutSearch from './HeaderWithoutSearch';\nimport ProfileButton from './Utils/ProfileButton';\nimport Footer from '../Components/Footer';\n\nexport default function ExplorePage() {\n  return (\n    <div>\n      {/* <h3 data-testid=\"page-title\">Explorar</h3> */}\n      {/* <HeaderWithoutSearch /> */}\n      <header>\n        <ProfileButton />\n        <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>Explorar</h3>\n        <div>\n          {}\n        </div>\n      </header>\n      <Link to=\"/explorar/comidas\">\n        <button className=\"categoryButtons\" data-testid=\"explore-food\" type=\"button\">\n          Explorar Comidas\n        </button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button className=\"categoryButtons\" data-testid=\"explore-drinks\" type=\"button\">\n          Explorar Bebidas\n        </button>\n      </Link>\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport ProfileButton from './Utils/ProfileButton';\nimport Footer from '../Components/Footer';\n\nconst apiRandomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\n\nexport default function ExploreMealsPage() {\n  const history = useHistory();\n  // const { idMeal } = randomMeal;\n  const handleClick = async () => {\n    const response = await fetch(`${apiRandomMealUrl}`)\n      .then((resp) => resp.json());\n    // setRandomMeal(response);\n    const { idMeal } = response.meals[0];\n    history.push(`/comidas/${idMeal}`);\n  };\n\n  return (\n    <div>\n      <header>\n        <ProfileButton />\n        <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>\n          Explorar Comidas\n        </h3>\n        <div>\n          {}\n        </div>\n      </header>\n      <Link to=\"/explorar/comidas/ingredientes\">\n        <button\n          className=\"categoryButtons\"\n          data-testid=\"explore-by-ingredient\"\n          type=\"button\"\n        >\n          Por Ingredientes\n        </button>\n      </Link>\n      <Link to=\"/explorar/comidas/area\">\n        <button className=\"categoryButtons\" data-testid=\"explore-by-area\" type=\"button\">\n          Por Local de Origem\n        </button>\n      </Link>\n      {/* <Link to={ `/comidas/${idMeal}` }> */}\n      <button onClick={ handleClick } data-testid=\"explore-surprise\" type=\"button\">\n        Me Surpreenda!\n      </button>\n      {/* </Link> */}\n      <Footer />\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function ExploreMealsByIngredient() {\n  const { mealsAndInputs, setMealsAndInputs } = useContext(RecipesContext);\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const imgURL = 'https://www.themealdb.com/images/ingredients/';\n  useEffect(() => {\n    async function fetchAPI() {\n      const APIMeals = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n      const response = await fetch(APIMeals).then((resp) => resp.json());\n      let mealsList = [...response.meals];\n      if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n      setMeals(mealsList);\n    }\n    fetchAPI();\n  }, []);\n\n  const handleClick = (ingredient) => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${ingredient}`)\n        .then((resp) => resp.json());\n      setMealsAndInputs({ ...mealsAndInputs, meals: response.meals });\n    };\n    apiIngredienteRequest();\n  };\n\n  return (\n    <div>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Explorar Ingredientes</h3>\n      {meals.map((meal, index) => (\n        <Link key={ index } to={ `/comidas/ingrediente/${meal.strIngredient}` }>\n          <div\n            onClick={ () => handleClick(meal.strIngredient) }\n            aria-hidden=\"true\"\n            className=\"card\"\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <img\n              src={ `${imgURL}${meal.strIngredient}-Small.png` }\n              alt={ meal.strIngredient }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4\n              data-testid={ `${index}-card-name` }\n            >\n              <b>{meal.strIngredient}</b>\n            </h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport ProfileButton from './Utils/ProfileButton';\nimport Footer from '../Components/Footer';\n\nconst apiRandomDrinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\nexport default function ExploreMealsPage() {\n  const history = useHistory();\n  // const { idMeal } = randomMeal;\n  const handleClick = async () => {\n    const response = await fetch(`${apiRandomDrinkUrl}`)\n      .then((resp) => resp.json());\n    // setRandomMeal(response);\n    const { idDrink } = response.drinks[0];\n    history.push(`/bebidas/${idDrink}`);\n  };\n  return (\n    <div>\n      <header>\n        <ProfileButton />\n        <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>\n          Explorar Bebidas\n        </h3>\n        <div>\n          {}\n        </div>\n      </header>\n      <Link to=\"/explorar/bebidas/ingredientes\">\n        <button data-testid=\"explore-by-ingredient\" type=\"button\">\n          Por Ingredientes\n        </button>\n      </Link>\n      <Link to=\"/explorar/bebidas/area\">\n        <button disabled data-testid=\"\" type=\"button\">\n          Por Area\n        </button>\n      </Link>\n      {/* <Link to={ `/comidas/${idMeal}` }> */}\n      <button onClick={ handleClick } data-testid=\"explore-surprise\" type=\"button\">\n        Me Surpreenda!\n      </button>\n      {/* </Link> */}\n      <Footer />\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function ExploreMealsPage() {\n  // const [drinks, setDrinks] = useState([]);\n  const { drinks, setDrinks } = useContext(RecipesContext);\n  const TWELVE = 12;\n  const imgURL = 'https://www.thecocktaildb.com/images/ingredients/';\n  const apiIngredienteUrl = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?';\n\n  useEffect(() => {\n    async function fetchAPI() {\n      const APIDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n      const response = await fetch(APIDrinks).then((resp) => resp.json());\n      let drinksList = [...response.drinks];\n      if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n      setDrinks(drinksList);\n    }\n    fetchAPI();\n  }, []);\n\n  const handleClick = (ingredient) => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${ingredient}`)\n        .then((resp) => resp.json());\n      let drinksList = [...response.drinks];\n      if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n      setDrinks(drinksList);\n    };\n    apiIngredienteRequest();\n  };\n\n  return (\n    <div>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Explorar Ingredientes</h3>\n      {drinks.map((drink, index) => (\n        <Link key={ index } to={ `/bebidas/ingrediente/${drink.strIngredient1}` }>\n          <div\n            onClick={ () => handleClick(drink.strIngredient1) }\n            className=\"card\"\n            data-testid={ `${index}-ingredient-card` }\n            aria-hidden=\"true\"\n          >\n            <img\n              src={ `${imgURL}${drink.strIngredient1}-Small.png` }\n              alt={ drink.strIngredient1 }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4 data-testid={ `${index}-card-name` }><b>{drink.strIngredient1}</b></h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport HeaderWithSearch from './HeaderWithSearch';\n\nexport default function ExploreMealsByArea() {\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  useEffect(() => {\n    async function fetchAreas() {\n      const areasAPI = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(areasAPI).then((resp) => resp.json());\n      const areaList = response.meals;\n      setAreas(areaList);\n    }\n    fetchAreas();\n  }, []);\n  useEffect(() => {\n    async function fetchFilterByAreas() {\n      const filterByAreasAPI = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedArea}`;\n      const response = await fetch(filterByAreasAPI).then((resp) => resp.json());\n      let mealList = response.meals ? [...response.meals] : [];\n      mealList = mealList.slice(0, TWELVE);\n      setMeals(mealList);\n    }\n    if (selectedArea === 'All') fetchFilterByAreas();\n    if (selectedArea) fetchFilterByAreas();\n  }, [selectedArea]);\n  return (\n    <>\n      <HeaderWithSearch />\n      <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>Explorar Origem</h3>\n      <select\n        value={ selectedArea }\n        onChange={ (event) => setSelectedArea(event.target.value) }\n        data-testid=\"explore-by-area-dropdown\"\n        id=\"areas\"\n      >\n        {areas.map((area) => (\n          <option\n            key={ area.strArea }\n            value={ area.strArea }\n            data-testid={ `${area.strArea}-option` }\n          >\n            {area.strArea}\n          </option>\n        ))}\n        <option\n          onChange={ (event) => setSelectedArea(event.target.value) }\n          data-testid=\"All-option\"\n        >\n          All\n        </option>\n      </select>\n      {meals.map((meal, index) => (\n        <Link key={ index } to={ `/comidas/${meal.idMeal}` }>\n          <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n            <img\n              src={ meal.strMealThumb }\n              alt={ meal.strMealThumb }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4 data-testid={ `${index}-card-name` }>{meal.strMeal}</h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\n\nexport default function DoneRecipes() {\n  let lsDoneRecipes = localStorage.getItem('doneRecipes') || '[]';\n  lsDoneRecipes = JSON.parse(lsDoneRecipes);\n\n  return (\n    <>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Receitas Feitas</h3>\n      <Link to=\" \">\n        <button type=\"button\" data-testid=\"filter-by-all-btn\">\n          All\n        </button>\n      </Link>\n      <Link to=\" \">\n        <button type=\"button\" data-testid=\"filter-by-food-btn\">\n          Food\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button type=\"button\" data-testid=\"filter-by-drink-btn\">\n          Drinks\n        </button>\n      </Link>\n      {lsDoneRecipes.map((recipe, index) => (\n        <div key={ index }>\n          {recipe.tags.map((tag, index1) => (\n            <p\n              key={ index1 }\n              data-testid={ `${index}-${recipe.tags[index1]}-horizontal-tag` }\n            >\n              {tag}\n            </p>))}\n          <img\n            src={ `${index}` }\n            alt=\"img-Details\"\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <p data-testid={ `${index}-horizontal-top-text` } />\n          <p data-testid={ `${index}-horizontal-name` } />\n          <p data-testid={ `${index}-horizontal-done-date` } />\n          <button type=\"button\" data-testid={ `${index}-horizontal-share-btn` }>\n            Compartilhar\n          </button>\n        </div>))}\n\n    </>\n  );\n}\n","import React from 'react';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\n\nexport default function FavoreiteRecipes() {\n  return (\n    <>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Receitas Favoritas</h3>\n    </>\n  );\n}\n","import React from 'react';\nimport { Carousel, CarouselItem } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport '../App.css';\nimport { useLocation } from 'react-router';\n\nexport default function CustomCarousel(\n  { props: { firstCarousel, secondCarousel } },\n) {\n  let count1 = 0;\n  let count2 = 1;\n\n  const pathIsMeals = useLocation().pathname.includes('/comidas');\n\n  return (\n    <>\n      <Carousel>\n        {firstCarousel.map((drink, index) => {\n          if (index > 0) count1 += 2;\n          return (\n            <CarouselItem\n              key={ `drink${index}` }\n              data-testid={ `${count1}-recomendation-card` }\n            >\n              <img\n                className=\"d-block w-100\"\n                src={ pathIsMeals ? drink.strDrinkThumb : drink.strMealThumb }\n                alt=\"drink\"\n              />\n              <Carousel.Caption>\n                <p>{drink.strCategory}</p>\n                <p\n                  data-testid={ `${count1}-recomendation-title` }\n                >\n                  {pathIsMeals ? drink.strDrink : drink.strMeal}\n                </p>\n              </Carousel.Caption>\n            </CarouselItem>);\n        })}\n      </Carousel>\n      <Carousel style={ { marginBottom: '100px' } }>\n        {secondCarousel.map((drink, index) => {\n          if (index > 0) count2 += 2;\n          return (\n            <CarouselItem\n              key={ `drink${index}` }\n              data-testid={ `${count2}-recomendation-card` }\n            >\n              {/* Comment */}\n              <img\n                className=\"d-block w-100\"\n                src={ pathIsMeals ? drink.strDrinkThumb : drink.strMealThumb }\n                alt=\"Meal\"\n              />\n              <Carousel.Caption>\n                <p>{drink.strCategory}</p>\n                <p\n                  data-testid={ `${count2}-recomendation-title` }\n                >\n                  {pathIsMeals ? drink.strDrink : drink.strMeal}\n                </p>\n              </Carousel.Caption>\n            </CarouselItem>);\n        })}\n      </Carousel>\n    </>\n  );\n}\n\nCustomCarousel.propTypes = {\n  props: {\n    firstCarousel: PropTypes.string.isRequired,\n    secondCarousel: PropTypes.string.isRequired,\n  }.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\n\nexport default function FavoriteButton({ props: { mealDetails, drinkDetails } }) {\n  const [favorite, setFavorite] = useState(false);\n  const location = useLocation().pathname.includes('/comidas');\n  const mealId = useLocation().pathname.replace('/comidas/', '');\n  const drinkId = useLocation().pathname.replace('/bebidas/', '');\n\n  const favoriteRecipes = JSON\n    .parse(localStorage.getItem('favoriteRecipes')) || [];\n  const blackOrWhite = location ? favoriteRecipes\n    .some((item) => item.id === mealId) : favoriteRecipes\n    .some((item) => item.id === drinkId);\n\n  if (!localStorage.getItem('favoriteRecipes')) {\n    localStorage.setItem('favoriteRecipes', '[]');\n  }\n\n  const setFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeMealRecipe = { id: mealDetails.idMeal,\n      category: mealDetails.strCategory,\n      type: 'comida',\n      area: mealDetails.strArea,\n      alcoholicOrNot: '',\n      name: mealDetails.strMeal,\n      image: mealDetails.strMealThumb,\n    };\n    recipes.push(storeMealRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n  const setFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeDrinkRecipe = { id: drinkDetails.idDrink,\n      category: drinkDetails.strCategory,\n      type: 'bebida',\n      area: '',\n      alcoholicOrNot: drinkDetails.strAlcoholic,\n      name: drinkDetails.strDrink,\n      image: drinkDetails.strDrinkThumb,\n    };\n\n    recipes.push(storeDrinkRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter((recipe) => recipe.id !== mealId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter((recipe) => recipe.id !== drinkId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const test = blackOrWhite ? removeFavoriteMealsRecipes : setFavoriteMealsRecipes;\n\n  const setOrRemoveFavoriteMealsRecipes = () => {\n    test();\n  };\n  const setOrRemoveFavoriteDrinkRecipes = () => {\n    if (!blackOrWhite) setFavoriteDrinksRecipes();\n    if (blackOrWhite) removeFavoriteDrinksRecipes();\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ () => {\n        if (location) setOrRemoveFavoriteMealsRecipes();\n        if (!location) setOrRemoveFavoriteDrinkRecipes();\n      } }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ blackOrWhite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"A black heart Icon\"\n      />\n    </button>\n  );\n}\n\nFavoriteButton.propTypes = {\n  props: {\n    mealDetails: {\n      idMeal: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strArea: PropTypes.string.isRequired,\n      strMeal: PropTypes.string.isRequired,\n      strMealThumb: PropTypes.string.isRequired,\n    }.isRequired,\n    drinkDetails: {\n      idDrink: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strAlcoholic: PropTypes.string.isRequired,\n      strDrink: PropTypes.string.isRequired,\n      strDrinkThumb: PropTypes.string.isRequired,\n    }.isRequired,\n  }.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport CustomCarousel from './CustomCarousel';\nimport FavoriteButton from './Utils/FavoriteButton';\n\nconst copy = require('clipboard-copy');\n\nexport default function DrinkDetalis() {\n  const [drinkDetails, setDrinkDetails] = useState({});\n  const [copyLink, setCopyLink] = useState(false);\n  const [meals, setMeals] = useState([]);\n  const SIX = 6;\n\n  const locationToClipboard = useLocation().pathname;\n  const getLocation = () => {\n    const clipboardLocation = `http://localhost:3000${locationToClipboard}`;\n    return clipboardLocation;\n  };\n\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  const test = recipesDone || [];\n  let recipeInProgress = JSON\n    .parse(localStorage.getItem('inProgressRecipes'));\n  if (recipeInProgress) recipeInProgress = recipeInProgress.cocktails;\n  if (!recipeInProgress) recipeInProgress = {};\n\n  const firstCarousel = meals.length ? [meals[0], meals[2], meals[4]] : [];\n  const secondCarousel = meals.length ? [meals[1], meals[3], meals[5]] : [];\n\n  const id = useLocation().pathname.replace('/bebidas/', '');\n  const test2 = test.some((recipe) => recipe.id === id);\n\n  // ref: Lucas Caribé\n  const youtubeSource = drinkDetails.strYoutube ? drinkDetails\n    .strYoutube.replace(/watch\\?v=/, 'embed/') : '';\n  const str1 = 'accelerometer; autoplay; clipboard-write;';\n  const str2 = 'encrypted-media; gyroscope; picture-in-picture';\n  const youtubeConf = str1 + str2;\n  const TWENTY = 20;\n\n  const ingredientList = [];\n  const fetchDrinkIdAPi = async () => {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`).then((res) => res.json());\n    setDrinkDetails(response.drinks[0]);\n  };\n\n  async function fetchMealAPI() {\n    const APIMeals = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIMeals).then((resp) => resp.json());\n    setMeals(response.meals.slice(0, SIX));\n  }\n\n  useEffect(() => {\n    fetchMealAPI();\n    fetchDrinkIdAPi();\n  }, []);\n\n  for (let index = 1; index <= TWENTY; index += 1) {\n    if (drinkDetails[`strIngredient${index}`]) {\n      ingredientList.push({\n        [`ingredients${index}`]: drinkDetails[`strIngredient${index}`],\n        [`measure${index}`]: drinkDetails[`strMeasure${index}`],\n      });\n    }\n  }\n\n  const hiddenButton = (\n    <button type=\"button\" data-testid=\"start-recipe-btn\" className=\"startRecipeButton\">\n      {recipeInProgress[id] ? 'Continuar Receita' : 'Iniciar Receita'}\n    </button>);\n\n  return (\n    <>\n      <img\n        src={ drinkDetails.strDrinkThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{ drinkDetails.strDrink }</p>\n      <p data-testid=\"recipe-category\">{ drinkDetails.strAlcoholic }</p>\n      <button\n        onClick={ () => {\n          setCopyLink(true);\n          copy(getLocation());\n        } }\n        type=\"button\"\n        data-testid=\"share-btn\"\n      >\n        Compartilhar\n      </button>\n      <FavoriteButton props={ { drinkDetails } } />\n      {copyLink && <p>Link copiado!</p>}\n      <p data-testid=\"recipe-category\">{drinkDetails.strCategory}</p>\n      <ul>\n        { ingredientList.map((ingredient, index) => (\n          <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n            {\n              `${ingredient[`ingredients${index + 1}`]} \n              - ${ingredient[`measure${index + 1}`]}`\n            }\n          </li>))}\n      </ul>\n      <h3>Instruções</h3>\n      <p data-testid=\"instructions\">{drinkDetails.strInstructions}</p>\n      <iframe\n        data-testid=\"video\"\n        width=\"560\"\n        height=\"315\"\n        src={ youtubeSource }\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        allow=\"accelerometer;\n         autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen={ youtubeConf }\n      />\n      <CustomCarousel props={ { firstCarousel, secondCarousel } } />\n      <Link to={ `/bebidas/${id}/in-progress` }>\n        {!test2 ? hiddenButton : null}\n      </Link>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport CustomCarousel from './CustomCarousel';\n\nimport FavoriteButton from './Utils/FavoriteButton';\n\nconst copy = require('clipboard-copy');\n\nexport default function MealDetalis() {\n  const [mealDetails, setMealDetails] = useState({});\n  const [copyLink, setCopyLink] = useState(false);\n  // const [inProgress, setinProgress] = useState(false);\n  const [drinks, setDrinks] = useState([]);\n\n  const recipesDone = JSON.parse(localStorage.getItem('doneRecipes'));\n  let recipeInProgress = JSON\n    .parse(localStorage.getItem('inProgressRecipes'));\n  if (recipeInProgress) recipeInProgress = recipeInProgress.meals;\n  if (!recipeInProgress) recipeInProgress = {};\n  const test = recipesDone || [];\n  const SIX = 6;\n\n  // id => API\n  const locationToClipboard = useLocation().pathname;\n  const getLocation = () => {\n    const clipboardLocation = `http://localhost:3000${locationToClipboard}`;\n    return clipboardLocation;\n  };\n\n  const id = useLocation().pathname.replace('/comidas/', '');\n  const test2 = test.some((recipe) => recipe.id === id);\n\n  // ref: Lucas Caribé\n  const youtubeSource = mealDetails.strYoutube ? mealDetails\n    .strYoutube.replace(/watch\\?v=/, 'embed/') : '';\n  const str1 = 'accelerometer; autoplay; clipboard-write;';\n  const str2 = 'encrypted-media; gyroscope; picture-in-picture';\n  const youtubeConf = str1 + str2;\n  const TWENTY = 20;\n\n  const ingredientList = [];\n  const fetchMealIdAPi = async () => {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`).then((res) => res.json());\n    setMealDetails(response.meals[0]);\n  };\n\n  async function fetchDrinkAPI() {\n    const APIDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIDrinks).then((resp) => resp.json());\n    setDrinks(response.drinks.slice(0, SIX));\n  }\n\n  useEffect(() => {\n    fetchDrinkAPI();\n    fetchMealIdAPi();\n  }, []);\n\n  const firstCarousel = drinks.length ? [drinks[0], drinks[2], drinks[4]] : [];\n  const secondCarousel = drinks.length ? [drinks[1], drinks[3], drinks[5]] : [];\n\n  for (let index = 1; index <= TWENTY; index += 1) {\n    if (mealDetails[`strIngredient${index}`] !== '') {\n      ingredientList.push({\n        [`ingredients${index}`]: mealDetails[`strIngredient${index}`],\n        [`measure${index}`]: mealDetails[`strMeasure${index}`],\n      });\n    }\n  }\n\n  const hiddenButton = (\n    <button\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      className=\"startRecipeButton\"\n    >\n      {recipeInProgress[id] ? 'Continuar Receita' : 'Iniciar Receita'}\n    </button>);\n\n  return (\n    <>\n      <img\n        src={ mealDetails.strMealThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{ mealDetails.strMeal }</p>\n      <button\n        onClick={ () => {\n          setCopyLink(true);\n          copy(getLocation());\n        } }\n        type=\"button\"\n        data-testid=\"share-btn\"\n      >\n        Compartilhar\n      </button>\n      <FavoriteButton props={ { mealDetails } } />\n      {copyLink && <p>Link copiado!</p>}\n      <p data-testid=\"recipe-category\">{mealDetails.strCategory}</p>\n      <ul>\n        { ingredientList.map((ingredient, index) => (\n          <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n            {\n              `${ingredient[`ingredients${index + 1}`]} \n              - ${ingredient[`measure${index + 1}`]}`\n            }\n          </li>))}\n      </ul>\n      <h3>Instruções</h3>\n      <p data-testid=\"instructions\">{mealDetails.strInstructions}</p>\n      <iframed-block\n        w-100\n        src={ youtubeSource }\n        data-testid=\"video\"\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        allow=\"accelerometer;\n         autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen={ youtubeConf }\n      />\n      <CustomCarousel props={ { firstCarousel, secondCarousel } } />\n      <Link to={ `/comidas/${id}/in-progress` }>\n        {!test2 ? hiddenButton : null}\n      </Link>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function CategoriesButtons({ props: { mealsCategories, categoryToogle,\n  fetchMealAPI, setCategoryToogle, mealsAndInputs, setMealsAndInputs } }) {\n  const TWELVE = 12;\n  const handleMealCatecory = async (category) => {\n    const buttonCategory = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n    const response = await fetch(buttonCategory).then((resp) => resp.json());\n    const categoryMeals = [...response.meals.slice(0, TWELVE)];\n    setMealsAndInputs({ ...mealsAndInputs, meals: categoryMeals });\n  };\n\n  return (\n    <>\n      {\n        mealsCategories.map(\n          (category) => (\n            <button\n              className=\"categoryButtons\"\n              type=\"button\"\n              key={ category }\n              onClick={ () => {\n                if (categoryToogle.toogle) {\n                  if (category === categoryToogle.category) {\n                    fetchMealAPI();\n                    setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                  }\n                  if (category !== categoryToogle.category) {\n                    handleMealCatecory(category);\n                    setCategoryToogle({ category, toogle: categoryToogle.toogle });\n                  }\n                }\n                if (!categoryToogle.toogle) {\n                  handleMealCatecory(category);\n                  setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                }\n              } }\n              data-testid={ `${category}-category-filter` }\n            >\n              {category}\n            </button>),\n        )\n      }\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ fetchMealAPI }\n      >\n        All\n      </button>\n    </>\n  );\n}\n\nCategoriesButtons.propTypes = {\n  props: {\n    mealsCategories: PropTypes.string,\n    categoryToogle: PropTypes.string,\n    fetchMealAPI: PropTypes.string,\n    setCategoryToogle: PropTypes.string,\n    mealsAndInputs: PropTypes.string,\n    setMealsAndInputs: PropTypes.string,\n  }.isRequired,\n};\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport HeaderWithSearch from './HeaderWithSearch';\nimport CategoriesButtons from './Utils/CategoriesButtons';\n\nexport default function MealsPage() {\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({ category: '', toogle: false });\n  const { mealsAndInputs,\n    mealsAndInputs: { meals },\n    setMealsAndInputs, setMealDetails } = useContext(RecipesContext);\n  const location = useLocation().pathname;\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchMealAPI() {\n    const APIMeals = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIMeals).then((resp) => resp.json());\n    let mealsList = [...response.meals];\n    if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n    setMealsAndInputs({ ...mealsAndInputs, meals: mealsList });\n  }\n  async function fetchMealCatergoryAPI() {\n    const APICategory = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then((resp) => resp.json());\n    const categoriesMealsList = [...response.meals];\n    const mealArrayCategories = categoriesMealsList.reduce((acc, current) => {\n      const { strCategory } = current;\n      return { ...acc, [strCategory]: strCategory };\n    }, {});\n    setMealsCategories(Object.keys(mealArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchMealAPI();\n    fetchMealCatergoryAPI();\n  }, []);\n\n  const buttonsUtils = { mealsCategories,\n    categoryToogle,\n    fetchMealAPI,\n    setCategoryToogle,\n    setMealsAndInputs,\n    mealsAndInputs };\n  return (\n    <>\n      <HeaderWithSearch />\n      {location.includes('/comidas') && <CategoriesButtons props={ buttonsUtils } />}\n      {location.includes('/comidas') && meals.map((meal, index) => (\n        <Link\n          onClick={ () => setMealDetails(meal) }\n          key={ index }\n          to={ `/comidas/${meal.idMeal}` }\n        >\n          <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n            <img\n              src={ `${meal.strMealThumb}` }\n              alt={ meal.strIngredient }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4 data-testid={ `${index}-card-name` }><b>{meal.strMeal}</b></h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport HeaderWithSearch from './HeaderWithSearch';\n\nexport default function ExploreRecipesByIngredient() {\n  const { mealsAndInputs: { meals } } = useContext(RecipesContext);\n  return (\n    <>\n      <HeaderWithSearch />\n      { meals.map((meal, index) => (\n        <div key={ index } className=\"card\" data-testid={ `${index}-recipe-card` }>\n          <img\n            src={ `${meal.strMealThumb}` }\n            alt={ meal.strIngredient }\n            data-testid={ `${index}-card-img` }\n          />\n          <Link to={ `/comidas/${meal.idMeal}` }>\n            <h4 data-testid={ `${index}-card-name` }><b>{meal.strMeal}</b></h4>\n          </Link>\n        </div>\n      ))}\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport HeaderWithSearch from './HeaderWithSearch';\n\nexport default function ExploreDrinksRecipesByIngredient() {\n  const { drinks } = useContext(RecipesContext);\n\n  return (\n    <>\n      <HeaderWithSearch />\n      {\n        drinks.map((drink, index) => (\n          <div key={ index } className=\"card\" data-testid={ `${index}-recipe-card` }>\n            <img\n              src={ `${drink.strDrinkThumb}` }\n              alt={ drink.strDrink }\n              data-testid={ `${index}-card-img` }\n            />\n            <Link to={ `/bebidas/${drink.idDrink}` }>\n              <h4 data-testid={ `${index}-card-name` }><b>{drink.strDrink}</b></h4>\n            </Link>\n          </div>\n        ))\n      }\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <h1>\n      Not Found\n    </h1>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\n\nexport default function MealsInProgress() {\n  const [mealDetails, setMealDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  // id => API\n  const { id } = useParams();\n\n  // ref: Lucas Caribé\n  const TWENTY = 20;\n\n  useEffect(() => {\n    const fetchMealIdAPi = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`).then((res) => res.json());\n      setMealDetails(response.meals[0]);\n    };\n    if (id) {\n      fetchMealIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (lsValue) {\n      setIngredientList(lsValue.meals[id]);\n    } else {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ drinks: {}, meals: { [id]: [] } }));\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (mealDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (mealDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: mealDetails[`strIngredient${index}`],\n            [`measure${index}`]: mealDetails[`strMeasure${index}`],\n            checked: false,\n          });\n        }\n      }\n      setIngredientList(ingredientes);\n    }\n  }, [mealDetails, ingredientList]);\n\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes')\n        || JSON.stringify({ drinks: {}, meals: {} });\n\n    const oldValue = JSON.parse(lsValue);\n\n    const value = {\n      [id]: [...ingredientList],\n    };\n    const newValue = { ...oldValue, meals: value };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, id]);\n\n  const onCheckboxClick = (index) => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  };\n\n  // if (!mealDetails) { return <h1>Loading...</h1>; }\n\n  return (\n    <>\n      <img\n        src={ mealDetails.strMealThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{mealDetails.strMeal}</p>\n      <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n      <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n      <p data-testid=\"recipe-category\">{mealDetails.strCategory}</p>\n      {ingredientList.map((ingredient, index) => (\n        <label\n          key={ index }\n          htmlFor={ `ingredient${index + 1}` }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id={ `ingredient${index + 1}` }\n            checked={ ingredient.checked }\n            onChange={ () => onCheckboxClick(index) }\n          />\n          {\n            `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`\n          }\n        </label>\n      ))}\n      <h3>Instruções</h3>\n      <p data-testid=\"instructions\">{mealDetails.strInstructions}</p>\n      <div>\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"startRecipeButton\"\n          >\n            Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\n\nexport default function DrinkInProgress() {\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  // id => API\n  const { idDrink } = useParams();\n\n  // ref: Lucas Caribé\n  const TWENTY = 20;\n\n  useEffect(() => {\n    const fetchDrinkIdAPi = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idDrink}`).then((res) => res.json());\n      setDrinkDetails(response.drinks[0]);\n    };\n    if (idDrink) {\n      fetchDrinkIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (lsValue) {\n      setIngredientList(lsValue.drinks[idDrink]);\n    } else {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ drinks: { [idDrink]: [] }, meals: {} }));\n    }\n  }, [idDrink]);\n\n  useEffect(() => {\n    if (drinkDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n      console.log(ingredientList.length);\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (drinkDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: drinkDetails[`strIngredient${index}`],\n            [`measure${index}`]: drinkDetails[`strMeasure${index}`],\n            checked: false,\n          });\n        }\n      }\n      setIngredientList(ingredientes);\n    }\n  }, [drinkDetails, ingredientList]);\n\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes')\n        || JSON.stringify({ drinks: {}, meals: {} });\n\n    const oldValue = JSON.parse(lsValue);\n\n    const value = {\n      [idDrink]: [...ingredientList],\n    };\n    const newValue = { ...oldValue, drinks: value };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, idDrink]);\n\n  const onCheckboxClick = (index) => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  };\n\n  // if (!drinkDetails) { return <h1>Loading...</h1>; }\n\n  return (\n    <>\n      <img\n        src={ drinkDetails.strDrinkThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{drinkDetails.strDrink}</p>\n      <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n      <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n      <p data-testid=\"recipe-category\">{drinkDetails.strCategory}</p>\n      {ingredientList.map((ingredient, index) => (\n        <label\n          key={ index }\n          htmlFor={ `ingredient${index + 1}` }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id={ `ingredient${index + 1}` }\n            checked={ ingredient.checked }\n            onChange={ () => onCheckboxClick(index) }\n          />\n          {\n            `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`\n          }\n        </label>\n      ))}\n      <h3>Instruções</h3>\n      <p data-testid=\"instructions\">{drinkDetails.strInstructions}</p>\n      <div>\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"startRecipeButton\"\n          >\n            Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport RecipesProvider from './Context/RecipesProvider';\nimport DrinksPage from './Pages/DrinksPage';\nimport ProfilePage from './Pages/ProfilePage';\nimport Login from './Pages/Login';\nimport ExplorePage from './Pages/ExplorePage';\nimport ExploreMealsPage from './Pages/ExploreMealsPage';\nimport ExploreMealsByIngredients from './Pages/ExploreMealsByIngredient';\nimport ExploreDrinksPage from './Pages/ExploreDrinksPage';\nimport ExploreDrinksByIngredient from './Pages/ExploreDrinksByIngredient';\nimport ExploreMealsByArea from './Pages/ExploreMealsByArea';\nimport DoneRecipes from './Pages/DoneRecipes';\nimport FavoriteRecipes from './Pages/FavoriteRecipes';\nimport DrinkDetails from './Pages/DrinkDetails';\nimport MealDetails from './Pages/MealDetails';\nimport MealsPage from './Pages/MealsPage';\nimport ExploreRecipesByIngredient from './Pages/ExploreMealsRecipesByIngredient';\nimport ExploreDrinksRecipesByIngredient from './Pages/ExploreDrinksRecipesByIngredient';\nimport NotFound from './Pages/NotFound';\nimport MealsInProgress from './Pages/MealsInProgress';\nimport DrinkInProgress from './Pages/DrinkInProgress';\n\nfunction App() {\n  // const { randomMeal } = useContext(RecipesContext);\n  // const { idMeal } = randomMeal;\n  return (\n    <RecipesProvider>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/comidas\" component={ MealsPage } />\n          <Route exact path=\"/comidas/nome/:nome\" component={ MealsPage } />\n          <Route\n            exact\n            path=\"/comidas/ingrediente/:ingrediente\"\n            component={ ExploreRecipesByIngredient }\n          />\n          <Route\n            exact\n            path=\"/comidas/primeira-letra/:letra\"\n            component={ MealsPage }\n          />\n          <Route exact path=\"/perfil\" component={ ProfilePage } />\n          <Route exact path=\"/bebidas\" component={ DrinksPage } />\n          <Route\n            exact\n            path=\"/bebidas/ingrediente/:ingrediente\"\n            component={ ExploreDrinksRecipesByIngredient }\n          />\n          <Route exact path=\"/explorar\" component={ ExplorePage } />\n          <Route exact path=\"/explorar/comidas\" component={ ExploreMealsPage } />\n          <Route exact path=\"/comidas/:idMeal\" component={ MealDetails } />\n          <Route exact path=\"/bebidas/:idDrink\" component={ DrinkDetails } />\n          <Route\n            exact\n            path=\"/bebidas/:idDrink/in-progress\"\n            component={ DrinkInProgress }\n          />\n          <Route\n            exact\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExploreMealsByIngredients }\n          />\n          <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinksPage } />\n          <Route\n            exact\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExploreDrinksByIngredient }\n          />\n          <Route\n            exact\n            path=\"/explorar/comidas/area\"\n            component={ ExploreMealsByArea }\n          />\n          <Route\n            exact\n            path=\"/receitas-feitas\"\n            component={ DoneRecipes }\n          />\n          <Route\n            exact\n            path=\"/receitas-favoritas\"\n            component={ FavoriteRecipes }\n          />\n          <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n          <Route exact path=\"/comidas/:id/in-progress\" component={ MealsInProgress } />\n        </Switch>\n      </HashRouter>\n    </RecipesProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createContext } from 'react';\n\nconst RecipesContext = createContext();\n\nexport default RecipesContext;\n"],"sourceRoot":""}
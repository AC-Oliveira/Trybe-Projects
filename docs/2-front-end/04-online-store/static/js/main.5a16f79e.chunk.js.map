{"version":3,"sources":["services/api.js","components/ProductInCart.jsx","components/ShoppingCart.jsx","components/RenderCard.jsx","components/Category.jsx","components/SearchBar.jsx","components/FormAssessment.jsx","components/AllAssessments.jsx","components/ProductDetails.jsx","components/CartForm.jsx","components/CheckoutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["url","urlQuery","getCategories","a","fetch","requestCategories","json","categories","getProductsFromCategoryAndQuery","categoryId","query","searchCategories","products","ProductInCart","props","handleClickMore","handleChange","index","setState","prevValue","quantity","maxQuantity","state","console","log","handleClickLess","product","available_quantity","this","data-testid","title","type","onClick","price","React","Component","ShoppingCart","newQuantity","calculateTotal","reduce","acumulator","current","localStorageCartList","JSON","parse","localStorage","getItem","forEach","jsonProduct","push","length","map","key","id","to","pathname","total","RenderCard","target","shoppingCartList","name","setItem","stringify","handleChangeQuantityInCart","src","thumbnail","alt","shipping","free_shipping","element","handleCartClick","Category","loading","handleCategory","bind","updateState","onChange","value","htmlFor","api","require","SearchBar","amountProductsInCart","handleClick","searchText","then","results","handleChangeCategory","catego","FormAssessment","email","nota","comentario","Productid","params","handleChanges","handleLocalStorage","localStorageArray","placeholder","defaultProps","AllAssessments","localStorageAssessments","filter","assessment","Math","random","ProductDetails","AllComments","handleState","requestProductApi","detail","match","requestProduct","resultProduct","warranty","CartForm","required","CheckoutPage","location","App","exact","path","render","component","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kTAAMA,EAAM,oDACNC,EAAW,0DAEV,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEAC2BC,MAAMJ,GADjC,cACCK,EADD,gBAEoBA,EAAkBC,OAFtC,cAECC,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAeC,IAAtB,+B,4CAAO,8CAAAL,EAAA,6DACLM,EADK,+BACQ,eAAgBC,EADxB,+BACgC,SADhC,SAG0BN,MAAM,GAAD,OAAIH,GAAJ,OAAeQ,EAAf,cAA+BC,IAH9D,cAGCC,EAHD,gBAIkBA,EAAiBL,OAJnC,cAICM,EAJD,yBAKEA,GALF,4C,6QCNcC,E,kDACnB,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAQRC,gBATmB,sBASD,kCAAAZ,EAAA,+DACgB,EAAKW,MAA7BE,EADQ,EACRA,aAAcC,EADN,EACMA,MADN,SAEV,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAClCC,SAAUD,EAAUC,WAAaD,EAAUE,YACvCF,EAAUE,YACVF,EAAUC,SAAW,MALX,OAORA,EAAa,EAAKE,MAAlBF,SACRG,QAAQC,IAAIJ,GACZJ,EAAaI,EAAUH,GATP,2CATC,EAqBnBQ,gBArBmB,sBAqBD,kCAAAtB,EAAA,+DACgB,EAAKW,MAA7BE,EADQ,EACRA,aAAcC,EADN,EACMA,MADN,SAEV,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAClCC,SAAiC,IAAvBD,EAAUC,SAAiB,EAAID,EAAUC,SAAW,MAHhD,OAKRA,EAAa,EAAKE,MAAlBF,SACRG,QAAQC,IAAIJ,GACZJ,EAAaI,EAAUH,GAPP,2CArBC,IAETS,EAAYZ,EAAZY,QAFS,OAGjB,EAAKJ,MAAQ,CACXF,SAAU,EACVC,YAAaK,EAAQC,oBALN,E,qDA+BT,IACAP,EAAaQ,KAAKN,MAAlBF,SACAM,EAAYE,KAAKd,MAAjBY,QACR,OACE,6BACE,wBAAIG,cAAY,8BAA+BH,EAAQI,OACvD,+CAEE,0BAAMD,cAAY,kCAAkCT,IAEtD,4BACES,cAAY,4BACZE,KAAK,SACLC,QAAUJ,KAAKb,iBAHjB,KAOA,4BACEc,cAAY,4BACZE,KAAK,SACLC,QAAUJ,KAAKH,iBAHjB,KAOA,6BACA,8BAAOC,EAAQO,MAAQb,Q,GAzDYc,IAAMC,WCC5BC,E,kDACnB,WAAYtB,GAAQ,IAAD,uBACjB,cAAMA,IAWRE,aAAe,SAACqB,EAAapB,GAAW,IAC9BL,EAAa,EAAKU,MAAlBV,SACRA,EAASK,GAAOG,SAAWiB,EAC3B,EAAKnB,SAAS,CACZN,cAhBe,EAoBnB0B,eAAiB,WAKf,OAJqB,EAAKhB,MAAlBV,SACkB2B,QAAO,SAACC,EAAYC,GAAb,OAC/BD,EAAaC,EAAQrB,SAAWqB,EAAQR,QACvC,IAtBH,IAAMS,EAAuBC,KAAKC,MAAMC,aAAaC,QAAQ,gBACvDlC,EAAW,GAHA,OAIjB8B,EAAqBK,SAAQ,SAACC,GAC5BpC,EAASqC,KAAT,2BAAmBN,KAAKC,MAAMI,IAA9B,IAA4C5B,SAAU,QAExD,EAAKE,MAAQ,CACXV,YARe,E,qDA4BT,IAAD,OACCA,EAAagB,KAAKN,MAAlBV,SACR,OAAwB,IAApBA,EAASsC,OACJ,wBAAIrB,cAAY,+BAAhB,8BAGP,6BACGjB,EAASuC,KAAI,SAACzB,EAAST,GAAV,OACZ,kBAAC,EAAD,CACEmC,IAAM1B,EAAQ2B,GACd3B,QAAUA,EACVT,MAAQA,EACRD,aAAe,EAAKA,kBAGxB,6BACIY,KAAKU,kBAET,kBAAC,IAAD,CACEgB,GAAK,CACHC,SAAU,YACVjC,MAAO,CACLV,WACA4C,MAAO5B,KAAKU,mBAGhBT,cAAY,qBARd,iB,GA/CkCM,a,eCCrBsB,E,iLACU,IAAXC,EAAU,EAAVA,OACVC,EAAmBhB,KAAKC,MAAMC,aAAaC,QAAQ,gBACzDa,EAAiBV,KAAKS,EAAOE,MAC7Bf,aAAagB,QAAQ,cAAelB,KAAKmB,UAAUH,M,+BAG3C,IAAD,SAC0C/B,KAAKd,MAA9CF,EADD,EACCA,SAAUmD,EADX,EACWA,2BAElB,OADKlB,aAAaC,QAAQ,gBAAgBD,aAAagB,QAAQ,cAAe,MAE5E,6BACGjD,EAASuC,KAAK,SAACzB,GAAD,OACb,yBAAK0B,IAAM1B,EAAQ2B,GAAKxB,cAAY,WAClC,kBAAC,IAAD,CACEyB,GAAE,mBAAe5B,EAAQ2B,IACzBxB,cAAY,uBAEZ,4BAAKH,EAAQI,OACb,yBAAKkC,IAAMtC,EAAQuC,UAAYC,IAAI,KACnC,2BAAIxC,EAAQO,SAEsB,IAAnCP,EAAQyC,SAASC,eACd,uBAAGvC,cAAY,iBAAf,mBACJ,4BACEE,KAAK,SACLF,cAAY,sBACZG,QAAU,SAACqC,GACTN,IACA,EAAKO,gBAAgBD,IAEvBT,KAAOjB,KAAKmB,UAAUpC,IAPxB,iC,GAxB4BS,a,QCDnBoC,E,kDACnB,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAEDQ,MAAQ,CACXkD,SAAS,GAGX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAPL,E,gMAWQxE,0B,OAAnBK,E,OACNqB,KAAK+C,YAAYpE,G,8IAGS,IAAXmD,EAAU,EAAVA,QAGfkB,EAFqBhD,KAAKd,MAAlB8D,UACUlB,EAAVmB,S,kCAIEtE,GACVqB,KAAKV,SAAS,CACZsD,SAAS,EACTjE,iB,+BAIM,IAAD,SACyBqB,KAAKN,MAA7BkD,EADD,EACCA,QAASjE,EADV,EACUA,WACjB,OAAIiE,EAAgB,uCAElB,6BACGjE,EAAW4C,KAAI,gBAAGE,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAP,OACd,yBAAKR,IAAMC,GACT,2BAAOyB,QAAUzB,EAAKxB,cAAY,YAChC,2BACEE,KAAK,QACL6B,KAAK,WACLP,GAAKA,EACLwB,MAAQxB,EACRuB,SAAW,EAAKH,iBAEjBb,Y,GA5CuBzB,aCChC4C,EAAMC,EAAQ,IAECC,E,kDACnB,WAAYnE,GAAQ,IAAD,uBACjB,cAAMA,IAkBRiD,2BAA6B,WAAO,IAE5B1B,EAD2B,EAAKf,MAA9B4D,qBACmC,EAC3C,EAAKhE,SAAS,CAAEgE,qBAAsB7C,IACtCQ,aAAagB,QAAQ,uBAAwBlB,KAAKmB,UAAUzB,KAvB3C,EA0BnB8C,YAAc,WAAO,IACXC,EAAe,EAAK9D,MAApB8D,WACR,OAAOL,EAAIvE,gCAAgC,eAAgB4E,GACxDC,MAAK,SAACzE,GACL,EAAKM,SAAS,CAAEN,SAAUA,EAAS0E,cA9BtB,EAkCnBtE,aAAe,YAAiB,IAAd0C,EAAa,EAAbA,OAChB,EAAKxC,SAAL,eAAiBwC,EAAOE,KAAOF,EAAOmB,SAjCtC,IAAMK,EAAuBvC,KAAKC,MAAMC,aAAaC,QAAQ,yBAF5C,OAGjB,EAAKxB,MAAQ,CACX8D,WAAY,GACZxE,SAAU,GACVsE,wBAGF,EAAKK,qBAAuB,EAAKA,qBAAqBb,KAA1B,gBATX,E,iEAsCEc,GAAS,IAAD,OAC3B,OAAOT,EAAIvE,gCAAgCgF,GACxCH,MAAK,SAACzE,GACL,EAAKM,SAAS,CAAEN,SAAUA,EAAS0E,e,+BAI/B,IAAD,EACgD1D,KAAKN,MAApD8D,EADD,EACCA,WAAYxE,EADb,EACaA,SAAUsE,EADvB,EACuBA,qBAI9B,OAHKrC,aAAaC,QAAQ,yBACxBD,aAAagB,QAAQ,uBAAwB,KAG7C,8BACE,2BAAOiB,QAAQ,oBACb,wBAAIjD,cAAY,wBAAhB,4DAGA,2BACE+B,KAAK,aACL7B,KAAK,OACLsB,GAAG,mBACHxB,cAAY,cACZgD,MAAQO,EACRR,SAAWhD,KAAKZ,eAElB,4BACEe,KAAK,SACLF,cAAY,eACZG,QAAUJ,KAAKuD,aAHjB,cAQF,kBAAC,IAAD,CAAM7B,GAAG,eAAezB,cAAY,wBAApC,YAGA,0BAAMA,cAAY,sBAAsBqD,GACxC,kBAAC,EAAD,CAAUN,SAAWhD,KAAK2D,uBAC1B,kBAAC,EAAD,CACE3E,SAAWA,EACXmD,2BAA6BnC,KAAKmC,kC,GAhFL5B,a,QCJlBsD,E,kDACnB,WAAY3E,GAAQ,IAAD,8BACjB,cAAMA,IAEDQ,MAAQ,CACXoE,MAAO,GACPC,KAAM,GACNC,WAAY,GACZC,UAAW/E,EAAMuC,GAAGyC,OAAOzC,IAG7B,EAAK0C,cAAgB,EAAKA,cAAcrB,KAAnB,gBACrB,EAAKsB,mBAAqB,EAAKA,mBAAmBtB,KAAxB,gBAXT,E,6DAcQ,IAAXhB,EAAU,EAAVA,OACNE,EAAgBF,EAAhBE,KAAMiB,EAAUnB,EAAVmB,MACdjD,KAAKV,SAAL,eACG0C,EAAOiB,M,2CAKV,IAAMoB,EAAoBtD,KAAKC,MAAMC,aAAaC,QAAQ,UAC1DmD,EAAkBhD,KAAKrB,KAAKN,OAC5BuB,aAAagB,QAAQ,QAASlB,KAAKmB,UAAUmC,KAE7Cd,EADwBvD,KAAKd,MAArBqE,aACIvD,KAAKN,S,+BAGT,IAAD,EAC6BM,KAAKN,MAAjCoE,EADD,EACCA,MAAOC,EADR,EACQA,KAAMC,EADd,EACcA,WAErB,OADK/C,aAAaC,QAAQ,UAAUD,aAAagB,QAAQ,QAAS,MAEhE,6BACE,8BACE,2BAAOiB,QAAQ,SACb,2BACE/C,KAAK,QACL8C,MAAQa,EACR9B,KAAK,QACLP,GAAG,QACH6C,YAAY,YACZtB,SAAWhD,KAAKmE,iBAGpB,4BAAQlB,MAAQc,EAAO/B,KAAK,OAAOgB,SAAWhD,KAAKmE,eACjD,4BAAQlB,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEF,2BAAOC,QAAQ,WACb,8BACED,MAAQe,EACRhC,KAAK,aACLP,GAAG,UACHtB,KAAK,OACLF,cAAY,4BACZ+C,SAAWhD,KAAKmE,iBAGpB,4BAAQhE,KAAK,SAASC,QAAUJ,KAAKoE,oBAArC,gB,GA/DkC7D,aAsE5CsD,EAAeU,aAAe,CAC5B9C,GAAI,I,ICvEe+C,E,uKACT,IACA/C,EAAOzB,KAAKd,MAAZuC,GACFgD,EAA0B1D,KAAKC,MAAMC,aAAaC,QAAQ,UAChE,OAAuC,IAAnCuD,EAAwBnD,OAAqB,uDAE/C,6BACGmD,EACEC,QAAO,qBAAGT,YAA8BxC,EAAGyC,OAAOzC,MAClDF,KAAI,SAACoD,EAAYtF,GAAb,OACH,yBAAKmC,IAAMnC,EAAQuF,KAAKC,UACtB,4BAAMF,EAAWb,OACjB,mCAEIa,EAAWZ,MAEf,4CAEIY,EAAWX,qB,GAlBezD,aA2B5CiE,EAAeD,aAAe,CAC5B9C,GAAI,I,ICxBeqD,E,kDACnB,aAAe,IAAD,sBACZ,eAEA,IAAMxB,EAAuBvC,KAAKC,MAAMC,aAAaC,QAAQ,yBAHjD,OAIZ,EAAKxB,MAAQ,CACXI,QAAS,GACTiF,YAAa,GACbzB,wBAGF,EAAK0B,YAAc,EAAKA,YAAYlC,KAAjB,gBACnB,EAAKS,YAAc,EAAKA,YAAYT,KAAjB,gBACnB,EAAKJ,gBAAkB,EAAKA,gBAAgBI,KAArB,gBAZX,E,0KAgBZlE,4CACAoB,KAAKiF,oB,wIAGKC,GACVlF,KAAKV,SAAS,CAAEQ,QAASoF,M,yCAGE,IAAXpD,EAAU,EAAVA,OACVC,EAAmBhB,KAAKC,MAAMC,aAAaC,QAAQ,gBACzDa,EAAiBV,KAAKS,EAAOE,MAC7Bf,aAAagB,QAAQ,cAAelB,KAAKmB,UAAUH,IAHzB,IAKpBtB,EAD2BT,KAAKN,MAA9B4D,qBACmC,EAC3CtD,KAAKV,SAAS,CAAEgE,qBAAsB7C,IACtCQ,aAAagB,QAAQ,uBAAwBlB,KAAKmB,UAAUzB,M,kCAGlDf,GACVM,KAAKV,UAAS,SAACC,GAAD,MAAgB,CAC5BwF,YAAY,GAAD,mBAAOxF,EAAUwF,aAAjB,CAA8BrF,U,uKAKnCyF,EAAUnF,KAAKd,MAAfiG,MACF/G,E,6CAA4C+G,EAAMjB,OAAOzC,I,SAClCjD,MAAMJ,G,cAA7BgH,E,gBACsBA,EAAe1G,O,OAArC2G,E,OACNrF,KAAKgF,YAAYK,G,qIAGT,IAAD,EACmCrF,KAAKN,MAAvCI,EADD,EACCA,QAASwD,EADV,EACUA,qBACT6B,EAAUnF,KAAKd,MAAfiG,MAER,OADKlE,aAAaC,QAAQ,gBAAgBD,aAAagB,QAAQ,cAAe,MAE5E,6BACE,wBAAIhC,cAAY,uBAAwBH,EAAQI,OAChD,yBAAKkC,IAAMtC,EAAQuC,UAAYC,IAAMxC,EAAQI,QAC7C,4BACE,iCAEIJ,EAAQO,OAEZ,8CAEIP,EAAQC,oBAEZ,4BACyB,OAArBD,EAAQwF,SAAoBxF,EAAQwF,SAAW,iBAGrD,4BACEnF,KAAK,SACLF,cAAY,6BACZG,QAAUJ,KAAK0C,gBACfV,KAAOjB,KAAKmB,UAAUpC,IAJxB,wBAQA,kBAAC,IAAD,CAAM4B,GAAG,gBAAgBzB,cAAY,wBAArC,YAGA,0BAAMA,cAAY,sBAAsBqD,GACxC,kBAAC,EAAD,CAAgB7B,GAAK0D,EAAQ5B,YAAcvD,KAAKuD,cAChD,kBAAC,EAAD,CAAgB9B,GAAK0D,S,GAnFe5E,aAyF5CuE,EAAeP,aAAe,CAC5BY,MAAO,I,IC/FYI,E,uKAEjB,OACE,8BACE,2BAAOrC,QAAQ,YAAf,gBAEE,2BAAO/C,KAAK,OAAOF,cAAY,oBAAoBwB,GAAG,WAAW+D,UAAQ,KAE3E,2BAAOtC,QAAQ,SAAf,QAEE,2BAAO/C,KAAK,OAAOF,cAAY,iBAAiBwB,GAAG,QAAQ+D,UAAQ,KAErE,2BAAOtC,QAAQ,OAAf,MAEE,2BAAO/C,KAAK,OAAOF,cAAY,eAAewB,GAAG,MAAM+D,UAAQ,KAEjE,2BAAOtC,QAAQ,SAAf,WAEE,2BAAO/C,KAAK,OAAOF,cAAY,iBAAiBwB,GAAG,QAAQ+D,UAAQ,KAErE,2BAAOtC,QAAQ,OAAf,MAEE,2BAAO/C,KAAK,OAAOF,cAAY,eAAewB,GAAG,MAAM+D,UAAQ,KAEjE,2BAAOtC,QAAQ,WAAf,cAEE,2BAAO/C,KAAK,OAAOF,cAAY,mBAAmBwB,GAAG,UAAU+D,UAAQ,U,GA1B3ClF,IAAMC,WCEvBkF,E,uKACT,IAAD,EAC8CzF,KAAKd,MAAlDwG,SAAYhG,MAASV,EADtB,EACsBA,SAAU4C,EADhC,EACgCA,MACvC,OACE,6BACE,4BACG5C,EAASuC,KAAI,SAACzB,GAAD,OACZ,wBAAI0B,IAAM1B,EAAQ2B,IACf3B,EAAQI,MACT,yCAEGJ,EAAQN,UAEX,mDAEGM,EAAQO,OAEX,6CAEGP,EAAQO,MAAQP,EAAQN,eAKjC,oCAEGoC,GAEH,kBAAC,EAAD,MACA,4BAAQzB,KAAK,UAAb,gB,GA7BkCG,IAAMC,WCuBjCoF,E,uKAjBX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAS,kBAAO,kBAAC,EAAD,SAElB,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,gBAAgBE,UAAYvF,IAC9C,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,eAAeE,UAAYjB,IAC7C,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YAAYE,UAAYN,U,GAZlCnF,IAAMC,WCIJyF,QACW,cAA7BC,OAAOP,SAASQ,UAEkB,UAA7BD,OAAOP,SAASQ,UAEhBD,OAAOP,SAASQ,SAASf,MAC1B,2DCZNgB,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAACiD,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNlH,QAAQkH,MAAMA,EAAMC,c","file":"static/js/main.5a16f79e.chunk.js","sourcesContent":["const url = 'https://api.mercadolibre.com/sites/MLB/categories';\nconst urlQuery = 'https://api.mercadolibre.com/sites/MLB/search?category=';\n\nexport async function getCategories() {\n  const requestCategories = await fetch(url);\n  const categories = await requestCategories.json();\n  return categories;\n}\n\nexport async function getProductsFromCategoryAndQuery(\n  categoryId = '&CATEGORY_ID', query = '$QUERY',\n) {\n  const searchCategories = await fetch(`${urlQuery}${categoryId}&q=${query}`);\n  const products = await searchCategories.json();\n  return products;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ProductInCart extends React.Component {\n  constructor(props) {\n    super(props);\n    const { product } = props;\n    this.state = {\n      quantity: 1,\n      maxQuantity: product.available_quantity,\n    };\n  }\n\n  handleClickMore = async () => {\n    const { handleChange, index } = this.props;\n    await this.setState((prevValue) => ({\n      quantity: prevValue.quantity === prevValue.maxQuantity\n        ? prevValue.maxQuantity\n        : prevValue.quantity + 1,\n    }));\n    const { quantity } = this.state;\n    console.log(quantity);\n    handleChange(quantity, index);\n  }\n\n  handleClickLess = async () => {\n    const { handleChange, index } = this.props;\n    await this.setState((prevValue) => ({\n      quantity: prevValue.quantity === 1 ? 1 : prevValue.quantity - 1,\n    }));\n    const { quantity } = this.state;\n    console.log(quantity);\n    handleChange(quantity, index);\n  }\n\n  render() {\n    const { quantity } = this.state;\n    const { product } = this.props;\n    return (\n      <div>\n        <h3 data-testid=\"shopping-cart-product-name\">{ product.title }</h3>\n        <product>\n          Quantidade:\n          <span data-testid=\"shopping-cart-product-quantity\">{quantity}</span>\n        </product>\n        <button\n          data-testid=\"product-increase-quantity\"\n          type=\"button\"\n          onClick={ this.handleClickMore }\n        >\n          +\n        </button>\n        <button\n          data-testid=\"product-decrease-quantity\"\n          type=\"button\"\n          onClick={ this.handleClickLess }\n        >\n          -\n        </button>\n        <br />\n        <span>{product.price * quantity}</span>\n      </div>\n    );\n  }\n}\n\nProductInCart.propTypes = {\n  product: PropTypes.objectOf().isRequired,\n  index: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProductInCart from './ProductInCart';\n\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    const localStorageCartList = JSON.parse(localStorage.getItem('productList'));\n    const products = [];\n    localStorageCartList.forEach((jsonProduct) => {\n      products.push({ ...JSON.parse(jsonProduct), quantity: 1 });\n    });\n    this.state = {\n      products,\n    };\n  }\n\n  handleChange = (newQuantity, index) => {\n    const { products } = this.state;\n    products[index].quantity = newQuantity;\n    this.setState({\n      products,\n    });\n  }\n\n  calculateTotal = () => {\n    const { products } = this.state;\n    const newTotal = products.reduce((acumulator, current) => (\n      acumulator + current.quantity * current.price\n    ), 0);\n    return newTotal;\n  }\n\n  render() {\n    const { products } = this.state;\n    if (products.length === 0) {\n      return <h2 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h2>;\n    }\n    return (\n      <div>\n        {products.map((product, index) => (\n          <ProductInCart\n            key={ product.id }\n            product={ product }\n            index={ index }\n            handleChange={ this.handleChange }\n          />\n        ))}\n        <div>\n          { this.calculateTotal() }\n        </div>\n        <Link\n          to={ {\n            pathname: '/checkout',\n            state: {\n              products,\n              total: this.calculateTotal(),\n            },\n          } }\n          data-testid=\"checkout-products\"\n        >\n          Checkout\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Fazer o loading...\nexport default class RenderCard extends Component {\n  handleCartClick({ target }) {\n    const shoppingCartList = JSON.parse(localStorage.getItem('productList'));\n    shoppingCartList.push(target.name);\n    localStorage.setItem('productList', JSON.stringify(shoppingCartList));\n  }\n\n  render() {\n    const { products, handleChangeQuantityInCart } = this.props;\n    if (!localStorage.getItem('productList')) localStorage.setItem('productList', '[]');\n    return (\n      <div>\n        {products.map(((product) => (\n          <div key={ product.id } data-testid=\"product\">\n            <Link\n              to={ `/details/${product.id}` }\n              data-testid=\"product-detail-link\"\n            >\n              <h3>{product.title}</h3>\n              <img src={ product.thumbnail } alt=\"\" />\n              <p>{product.price}</p>\n            </Link>\n            {product.shipping.free_shipping === true\n              ? <p data-testid=\"free-shipping\">Frete Grátis</p> : false}\n            <button\n              type=\"button\"\n              data-testid=\"product-add-to-cart\"\n              onClick={ (element) => {\n                handleChangeQuantityInCart();\n                this.handleCartClick(element);\n              } }\n              name={ JSON.stringify(product) }\n            >\n              Adcionar ao Carrinho\n            </button>\n          </div>\n        )))}\n      </div>\n    );\n  }\n}\n\nRenderCard.propTypes = {\n  products: PropTypes.arrayOf().isRequired,\n  handleChangeQuantityInCart: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\nexport default class Category extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n\n    this.handleCategory = this.handleCategory.bind(this);\n  }\n\n  async componentDidMount() {\n    const categories = await getCategories();\n    this.updateState(categories);\n  }\n\n  handleCategory({ target }) {\n    const { onChange } = this.props;\n    const { value } = target;\n    onChange(value);\n  }\n\n  updateState(categories) {\n    this.setState({\n      loading: false,\n      categories,\n    });\n  }\n\n  render() {\n    const { loading, categories } = this.state;\n    if (loading) return <h3>Loading</h3>;\n    return (\n      <div>\n        {categories.map(({ id, name }) => (\n          <div key={ id }>\n            <label htmlFor={ id } data-testid=\"category\">\n              <input\n                type=\"radio\"\n                name=\"category\"\n                id={ id }\n                value={ id }\n                onChange={ this.handleCategory }\n              />\n              {name}\n            </label>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nCategory.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport RenderCard from './RenderCard';\nimport Category from './Category';\n\nconst api = require('../services/api');\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    const amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n    this.state = {\n      searchText: '',\n      products: [],\n      amountProductsInCart,\n    };\n\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\n  }\n\n  // async componentDidMount() {\n  //   const products = await api.getProductsFromCategoryAndQuery();\n  //   updateState(products);\n  // }\n\n  // updateState = (products) => this.setState({ products: products.results });\n\n  handleChangeQuantityInCart = () => {\n    const { amountProductsInCart } = this.state;\n    const newQuantity = amountProductsInCart + 1;\n    this.setState({ amountProductsInCart: newQuantity });\n    localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n  }\n\n  handleClick = () => {\n    const { searchText } = this.state;\n    return api.getProductsFromCategoryAndQuery('&CATEGORY_ID', searchText)\n      .then((products) => {\n        this.setState({ products: products.results });\n      });\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  handleChangeCategory(catego) {\n    return api.getProductsFromCategoryAndQuery(catego)\n      .then((products) => {\n        this.setState({ products: products.results });\n      });\n  }\n\n  render() {\n    const { searchText, products, amountProductsInCart } = this.state;\n    if (!localStorage.getItem('amountProductsInCart')) {\n      localStorage.setItem('amountProductsInCart', '0');\n    }\n    return (\n      <main>\n        <label htmlFor=\"input-search-bar\">\n          <h3 data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </h3>\n          <input\n            name=\"searchText\"\n            type=\"text\"\n            id=\"input-search-bar\"\n            data-testid=\"query-input\"\n            value={ searchText }\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.handleClick }\n          >\n            Pesquisar\n          </button>\n        </label>\n        <Link to=\"shoppingcart\" data-testid=\"shopping-cart-button\">\n          Carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{amountProductsInCart}</span>\n        <Category onChange={ this.handleChangeCategory } />\n        <RenderCard\n          products={ products }\n          handleChangeQuantityInCart={ this.handleChangeQuantityInCart }\n        />\n      </main>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FormAssessment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      nota: '',\n      comentario: '',\n      Productid: props.id.params.id,\n    };\n\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handleLocalStorage = this.handleLocalStorage.bind(this);\n  }\n\n  handleChanges({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleLocalStorage() {\n    const localStorageArray = JSON.parse(localStorage.getItem('notas'));\n    localStorageArray.push(this.state);\n    localStorage.setItem('notas', JSON.stringify(localStorageArray));\n    const { handleClick } = this.props;\n    handleClick(this.state);\n  }\n\n  render() {\n    const { email, nota, comentario } = this.state;\n    if (!localStorage.getItem('notas')) localStorage.setItem('notas', '[]');\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"email\">\n            <input\n              type=\"email\"\n              value={ email }\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Seu Email\"\n              onChange={ this.handleChanges }\n            />\n          </label>\n          <select value={ nota } name=\"nota\" onChange={ this.handleChanges }>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n          </select>\n          <label htmlFor=\"comment\">\n            <textarea\n              value={ comentario }\n              name=\"comentario\"\n              id=\"comment\"\n              type=\"text\"\n              data-testid=\"product-detail-evaluation\"\n              onChange={ this.handleChanges }\n            />\n          </label>\n          <button type=\"button\" onClick={ this.handleLocalStorage }>Enviar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nFormAssessment.defaultProps = {\n  id: {},\n};\n\nFormAssessment.propTypes = {\n  id: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n  handleClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class AllAssessments extends Component {\n  render() {\n    const { id } = this.props;\n    const localStorageAssessments = JSON.parse(localStorage.getItem('notas'));\n    if (localStorageAssessments.length === 0) return <h1>Nenhuma Avaliação</h1>;\n    return (\n      <div>\n        {localStorageAssessments\n          .filter(({ Productid }) => Productid === id.params.id)\n          .map((assessment, index) => (\n            <div key={ index * Math.random() }>\n              <h5>{ assessment.email }</h5>\n              <p>\n                Nota:\n                { assessment.nota }\n              </p>\n              <p>\n                Comentário:\n                { assessment.comentario }\n              </p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nAllAssessments.defaultProps = {\n  id: {},\n};\n\nAllAssessments.propTypes = {\n  id: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport FormAssessment from './FormAssessment';\nimport AllAssessments from './AllAssessments';\n\nexport default class ProductDetails extends Component {\n  constructor() {\n    super();\n\n    const amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n    this.state = {\n      product: '',\n      AllComments: [],\n      amountProductsInCart,\n    };\n\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCartClick = this.handleCartClick.bind(this);\n  }\n\n  async componentDidMount() {\n    getProductsFromCategoryAndQuery();\n    this.requestProductApi();\n  }\n\n  handleState(detail) {\n    this.setState({ product: detail });\n  }\n\n  handleCartClick({ target }) {\n    const shoppingCartList = JSON.parse(localStorage.getItem('productList'));\n    shoppingCartList.push(target.name);\n    localStorage.setItem('productList', JSON.stringify(shoppingCartList));\n    const { amountProductsInCart } = this.state;\n    const newQuantity = amountProductsInCart + 1;\n    this.setState({ amountProductsInCart: newQuantity });\n    localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n  }\n\n  handleClick(state) {\n    this.setState((prevValue) => ({\n      AllComments: ([...prevValue.AllComments, state]),\n    }));\n  }\n\n  async requestProductApi() {\n    const { match } = this.props;\n    const url = `https://api.mercadolibre.com/items/${match.params.id}`;\n    const requestProduct = await fetch(url);\n    const resultProduct = await requestProduct.json();\n    this.handleState(resultProduct);\n  }\n\n  render() {\n    const { product, amountProductsInCart } = this.state;\n    const { match } = this.props;\n    if (!localStorage.getItem('productList')) localStorage.setItem('productList', '[]');\n    return (\n      <div>\n        <h3 data-testid=\"product-detail-name\">{ product.title }</h3>\n        <img src={ product.thumbnail } alt={ product.title } />\n        <ul>\n          <li>\n            R$\n            { product.price }\n          </li>\n          <li>\n            Disponíveis:\n            { product.available_quantity }\n          </li>\n          <li>\n            { product.warranty !== null ? product.warranty : 'Sem Garantia'}\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.handleCartClick }\n          name={ JSON.stringify(product) }\n        >\n          Adcionar ao Carrinho\n        </button>\n        <Link to=\"/shoppingcart\" data-testid=\"shopping-cart-button\">\n          Carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{amountProductsInCart}</span>\n        <FormAssessment id={ match } handleClick={ this.handleClick } />\n        <AllAssessments id={ match } />\n      </div>\n    );\n  }\n}\n\nProductDetails.defaultProps = {\n  match: {},\n};\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n","import React from 'react';\n\nexport default class CartForm extends React.Component {\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"fullname\">\n          Nome Completo\n          <input type=\"text\" data-testid=\"checkout-fullname\" id=\"fullname\" required />\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <input type=\"text\" data-testid=\"checkout-email\" id=\"email\" required />\n        </label>\n        <label htmlFor=\"cpf\">\n          CPF\n          <input type=\"text\" data-testid=\"checkout-cpf\" id=\"cpf\" required />\n        </label>\n        <label htmlFor=\"phone\">\n          Telefone\n          <input type=\"text\" data-testid=\"checkout-phone\" id=\"phone\" required />\n        </label>\n        <label htmlFor=\"cep\">\n          CEP\n          <input type=\"text\" data-testid=\"checkout-cep\" id=\"cep\" required />\n        </label>\n        <label htmlFor=\"address\">\n          Endereço\n          <input type=\"text\" data-testid=\"checkout-address\" id=\"address\" required />\n        </label>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartForm from './CartForm';\n\nexport default class CheckoutPage extends React.Component {\n  render() {\n    const { location: { state: { products, total } } } = this.props;\n    return (\n      <div>\n        <ul>\n          {products.map((product) => (\n            <li key={ product.id }>\n              {product.title}\n              <p>\n                Quantidade:\n                {product.quantity}\n              </p>\n              <p>\n                Preço unitário:\n                {product.price}\n              </p>\n              <p>\n                Preço total:\n                {product.price * product.quantity}\n              </p>\n            </li>\n          ))}\n        </ul>\n        <p>\n          Total:\n          {total}\n        </p>\n        <CartForm />\n        <button type=\"submit\">Comprar</button>\n      </div>\n    );\n  }\n}\n\nCheckoutPage.propTypes = {\n  location: PropTypes.objectOf().isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport ShoppingCart from './components/ShoppingCart';\nimport SearchBar from './components/SearchBar';\nimport ProductDetails from './components/ProductDetails';\nimport CheckoutPage from './components/CheckoutPage';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ () => (<SearchBar />) }\n          />\n          <Route exact path=\"/shoppingCart\" component={ ShoppingCart } />\n          <Route exact path=\"/details/:id\" component={ ProductDetails } />\n          <Route exact path=\"/checkout\" component={ CheckoutPage } />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-trivia-react-redux/src/Pages/Feedback.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport playAction from '../Redux/Action';\nimport './feedback.css';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super();\n    this.resetPoints = this.resetPoints.bind(this);\n    this.returnHeaderComponents = this.returnHeaderComponents.bind(this);\n    this.returnFeedbackComponents = this.returnFeedbackComponents.bind(this);\n    this.returnButtons = this.returnButtons.bind(this);\n    this.returnGravatar = this.returnGravatar.bind(this);\n  }\n\n  resetPoints() {\n    const resetScoreAssertion = this.props.resetScoreAssertion;\n    resetScoreAssertion({\n      score: 0,\n      assertions: 0\n    });\n  }\n\n  returnGravatar() {\n    const playerEmail = this.props.playerEmail;\n    const imgPath = 'https://www.gravatar.com/avatar/$ce11fce876c93ed5d2a72da660496473';\n    const hash = md5(playerEmail).toString();\n    const image = `${imgPath}${hash}`;\n    return image;\n  }\n\n  returnHeaderComponents() {\n    const _this$props = this.props,\n          playerName = _this$props.playerName,\n          playerScore = _this$props.playerScore;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-testid\": \"feedback-text\",\n      className: \"end-game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"FIM DE JOGO!\")), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.returnGravatar(),\n      alt: \"Gravatar\",\n      \"data-testid\": \"header-profile-picture\",\n      className: \"gravatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      \"data-testid\": \"header-player-name\",\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, playerName), React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, playerScore)));\n  }\n\n  returnFeedbackComponents() {\n    const _this$props2 = this.props,\n          playerAssertions = _this$props2.playerAssertions,\n          playerScore = _this$props2.playerScore;\n    const ASSERTIONS = 3;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      className: \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, playerAssertions >= ASSERTIONS ? 'Mandou bem!' : 'Podia ser melhor...')), React.createElement(\"div\", {\n      className: \"results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Score:\", ' ', playerScore), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Hits:\", ' ', playerAssertions)));\n  }\n\n  returnButtons() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: this.resetPoints,\n      className: \"end-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Jogar novamente\")), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      onClick: this.resetPoints,\n      className: \"end-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Ver Ranking\")));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"feedback-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"result-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.returnHeaderComponents(), this.returnFeedbackComponents(), this.returnButtons()));\n  }\n\n}\n\nFeedback.propTypes = {\n  playerAssertions: PropTypes.number.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n  playerName: PropTypes.string.isRequired,\n  playerScore: PropTypes.number.isRequired,\n  resetScoreAssertion: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  playerName: state.player.name,\n  playerAssertions: state.player.assertions,\n  playerScore: state.player.score,\n  playerEmail: state.player.gravatarEmail\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetScoreAssertion: payload => dispatch(playAction(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-trivia-react-redux/src/Pages/Feedback.js"],"names":["PropTypes","React","connect","Link","md5","playAction","Feedback","Component","constructor","resetPoints","bind","returnHeaderComponents","returnFeedbackComponents","returnButtons","returnGravatar","resetScoreAssertion","props","score","assertions","playerEmail","imgPath","hash","toString","image","playerName","playerScore","playerAssertions","ASSERTIONS","render","propTypes","number","isRequired","string","func","mapStateToProps","state","player","name","gravatarEmail","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport playAction from '../Redux/Action';\nimport './feedback.css';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super();\n    this.resetPoints = this.resetPoints.bind(this);\n    this.returnHeaderComponents = this.returnHeaderComponents.bind(this);\n    this.returnFeedbackComponents = this.returnFeedbackComponents.bind(this);\n    this.returnButtons = this.returnButtons.bind(this);\n    this.returnGravatar = this.returnGravatar.bind(this);\n  }\n\n  resetPoints() {\n    const { resetScoreAssertion } = this.props;\n    resetScoreAssertion({\n      score: 0,\n      assertions: 0,\n    });\n  }\n\n  returnGravatar() {\n    const { playerEmail } = this.props;\n    const imgPath = 'https://www.gravatar.com/avatar/$ce11fce876c93ed5d2a72da660496473';\n    const hash = md5(playerEmail).toString();\n    const image = `${imgPath}${hash}`;\n\n    return image;\n  }\n\n  returnHeaderComponents() {\n    const { playerName, playerScore } = this.props;\n    return (\n      <div>\n        <div>\n          <span data-testid=\"feedback-text\" className=\"end-game\">FIM DE JOGO!</span>\n        </div>\n        <header>\n          <img\n            src={ this.returnGravatar() }\n            alt=\"Gravatar\"\n            data-testid=\"header-profile-picture\"\n            className=\"gravatar\"\n          />\n          <span data-testid=\"header-player-name\" className=\"text\">{ playerName }</span>\n          <span data-testid=\"header-score\">{ playerScore }</span>\n        </header>\n      </div>\n    );\n  }\n\n  returnFeedbackComponents() {\n    const { playerAssertions, playerScore } = this.props;\n    const ASSERTIONS = 3;\n    return (\n      <div>\n        <div>\n          <p\n            data-testid=\"feedback-text\"\n            className=\"feedback-text\"\n          >\n            {(playerAssertions >= ASSERTIONS)\n              ? 'Mandou bem!'\n              : 'Podia ser melhor...'}\n          </p>\n        </div>\n        <div className=\"results\">\n          <span\n            data-testid=\"feedback-total-score\"\n          >\n            Score:\n            {' '}\n            { playerScore }\n          </span>\n          <span\n            data-testid=\"feedback-total-question\"\n          >\n            Hits:\n            {' '}\n            { playerAssertions }\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  returnButtons() {\n    return (\n      <div>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ this.resetPoints }\n            className=\"end-buttons\"\n          >\n            Jogar novamente\n          </button>\n        </Link>\n        <Link to=\"/ranking\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ this.resetPoints }\n            className=\"end-buttons\"\n          >\n            Ver Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"feedback-wrapper\">\n        <div className=\"result-box\">\n          { this.returnHeaderComponents() }\n          { this.returnFeedbackComponents() }\n          { this.returnButtons()}\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  playerAssertions: PropTypes.number.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n  playerName: PropTypes.string.isRequired,\n  playerScore: PropTypes.number.isRequired,\n  resetScoreAssertion: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  playerName: state.player.name,\n  playerAssertions: state.player.assertions,\n  playerScore: state.player.score,\n  playerEmail: state.player.gravatarEmail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetScoreAssertion: (payload) => dispatch(playAction(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}
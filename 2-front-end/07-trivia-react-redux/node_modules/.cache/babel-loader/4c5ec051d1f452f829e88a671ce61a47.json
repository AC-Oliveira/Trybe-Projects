{"ast":null,"code":"import _objectSpread from \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Arquivos onde serão colocadas todas as actions.\n// md5(emailDoUsuário).toString()\nconst QUESTION_EP = 'https://opentdb.com/api.php?amount=5';\nexport const PLAY = 'PLAY';\nexport const GET_TOKEN = 'GET_TOKEN';\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\nconst state = {\n  player: {\n    name: '',\n    assertions: 0,\n    score: 0,\n    gravatarEmail: ''\n  }\n};\n\nconst playAction = payload => {\n  state.player = _objectSpread({}, state.player, {}, payload);\n  localStorage.setItem('state', JSON.stringify(state));\n  return {\n    type: PLAY,\n    payload\n  };\n};\n\nexport default playAction;\n\nconst tokenAction = payload => ({\n  type: GET_TOKEN,\n  payload\n});\n\nexport const questionAction = payload => ({\n  type: GET_QUESTIONS,\n  payload\n});\nexport const getTokenThunk = () => async dispatch => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const responseJson = await response.json();\n  console.log(responseJson);\n  localStorage.setItem('token', responseJson.token);\n  dispatch(tokenAction(responseJson.token));\n};\nexport const getQuestionsThunk = token => async dispatch => {\n  console.log(token);\n  const response = await fetch(`${QUESTION_EP}&token=${token}`);\n  const responseJson = await response.json();\n  console.log(responseJson.results);\n  dispatch(questionAction(responseJson.results));\n};","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-trivia-react-redux/src/Redux/Action/index.js"],"names":["QUESTION_EP","PLAY","GET_TOKEN","GET_QUESTIONS","state","player","name","assertions","score","gravatarEmail","playAction","payload","localStorage","setItem","JSON","stringify","type","tokenAction","questionAction","getTokenThunk","dispatch","response","fetch","responseJson","json","console","log","token","getQuestionsThunk","results"],"mappings":";AAAA;AACA;AACA,MAAMA,WAAW,GAAG,sCAApB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,MAAMC,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE;AACtBC,IAAAA,IAAI,EAAE,EADgB;AAEtBC,IAAAA,UAAU,EAAE,CAFU;AAGtBC,IAAAA,KAAK,EAAE,CAHe;AAItBC,IAAAA,aAAa,EAAE;AAJO;AAAV,CAAd;;AAOA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9BP,EAAAA,KAAK,CAACC,MAAN,qBAAoBD,KAAK,CAACC,MAA1B,MAAqCM,OAArC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAA9B;AACA,SAAO;AAAEY,IAAAA,IAAI,EAAEf,IAAR;AAAcU,IAAAA;AAAd,GAAP;AACD,CAJD;;AAMA,eAAeD,UAAf;;AAEA,MAAMO,WAAW,GAAIN,OAAD,KAAc;AAChCK,EAAAA,IAAI,EAAEd,SAD0B;AAEhCS,EAAAA;AAFgC,CAAd,CAApB;;AAKA,OAAO,MAAMO,cAAc,GAAIP,OAAD,KAAc;AAC1CK,EAAAA,IAAI,EAAEb,aADoC;AAE1CQ,EAAAA;AAF0C,CAAd,CAAvB;AAKP,OAAO,MAAMQ,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAA5B;AACA,QAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACAX,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BU,YAAY,CAACI,KAA3C;AACAP,EAAAA,QAAQ,CAACH,WAAW,CAACM,YAAY,CAACI,KAAd,CAAZ,CAAR;AACD,CANM;AAQP,OAAO,MAAMC,iBAAiB,GAAID,KAAD,IAAW,MAAOP,QAAP,IAAoB;AAC9DK,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,QAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,WAAY,UAAS2B,KAAM,EAA/B,CAA5B;AACA,QAAMJ,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACM,OAAzB;AACAT,EAAAA,QAAQ,CAACF,cAAc,CAACK,YAAY,CAACM,OAAd,CAAf,CAAR;AACD,CANM","sourcesContent":["// Arquivos onde serão colocadas todas as actions.\n// md5(emailDoUsuário).toString()\nconst QUESTION_EP = 'https://opentdb.com/api.php?amount=5';\n\nexport const PLAY = 'PLAY';\nexport const GET_TOKEN = 'GET_TOKEN';\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\n\nconst state = { player: {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n} };\n\nconst playAction = (payload) => {\n  state.player = { ...state.player, ...payload };\n  localStorage.setItem('state', JSON.stringify(state));\n  return { type: PLAY, payload };\n};\n\nexport default playAction;\n\nconst tokenAction = (payload) => ({\n  type: GET_TOKEN,\n  payload,\n});\n\nexport const questionAction = (payload) => ({\n  type: GET_QUESTIONS,\n  payload,\n});\n\nexport const getTokenThunk = () => async (dispatch) => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const responseJson = await response.json();\n  console.log(responseJson);\n  localStorage.setItem('token', responseJson.token);\n  dispatch(tokenAction(responseJson.token));\n};\n\nexport const getQuestionsThunk = (token) => async (dispatch) => {\n  console.log(token);\n  const response = await fetch(`${QUESTION_EP}&token=${token}`);\n  const responseJson = await response.json();\n  console.log(responseJson.results);\n  dispatch(questionAction(responseJson.results));\n};\n"]},"metadata":{},"sourceType":"module"}
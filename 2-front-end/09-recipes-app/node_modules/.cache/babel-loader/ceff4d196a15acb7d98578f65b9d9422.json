{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/MealsPage.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport HeaderWithSearch from './HeaderWithSearch';\nimport CategoriesButtons from './Utils/CategoriesButtons';\nexport default function MealsPage() {\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({\n    category: '',\n    toogle: false\n  });\n  const {\n    mealsAndInputs,\n    mealsAndInputs: {\n      meals\n    },\n    setMealsAndInputs,\n    setMealDetails\n  } = useContext(RecipesContext);\n  const location = useLocation().pathname;\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchMealAPI() {\n    const APIMeals = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIMeals).then(resp => resp.json());\n    let mealsList = [...response.meals];\n    if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n    setMealsAndInputs({ ...mealsAndInputs,\n      meals: mealsList\n    });\n  }\n\n  async function fetchMealCatergoryAPI() {\n    const APICategory = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then(resp => resp.json());\n    const categoriesMealsList = [...response.meals];\n    const mealArrayCategories = categoriesMealsList.reduce((acc, current) => {\n      const {\n        strCategory\n      } = current;\n      return { ...acc,\n        [strCategory]: strCategory\n      };\n    }, {});\n    setMealsCategories(Object.keys(mealArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchMealAPI();\n    fetchMealCatergoryAPI();\n  }, []);\n  const buttonsUtils = {\n    mealsCategories,\n    categoryToogle,\n    fetchMealAPI,\n    setCategoryToogle,\n    setMealsAndInputs,\n    mealsAndInputs\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderWithSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), location.includes('/comidas') && /*#__PURE__*/React.createElement(CategoriesButtons, {\n    props: buttonsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }\n  }), location.includes('/comidas') && meals.map((meal, index) => /*#__PURE__*/React.createElement(Link, {\n    onClick: () => setMealDetails(meal),\n    key: index,\n    to: `/comidas/${meal.idMeal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${meal.strMealThumb}`,\n    alt: meal.strIngredient,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 54\n    }\n  }, meal.strMeal))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/MealsPage.jsx"],"names":["React","useState","useContext","useEffect","Link","useLocation","Footer","RecipesContext","HeaderWithSearch","CategoriesButtons","MealsPage","mealsCategories","setMealsCategories","categoryToogle","setCategoryToogle","category","toogle","mealsAndInputs","meals","setMealsAndInputs","setMealDetails","location","pathname","TWELVE","FIVE","fetchMealAPI","APIMeals","response","fetch","then","resp","json","mealsList","length","slice","fetchMealCatergoryAPI","APICategory","categoriesMealsList","mealArrayCategories","reduce","acc","current","strCategory","Object","keys","buttonsUtils","includes","map","meal","index","idMeal","strMealThumb","strIngredient","strMeal"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport HeaderWithSearch from './HeaderWithSearch';\nimport CategoriesButtons from './Utils/CategoriesButtons';\n\nexport default function MealsPage() {\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({ category: '', toogle: false });\n  const { mealsAndInputs,\n    mealsAndInputs: { meals },\n    setMealsAndInputs, setMealDetails } = useContext(RecipesContext);\n  const location = useLocation().pathname;\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchMealAPI() {\n    const APIMeals = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIMeals).then((resp) => resp.json());\n    let mealsList = [...response.meals];\n    if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n    setMealsAndInputs({ ...mealsAndInputs, meals: mealsList });\n  }\n  async function fetchMealCatergoryAPI() {\n    const APICategory = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then((resp) => resp.json());\n    const categoriesMealsList = [...response.meals];\n    const mealArrayCategories = categoriesMealsList.reduce((acc, current) => {\n      const { strCategory } = current;\n      return { ...acc, [strCategory]: strCategory };\n    }, {});\n    setMealsCategories(Object.keys(mealArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchMealAPI();\n    fetchMealCatergoryAPI();\n  }, []);\n\n  const buttonsUtils = { mealsCategories,\n    categoryToogle,\n    fetchMealAPI,\n    setCategoryToogle,\n    setMealsAndInputs,\n    mealsAndInputs };\n  return (\n    <>\n      <HeaderWithSearch />\n      {location.includes('/comidas') && <CategoriesButtons props={ buttonsUtils } />}\n      {location.includes('/comidas') && meals.map((meal, index) => (\n        <Link\n          onClick={ () => setMealDetails(meal) }\n          key={ index }\n          to={ `/comidas/${meal.idMeal}` }\n        >\n          <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n            <img\n              src={ `${meal.strMealThumb}` }\n              alt={ meal.strIngredient }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4 data-testid={ `${index}-card-name` }><b>{meal.strMeal}</b></h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
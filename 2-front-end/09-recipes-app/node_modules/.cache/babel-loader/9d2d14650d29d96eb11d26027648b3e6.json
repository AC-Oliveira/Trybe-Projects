{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/InputSearchCocktails.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\nexport default function InputSearchCocktails() {\n  const [search, setSearch] = useState('');\n  const [cocktailInput, setCocktailInput] = useState('');\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?';\n  const apiCocktails = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?';\n  const {\n    api,\n    setApi\n  } = useContext(RecipesContext);\n  let drinksList = api.drinks;\n  const TWELVE = 12;\n  const NOTFOUND = 'Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.';\n\n  const alert = response => {\n    if (response.drinks) setApi(response);\n    if (!response.drinks) global.alert(NOTFOUND);\n  };\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${cocktailInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiCocktails}s=${cocktailInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiCocktails}f=${cocktailInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && cocktailInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n      case 'Ingrediente':\n        apiIngredienteRequest();\n        break;\n\n      case 'Nome':\n        apiNomeRequest();\n        break;\n\n      case PRIMEIRA_LETRA:\n        apiLetraRequest();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  if (drinksList.length === 1) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/bebidas/${drinksList[0].idDrink}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputsSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    id: \"search\",\n    \"data-testid\": \"search-input\",\n    onChange: ev => setCocktailInput(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Ingrediente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"ingredient-search-radio\",\n    id: \"Ingrediente\",\n    name: \"search\",\n    onClick: () => setSearch('Ingrediente'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"name-search-radio\",\n    id: \"Nome\",\n    name: \"search\",\n    onClick: () => setSearch('Nome'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Primeira letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"first-letter-search-radio\",\n    id: \"Primeira letra\",\n    name: \"search\",\n    onClick: () => setSearch(PRIMEIRA_LETRA),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), \"Primeira letra\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Buscar\"), drinksList.map((drink, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    \"data-testid\": `${index}-recipe-card`,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: drink.strDrinkThumb,\n    alt: \"Meal card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, drink.strDrink))));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/InputSearchCocktails.jsx"],"names":["React","useContext","useState","Redirect","RecipesContext","InputSearchCocktails","search","setSearch","cocktailInput","setCocktailInput","PRIMEIRA_LETRA","apiIngredienteUrl","apiCocktails","api","setApi","drinksList","drinks","TWELVE","NOTFOUND","alert","response","global","handleClick","apiIngredienteRequest","fetch","then","resp","json","apiNomeRequest","apiLetraRequest","length","idDrink","slice","ev","target","value","map","drink","index","strDrinkThumb","strDrink"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\n\nexport default function InputSearchCocktails() {\n  const [search, setSearch] = useState('');\n  const [cocktailInput, setCocktailInput] = useState('');\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?';\n  const apiCocktails = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?';\n  const { api, setApi } = useContext(RecipesContext);\n  let drinksList = api.drinks;\n  const TWELVE = 12;\n  const NOTFOUND = 'Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.';\n\n  const alert = (response) => {\n    if (response.drinks) setApi(response);\n    if (!response.drinks) global.alert(NOTFOUND);\n  };\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiCocktails}s=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiCocktails}f=${cocktailInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && cocktailInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n    case 'Ingrediente':\n      apiIngredienteRequest();\n      break;\n    case 'Nome':\n      apiNomeRequest();\n      break;\n    case PRIMEIRA_LETRA:\n      apiLetraRequest();\n      break;\n    default:\n      break;\n    }\n  };\n\n  if (drinksList.length === 1) {\n    return <Redirect to={ `/bebidas/${drinksList[0].idDrink}` } />;\n  }\n\n  if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n\n  return (\n    <div className=\"inputsSearch\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        id=\"search\"\n        data-testid=\"search-input\"\n        onChange={ (ev) => setCocktailInput(ev.target.value) }\n      />\n      <label htmlFor=\"Ingrediente\">\n        <input\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"Ingrediente\"\n          name=\"search\"\n          onClick={ () => setSearch('Ingrediente') }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"Nome\">\n        <input\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          id=\"Nome\"\n          name=\"search\"\n          onClick={ () => setSearch('Nome') }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"Primeira letra\">\n        <input\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"Primeira letra\"\n          name=\"search\"\n          onClick={ () => setSearch(PRIMEIRA_LETRA) }\n        />\n        Primeira letra\n      </label>\n      <button\n        onClick={ handleClick }\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n      >\n        Buscar\n      </button>\n      { drinksList.map((drink, index) => (\n        <div className=\"card\" data-testid={ `${index}-recipe-card` } key={ index }>\n          <img\n            data-testid={ `${index}-card-img` }\n            src={ drink.strDrinkThumb }\n            alt=\"Meal card\"\n          />\n          <p data-testid={ `${index}-card-name` }>{ drink.strDrink }</p>\n        </div>))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/ExploreMealsByIngredient.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nexport default function ExploreMealsByIngredient() {\n  const {\n    mealsAndInputs,\n    setMealsAndInputs\n  } = useContext(RecipesContext);\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const imgURL = 'https://www.themealdb.com/images/ingredients/';\n  useEffect(() => {\n    async function fetchAPI() {\n      const APIMeals = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n      const response = await fetch(APIMeals).then(resp => resp.json());\n      let mealsList = [...response.meals];\n      if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n      setMeals(mealsList);\n    }\n\n    fetchAPI();\n  }, []);\n\n  const handleClick = ingredient => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${ingredient}`).then(resp => resp.json());\n      setMealsAndInputs({ ...mealsAndInputs,\n        meals: response.meals\n      });\n    };\n\n    apiIngredienteRequest();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderWithoutSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Explorar Ingredientes\"), meals.map((meal, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/comidas/ingrediente/${meal.strIngredient}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => handleClick(meal.strIngredient),\n    \"aria-hidden\": \"true\",\n    className: \"card\",\n    \"data-testid\": `${index}-ingredient-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${imgURL}${meal.strIngredient}-Small.png`,\n    alt: meal.strIngredient,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, meal.strIngredient))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/ExploreMealsByIngredient.jsx"],"names":["React","useContext","useEffect","useState","Link","HeaderWithoutSearch","Footer","RecipesContext","ExploreMealsByIngredient","mealsAndInputs","setMealsAndInputs","meals","setMeals","TWELVE","apiIngredienteUrl","imgURL","fetchAPI","APIMeals","response","fetch","then","resp","json","mealsList","length","slice","handleClick","ingredient","apiIngredienteRequest","map","meal","index","strIngredient"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithoutSearch from './HeaderWithoutSearch';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function ExploreMealsByIngredient() {\n  const { mealsAndInputs, setMealsAndInputs } = useContext(RecipesContext);\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const imgURL = 'https://www.themealdb.com/images/ingredients/';\n  useEffect(() => {\n    async function fetchAPI() {\n      const APIMeals = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n      const response = await fetch(APIMeals).then((resp) => resp.json());\n      let mealsList = [...response.meals];\n      if (mealsList.length > TWELVE) mealsList = mealsList.slice(0, TWELVE);\n      setMeals(mealsList);\n    }\n    fetchAPI();\n  }, []);\n\n  const handleClick = (ingredient) => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${ingredient}`)\n        .then((resp) => resp.json());\n      setMealsAndInputs({ ...mealsAndInputs, meals: response.meals });\n    };\n    apiIngredienteRequest();\n  };\n\n  return (\n    <div>\n      <HeaderWithoutSearch />\n      <h3 data-testid=\"page-title\">Explorar Ingredientes</h3>\n      {meals.map((meal, index) => (\n        <Link key={ index } to={ `/comidas/ingrediente/${meal.strIngredient}` }>\n          <div\n            onClick={ () => handleClick(meal.strIngredient) }\n            aria-hidden=\"true\"\n            className=\"card\"\n            data-testid={ `${index}-ingredient-card` }\n          >\n            <img\n              src={ `${imgURL}${meal.strIngredient}-Small.png` }\n              alt={ meal.strIngredient }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4\n              data-testid={ `${index}-card-name` }\n            >\n              <b>{meal.strIngredient}</b>\n            </h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
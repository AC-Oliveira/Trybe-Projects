{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/MealsInProgress.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\nexport default function MealsInProgress() {\n  const [mealDetails, setMealDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]); // id => API\n\n  const {\n    id\n  } = useParams(); // ref: Lucas CaribÃ©\n\n  const TWENTY = 20;\n  useEffect(() => {\n    const fetchMealIdAPi = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`).then(res => res.json());\n      setMealDetails(response.meals[0]);\n    };\n\n    if (id) {\n      fetchMealIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (lsValue) {\n      setIngredientList(lsValue.meals[id]);\n    } else {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        drinks: {},\n        meals: {\n          [id]: []\n        }\n      }));\n    }\n  }, [id]);\n  useEffect(() => {\n    if (mealDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (mealDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: mealDetails[`strIngredient${index}`],\n            [`measure${index}`]: mealDetails[`strMeasure${index}`],\n            checked: false\n          });\n        }\n      }\n\n      setIngredientList(ingredientes);\n    }\n  }, [mealDetails, ingredientList]);\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes') || JSON.stringify({\n      drinks: {},\n      meals: {}\n    });\n    const oldValue = JSON.parse(lsValue);\n    const value = {\n      [id]: [...ingredientList]\n    };\n    const newValue = { ...oldValue,\n      meals: value\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, id]);\n\n  const onCheckboxClick = index => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  }; // if (!mealDetails) { return <h1>Loading...</h1>; }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: mealDetails.strMealThumb,\n    alt: \"img-Details\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, mealDetails.strMeal), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Compartilhar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Favoritar\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, mealDetails.strCategory), ingredientList.map((ingredient, index) => /*#__PURE__*/React.createElement(\"label\", {\n    key: index,\n    htmlFor: `ingredient${index + 1}`,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: `ingredient${index + 1}`,\n    checked: ingredient.checked,\n    onChange: () => onCheckboxClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, mealDetails.strInstructions), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    className: \"startRecipeButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Finalizar Receita\"))));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/MealsInProgress.jsx"],"names":["React","useState","useEffect","Link","useParams","MealsInProgress","mealDetails","setMealDetails","ingredientList","setIngredientList","id","TWENTY","fetchMealIdAPi","response","fetch","then","res","json","meals","lsValue","JSON","parse","localStorage","getItem","setItem","stringify","drinks","length","ingredientes","index","push","checked","oldValue","value","newValue","onCheckboxClick","strMealThumb","strMeal","strCategory","map","ingredient","strInstructions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\n\nexport default function MealsInProgress() {\n  const [mealDetails, setMealDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  // id => API\n  const { id } = useParams();\n\n  // ref: Lucas CaribÃ©\n  const TWENTY = 20;\n\n  useEffect(() => {\n    const fetchMealIdAPi = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`).then((res) => res.json());\n      setMealDetails(response.meals[0]);\n    };\n    if (id) {\n      fetchMealIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (lsValue) {\n      setIngredientList(lsValue.meals[id]);\n    } else {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ drinks: {}, meals: { [id]: [] } }));\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (mealDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (mealDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: mealDetails[`strIngredient${index}`],\n            [`measure${index}`]: mealDetails[`strMeasure${index}`],\n            checked: false,\n          });\n        }\n      }\n      setIngredientList(ingredientes);\n    }\n  }, [mealDetails, ingredientList]);\n\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes')\n        || JSON.stringify({ drinks: {}, meals: {} });\n\n    const oldValue = JSON.parse(lsValue);\n\n    const value = {\n      [id]: [...ingredientList],\n    };\n    const newValue = { ...oldValue, meals: value };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, id]);\n\n  const onCheckboxClick = (index) => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  };\n\n  // if (!mealDetails) { return <h1>Loading...</h1>; }\n\n  return (\n    <>\n      <img\n        src={ mealDetails.strMealThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{mealDetails.strMeal}</p>\n      <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n      <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n      <p data-testid=\"recipe-category\">{mealDetails.strCategory}</p>\n      {ingredientList.map((ingredient, index) => (\n        <label\n          key={ index }\n          htmlFor={ `ingredient${index + 1}` }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id={ `ingredient${index + 1}` }\n            checked={ ingredient.checked }\n            onChange={ () => onCheckboxClick(index) }\n          />\n          {\n            `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`\n          }\n        </label>\n      ))}\n      <h3>InstruÃ§Ãµes</h3>\n      <p data-testid=\"instructions\">{mealDetails.strInstructions}</p>\n      <div>\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"startRecipeButton\"\n          >\n            Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
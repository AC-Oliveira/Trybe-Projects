{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/DrinkInProgress.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\nexport default function DrinkInProgress() {\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]); // id => API\n\n  const {\n    idDrink\n  } = useParams(); // ref: Lucas CaribÃ©\n\n  const TWENTY = 20;\n  useEffect(() => {\n    const fetchDrinkIdAPi = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idDrink}`).then(res => res.json());\n      setDrinkDetails(response.drinks[0]);\n    };\n\n    if (idDrink) {\n      fetchDrinkIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (lsValue) {\n      setIngredientList(lsValue.drinks[idDrink]);\n    } else {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        drinks: {\n          [idDrink]: []\n        },\n        meals: {}\n      }));\n    }\n  }, [idDrink]);\n  useEffect(() => {\n    if (drinkDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n      console.log(ingredientList.length);\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (drinkDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: drinkDetails[`strIngredient${index}`],\n            [`measure${index}`]: drinkDetails[`strMeasure${index}`],\n            checked: false\n          });\n        }\n      }\n\n      setIngredientList(ingredientes);\n    }\n  }, [drinkDetails, ingredientList]);\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes') || JSON.stringify({\n      drinks: {},\n      meals: {}\n    });\n    const oldValue = JSON.parse(lsValue);\n    const value = {\n      [idDrink]: [...ingredientList]\n    };\n    const newValue = { ...oldValue,\n      drinks: value\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, idDrink]);\n\n  const onCheckboxClick = index => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  }; // if (!drinkDetails) { return <h1>Loading...</h1>; }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: drinkDetails.strDrinkThumb,\n    alt: \"img-Details\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, drinkDetails.strDrink), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Compartilhar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Favoritar\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, drinkDetails.strCategory), ingredientList.map((ingredient, index) => /*#__PURE__*/React.createElement(\"label\", {\n    key: index,\n    htmlFor: `ingredient${index + 1}`,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: `ingredient${index + 1}`,\n    checked: ingredient.checked,\n    onChange: () => onCheckboxClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, drinkDetails.strInstructions), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    className: \"startRecipeButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Finalizar Receita\"))));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/DrinkInProgress.jsx"],"names":["React","useState","useEffect","Link","useParams","DrinkInProgress","drinkDetails","setDrinkDetails","ingredientList","setIngredientList","idDrink","TWENTY","fetchDrinkIdAPi","response","fetch","then","res","json","drinks","lsValue","JSON","parse","localStorage","getItem","setItem","stringify","meals","length","ingredientes","console","log","index","push","checked","oldValue","value","newValue","onCheckboxClick","strDrinkThumb","strDrink","strCategory","map","ingredient","strInstructions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from 'react-router-dom';\n\nexport default function DrinkInProgress() {\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [ingredientList, setIngredientList] = useState([]);\n\n  // id => API\n  const { idDrink } = useParams();\n\n  // ref: Lucas CaribÃ©\n  const TWENTY = 20;\n\n  useEffect(() => {\n    const fetchDrinkIdAPi = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idDrink}`).then((res) => res.json());\n      setDrinkDetails(response.drinks[0]);\n    };\n    if (idDrink) {\n      fetchDrinkIdAPi();\n    }\n\n    const lsValue = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (lsValue) {\n      setIngredientList(lsValue.drinks[idDrink]);\n    } else {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ drinks: { [idDrink]: [] }, meals: {} }));\n    }\n  }, [idDrink]);\n\n  useEffect(() => {\n    if (drinkDetails && ingredientList.length < 1) {\n      const ingredientes = [];\n      console.log(ingredientList.length);\n\n      for (let index = 1; index <= TWENTY; index += 1) {\n        if (drinkDetails[`strIngredient${index}`]) {\n          ingredientes.push({\n            [`ingredients${index}`]: drinkDetails[`strIngredient${index}`],\n            [`measure${index}`]: drinkDetails[`strMeasure${index}`],\n            checked: false,\n          });\n        }\n      }\n      setIngredientList(ingredientes);\n    }\n  }, [drinkDetails, ingredientList]);\n\n  useEffect(() => {\n    const lsValue = localStorage.getItem('inProgressRecipes')\n        || JSON.stringify({ drinks: {}, meals: {} });\n\n    const oldValue = JSON.parse(lsValue);\n\n    const value = {\n      [idDrink]: [...ingredientList],\n    };\n    const newValue = { ...oldValue, drinks: value };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newValue));\n  }, [ingredientList, idDrink]);\n\n  const onCheckboxClick = (index) => {\n    const newValue = [...ingredientList];\n    newValue[index].checked = !newValue[index].checked;\n    setIngredientList(newValue);\n  };\n\n  // if (!drinkDetails) { return <h1>Loading...</h1>; }\n\n  return (\n    <>\n      <img\n        src={ drinkDetails.strDrinkThumb }\n        alt=\"img-Details\"\n        data-testid=\"recipe-photo\"\n      />\n      <p data-testid=\"recipe-title\">{drinkDetails.strDrink}</p>\n      <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n      <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n      <p data-testid=\"recipe-category\">{drinkDetails.strCategory}</p>\n      {ingredientList.map((ingredient, index) => (\n        <label\n          key={ index }\n          htmlFor={ `ingredient${index + 1}` }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id={ `ingredient${index + 1}` }\n            checked={ ingredient.checked }\n            onChange={ () => onCheckboxClick(index) }\n          />\n          {\n            `${ingredient[`ingredients${index + 1}`]} \n                - ${ingredient[`measure${index + 1}`]}`\n          }\n        </label>\n      ))}\n      <h3>InstruÃ§Ãµes</h3>\n      <p data-testid=\"instructions\">{drinkDetails.strInstructions}</p>\n      <div>\n        <Link to=\"/receitas-feitas\">\n          <button\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            className=\"startRecipeButton\"\n          >\n            Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/FavoriteButton.jsx\";\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nexport default function FavoriteButton({\n  props: {\n    mealDetails,\n    drinkDetails\n  }\n}) {\n  const [favorite, setFavorite] = useState(false);\n  const location = useLocation().pathname.includes('/comidas');\n  const mealId = useLocation().pathname.replace('/comidas/', '');\n  const drinkId = useLocation().pathname.replace('/bebidas/', '');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n  const blackOrWhite = location ? favoriteRecipes.some(item => item.id === mealId) : favoriteRecipes.some(item => item.id === drinkId);\n\n  if (!localStorage.getItem('favoriteRecipes')) {\n    localStorage.setItem('favoriteRecipes', '[]');\n  }\n\n  const setFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeMealRecipe = {\n      id: mealDetails.idMeal,\n      category: mealDetails.strCategory,\n      type: 'comida',\n      area: mealDetails.strArea,\n      alcoholicOrNot: '',\n      name: mealDetails.strMeal,\n      image: mealDetails.strMealThumb\n    };\n    recipes.push(storeMealRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n\n  const setFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeDrinkRecipe = {\n      id: drinkDetails.idDrink,\n      category: drinkDetails.strCategory,\n      type: 'bebida',\n      area: '',\n      alcoholicOrNot: drinkDetails.strAlcoholic,\n      name: drinkDetails.strDrink,\n      image: drinkDetails.strDrinkThumb\n    };\n    recipes.push(storeDrinkRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter(recipe => recipe.id !== mealId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter(recipe => recipe.id !== drinkId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const test = blackOrWhite ? removeFavoriteMealsRecipes : setFavoriteMealsRecipes;\n\n  const setOrRemoveFavoriteMealsRecipes = () => {\n    test();\n  };\n\n  const setOrRemoveFavoriteDrinkRecipes = () => {\n    if (!blackOrWhite) setFavoriteDrinksRecipes();\n    if (blackOrWhite) removeFavoriteDrinksRecipes();\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      if (location) setOrRemoveFavoriteMealsRecipes();\n      if (!location) setOrRemoveFavoriteDrinkRecipes();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: blackOrWhite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"A black heart Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nFavoriteButton.propTypes = {\n  props: {\n    mealDetails: {\n      idMeal: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strArea: PropTypes.string.isRequired,\n      strMeal: PropTypes.string.isRequired,\n      strMealThumb: PropTypes.string.isRequired\n    }.isRequired,\n    drinkDetails: {\n      idDrink: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strAlcoholic: PropTypes.string.isRequired,\n      strDrink: PropTypes.string.isRequired,\n      strDrinkThumb: PropTypes.string.isRequired\n    }.isRequired\n  }.isRequired\n};","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/FavoriteButton.jsx"],"names":["React","useState","useLocation","PropTypes","FavoriteButton","props","mealDetails","drinkDetails","favorite","setFavorite","location","pathname","includes","mealId","replace","drinkId","favoriteRecipes","JSON","parse","localStorage","getItem","blackOrWhite","some","item","id","setItem","setFavoriteMealsRecipes","recipes","storeMealRecipe","idMeal","category","strCategory","type","area","strArea","alcoholicOrNot","name","strMeal","image","strMealThumb","push","recipesToStore","stringify","setFavoriteDrinksRecipes","storeDrinkRecipe","idDrink","strAlcoholic","strDrink","strDrinkThumb","removeFavoriteMealsRecipes","favRecipes","filter","recipe","removeFavoriteDrinksRecipes","test","setOrRemoveFavoriteMealsRecipes","setOrRemoveFavoriteDrinkRecipes","blackHeartIcon","whiteHeartIcon","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAIA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf;AAAT,CAAxB,EAAkE;AAC/E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMS,QAAQ,GAAGR,WAAW,GAAGS,QAAd,CAAuBC,QAAvB,CAAgC,UAAhC,CAAjB;AACA,QAAMC,MAAM,GAAGX,WAAW,GAAGS,QAAd,CAAuBG,OAAvB,CAA+B,WAA/B,EAA4C,EAA5C,CAAf;AACA,QAAMC,OAAO,GAAGb,WAAW,GAAGS,QAAd,CAAuBG,OAAvB,CAA+B,WAA/B,EAA4C,EAA5C,CAAhB;AAEA,QAAME,eAAe,GAAGC,IAAI,CACzBC,KADqB,CACfC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CADe,KAC6B,EADrD;AAEA,QAAMC,YAAY,GAAGX,QAAQ,GAAGM,eAAe,CAC5CM,IAD6B,CACvBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYX,MADE,CAAH,GACWG,eAAe,CACpDM,IADqC,CAC/BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,OADU,CADxC;;AAIA,MAAI,CAACI,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAL,EAA8C;AAC5CD,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwC,IAAxC;AACD;;AAED,QAAMC,uBAAuB,GAAG,MAAM;AACpC,UAAMC,OAAO,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAhB;AACA,UAAMQ,eAAe,GAAG;AAAEJ,MAAAA,EAAE,EAAElB,WAAW,CAACuB,MAAlB;AACtBC,MAAAA,QAAQ,EAAExB,WAAW,CAACyB,WADA;AAEtBC,MAAAA,IAAI,EAAE,QAFgB;AAGtBC,MAAAA,IAAI,EAAE3B,WAAW,CAAC4B,OAHI;AAItBC,MAAAA,cAAc,EAAE,EAJM;AAKtBC,MAAAA,IAAI,EAAE9B,WAAW,CAAC+B,OALI;AAMtBC,MAAAA,KAAK,EAAEhC,WAAW,CAACiC;AANG,KAAxB;AAQAZ,IAAAA,OAAO,CAACa,IAAR,CAAaZ,eAAb;AACA,UAAMa,cAAc,GAAGxB,IAAI,CAACyB,SAAL,CAAef,OAAf,CAAvB;AACAR,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCgB,cAAxC;AACAhC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAdD;;AAeA,QAAMmC,wBAAwB,GAAG,MAAM;AACrC,UAAMhB,OAAO,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAhB;AACA,UAAMwB,gBAAgB,GAAG;AAAEpB,MAAAA,EAAE,EAAEjB,YAAY,CAACsC,OAAnB;AACvBf,MAAAA,QAAQ,EAAEvB,YAAY,CAACwB,WADA;AAEvBC,MAAAA,IAAI,EAAE,QAFiB;AAGvBC,MAAAA,IAAI,EAAE,EAHiB;AAIvBE,MAAAA,cAAc,EAAE5B,YAAY,CAACuC,YAJN;AAKvBV,MAAAA,IAAI,EAAE7B,YAAY,CAACwC,QALI;AAMvBT,MAAAA,KAAK,EAAE/B,YAAY,CAACyC;AANG,KAAzB;AASArB,IAAAA,OAAO,CAACa,IAAR,CAAaI,gBAAb;AACA,UAAMH,cAAc,GAAGxB,IAAI,CAACyB,SAAL,CAAef,OAAf,CAAvB;AACAR,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCgB,cAAxC;AACAhC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAfD;;AAiBA,QAAMyC,0BAA0B,GAAG,MAAM;AACvC,UAAMtB,OAAO,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAhB;AACA,UAAM8B,UAAU,GAAGjC,IAAI,CAACyB,SAAL,CAAef,OAAO,CAACwB,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAAC5B,EAAP,KAAcX,MAAzC,CAAf,CAAnB;AACAM,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCyB,UAAxC;AACAzC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GALD;;AAOA,QAAM6C,2BAA2B,GAAG,MAAM;AACxC,UAAM1B,OAAO,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAhB;AACA,UAAM8B,UAAU,GAAGjC,IAAI,CAACyB,SAAL,CAAef,OAAO,CAACwB,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAAC5B,EAAP,KAAcT,OAAzC,CAAf,CAAnB;AACAI,IAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCyB,UAAxC;AACAzC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GALD;;AAOA,QAAM8C,IAAI,GAAGjC,YAAY,GAAG4B,0BAAH,GAAgCvB,uBAAzD;;AAEA,QAAM6B,+BAA+B,GAAG,MAAM;AAC5CD,IAAAA,IAAI;AACL,GAFD;;AAGA,QAAME,+BAA+B,GAAG,MAAM;AAC5C,QAAI,CAACnC,YAAL,EAAmBsB,wBAAwB;AAC3C,QAAItB,YAAJ,EAAkBgC,2BAA2B;AAC9C,GAHD;;AAKA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAG,MAAM;AACd,UAAI3C,QAAJ,EAAc6C,+BAA+B;AAC7C,UAAI,CAAC7C,QAAL,EAAe8C,+BAA+B;AAC/C,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,mBAAY,cADd;AAEE,IAAA,GAAG,EAAGnC,YAAY,GAAGoC,cAAH,GAAoBC,cAFxC;AAGE,IAAA,GAAG,EAAC,oBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD;AAEDtD,cAAc,CAACuD,SAAf,GAA2B;AACzBtD,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AACXuB,MAAAA,MAAM,EAAE1B,SAAS,CAACyD,MAAV,CAAiBC,UADd;AAEX9B,MAAAA,WAAW,EAAE5B,SAAS,CAACyD,MAAV,CAAiBC,UAFnB;AAGX3B,MAAAA,OAAO,EAAE/B,SAAS,CAACyD,MAAV,CAAiBC,UAHf;AAIXxB,MAAAA,OAAO,EAAElC,SAAS,CAACyD,MAAV,CAAiBC,UAJf;AAKXtB,MAAAA,YAAY,EAAEpC,SAAS,CAACyD,MAAV,CAAiBC;AALpB,MAMXA,UAPG;AAQLtD,IAAAA,YAAY,EAAE;AACZsC,MAAAA,OAAO,EAAE1C,SAAS,CAACyD,MAAV,CAAiBC,UADd;AAEZ9B,MAAAA,WAAW,EAAE5B,SAAS,CAACyD,MAAV,CAAiBC,UAFlB;AAGZf,MAAAA,YAAY,EAAE3C,SAAS,CAACyD,MAAV,CAAiBC,UAHnB;AAIZd,MAAAA,QAAQ,EAAE5C,SAAS,CAACyD,MAAV,CAAiBC,UAJf;AAKZb,MAAAA,aAAa,EAAE7C,SAAS,CAACyD,MAAV,CAAiBC;AALpB,MAMZA;AAdG,IAeLA;AAhBuB,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\n\nexport default function FavoriteButton({ props: { mealDetails, drinkDetails } }) {\n  const [favorite, setFavorite] = useState(false);\n  const location = useLocation().pathname.includes('/comidas');\n  const mealId = useLocation().pathname.replace('/comidas/', '');\n  const drinkId = useLocation().pathname.replace('/bebidas/', '');\n\n  const favoriteRecipes = JSON\n    .parse(localStorage.getItem('favoriteRecipes')) || [];\n  const blackOrWhite = location ? favoriteRecipes\n    .some((item) => item.id === mealId) : favoriteRecipes\n    .some((item) => item.id === drinkId);\n\n  if (!localStorage.getItem('favoriteRecipes')) {\n    localStorage.setItem('favoriteRecipes', '[]');\n  }\n\n  const setFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeMealRecipe = { id: mealDetails.idMeal,\n      category: mealDetails.strCategory,\n      type: 'comida',\n      area: mealDetails.strArea,\n      alcoholicOrNot: '',\n      name: mealDetails.strMeal,\n      image: mealDetails.strMealThumb,\n    };\n    recipes.push(storeMealRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n  const setFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const storeDrinkRecipe = { id: drinkDetails.idDrink,\n      category: drinkDetails.strCategory,\n      type: 'bebida',\n      area: '',\n      alcoholicOrNot: drinkDetails.strAlcoholic,\n      name: drinkDetails.strDrink,\n      image: drinkDetails.strDrinkThumb,\n    };\n\n    recipes.push(storeDrinkRecipe);\n    const recipesToStore = JSON.stringify(recipes);\n    localStorage.setItem('favoriteRecipes', recipesToStore);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteMealsRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter((recipe) => recipe.id !== mealId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const removeFavoriteDrinksRecipes = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favRecipes = JSON.stringify(recipes.filter((recipe) => recipe.id !== drinkId));\n    localStorage.setItem('favoriteRecipes', favRecipes);\n    setFavorite(!favorite);\n  };\n\n  const test = blackOrWhite ? removeFavoriteMealsRecipes : setFavoriteMealsRecipes;\n\n  const setOrRemoveFavoriteMealsRecipes = () => {\n    test();\n  };\n  const setOrRemoveFavoriteDrinkRecipes = () => {\n    if (!blackOrWhite) setFavoriteDrinksRecipes();\n    if (blackOrWhite) removeFavoriteDrinksRecipes();\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ () => {\n        if (location) setOrRemoveFavoriteMealsRecipes();\n        if (!location) setOrRemoveFavoriteDrinkRecipes();\n      } }\n    >\n      <img\n        data-testid=\"favorite-btn\"\n        src={ blackOrWhite ? blackHeartIcon : whiteHeartIcon }\n        alt=\"A black heart Icon\"\n      />\n    </button>\n  );\n}\n\nFavoriteButton.propTypes = {\n  props: {\n    mealDetails: {\n      idMeal: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strArea: PropTypes.string.isRequired,\n      strMeal: PropTypes.string.isRequired,\n      strMealThumb: PropTypes.string.isRequired,\n    }.isRequired,\n    drinkDetails: {\n      idDrink: PropTypes.string.isRequired,\n      strCategory: PropTypes.string.isRequired,\n      strAlcoholic: PropTypes.string.isRequired,\n      strDrink: PropTypes.string.isRequired,\n      strDrinkThumb: PropTypes.string.isRequired,\n    }.isRequired,\n  }.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
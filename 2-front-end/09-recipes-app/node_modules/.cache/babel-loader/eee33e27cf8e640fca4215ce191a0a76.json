{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/InputSearchMeals.jsx\";\nimport React, { useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\nexport default function InputSearchMeals() {\n  const {\n    mealsAndInputs: {\n      meals,\n      search,\n      mealInput\n    },\n    setMealsAndInputs,\n    mealsAndInputs\n  } = useContext(RecipesContext);\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const apiMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?';\n  const NOTFOUND = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\n  const alert = response => {\n    if (response.meals) {\n      setMealsAndInputs({\n        search: '',\n        mealInput: '',\n        meals: response.meals\n      });\n    }\n\n    if (!response.meals) {\n      global.alert(NOTFOUND);\n    }\n  };\n\n  if (Array.isArray(meals) && meals.length === 1) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/comidas/${meals[0].idMeal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    });\n  }\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${mealInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}s=${mealInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}f=${mealInput}`).then(resp => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && mealInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n      case 'Ingrediente':\n        apiIngredienteRequest();\n        break;\n\n      case 'Nome':\n        apiNomeRequest();\n        break;\n\n      case PRIMEIRA_LETRA:\n        apiLetraRequest();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputsSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    id: \"search\",\n    \"data-testid\": \"search-input\",\n    onChange: ev => setMealsAndInputs({ ...mealsAndInputs,\n      mealInput: ev.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Ingrediente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"ingredient-search-radio\",\n    id: \"Ingrediente\",\n    name: \"search\",\n    onClick: () => setMealsAndInputs({ ...mealsAndInputs,\n      search: 'Ingrediente'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"name-search-radio\",\n    id: \"Nome\",\n    name: \"search\",\n    onClick: () => setMealsAndInputs({ ...mealsAndInputs,\n      search: 'Nome'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Primeira letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"first-letter-search-radio\",\n    id: \"Primeira letra\",\n    name: \"search\",\n    onClick: () => setMealsAndInputs({ ...mealsAndInputs,\n      search: PRIMEIRA_LETRA\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), \"Primeira letra\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/Utils/InputSearchMeals.jsx"],"names":["React","useContext","Redirect","RecipesContext","InputSearchMeals","mealsAndInputs","meals","search","mealInput","setMealsAndInputs","PRIMEIRA_LETRA","apiIngredienteUrl","apiMealsUrl","NOTFOUND","alert","response","global","Array","isArray","length","idMeal","handleClick","apiIngredienteRequest","fetch","then","resp","json","apiNomeRequest","apiLetraRequest","ev","target","value"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from 'react-router';\nimport RecipesContext from '../../Context/RecipesContext';\n\nexport default function InputSearchMeals() {\n  const { mealsAndInputs:\n    { meals, search, mealInput }, setMealsAndInputs,\n  mealsAndInputs } = useContext(RecipesContext);\n  const PRIMEIRA_LETRA = 'Primeira letra';\n  const apiIngredienteUrl = 'https://www.themealdb.com/api/json/v1/1/filter.php?';\n  const apiMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?';\n\n  const NOTFOUND = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n  const alert = (response) => {\n    if (response.meals) {\n      setMealsAndInputs(\n        { search: '', mealInput: '', meals: response.meals },\n      );\n    }\n    if (!response.meals) {\n      global.alert(NOTFOUND);\n    }\n  };\n\n  if (Array.isArray(meals) && meals.length === 1) {\n    return (<Redirect\n      to={\n        `/comidas/${meals[0].idMeal}`\n      }\n    />);\n  }\n\n  const handleClick = () => {\n    const apiIngredienteRequest = async () => {\n      const response = await fetch(`${apiIngredienteUrl}i=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiNomeRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}s=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    const apiLetraRequest = async () => {\n      const response = await fetch(`${apiMealsUrl}f=${mealInput}`)\n        .then((resp) => resp.json());\n      alert(response);\n    };\n\n    if (search === PRIMEIRA_LETRA && mealInput.length !== 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    switch (search) {\n    case 'Ingrediente':\n      apiIngredienteRequest();\n      break;\n    case 'Nome':\n      apiNomeRequest();\n      break;\n    case PRIMEIRA_LETRA:\n      apiLetraRequest();\n      break;\n    default:\n      break;\n    }\n  };\n\n  return (\n    <div className=\"inputsSearch\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        id=\"search\"\n        data-testid=\"search-input\"\n        onChange={ (ev) => setMealsAndInputs(\n          { ...mealsAndInputs, mealInput: ev.target.value },\n        ) }\n      />\n      <label htmlFor=\"Ingrediente\">\n        <input\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"Ingrediente\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs(\n            { ...mealsAndInputs, search: 'Ingrediente' },\n          ) }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"Nome\">\n        <input\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          id=\"Nome\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs({ ...mealsAndInputs, search: 'Nome' }) }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"Primeira letra\">\n        <input\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"Primeira letra\"\n          name=\"search\"\n          onClick={ () => setMealsAndInputs(\n            { ...mealsAndInputs, search: PRIMEIRA_LETRA },\n          ) }\n        />\n        Primeira letra\n      </label>\n      <button\n        onClick={ handleClick }\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
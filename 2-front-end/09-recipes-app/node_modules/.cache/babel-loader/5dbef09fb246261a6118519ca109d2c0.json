{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/ExploreMealsByArea.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport HeaderWithSearch from './HeaderWithSearch';\nexport default function ExploreMealsByArea() {\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  useEffect(() => {\n    async function fetchAreas() {\n      const areasAPI = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(areasAPI).then(resp => resp.json());\n      const areaList = response.meals;\n      setAreas(areaList);\n    }\n\n    fetchAreas();\n  }, []);\n  useEffect(() => {\n    async function fetchFilterByAreas() {\n      const filterByAreasAPI = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedArea}`;\n      const response = await fetch(filterByAreasAPI).then(resp => resp.json());\n      let mealList = response.meals ? [...response.meals] : [];\n      mealList = mealList.slice(0, TWELVE);\n      setMeals(mealList);\n    }\n\n    if (selectedArea === 'All') fetchFilterByAreas();\n    if (selectedArea) fetchFilterByAreas();\n  }, [selectedArea]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderWithSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"page-title\",\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Explorar Origem\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedArea,\n    onChange: event => setSelectedArea(event.target.value),\n    \"data-testid\": \"explore-by-area-dropdown\",\n    id: \"areas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, areas.map(area => /*#__PURE__*/React.createElement(\"option\", {\n    key: area.strArea,\n    value: area.strArea,\n    \"data-testid\": `${area.strArea}-option`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, area.strArea)), /*#__PURE__*/React.createElement(\"option\", {\n    onChange: event => setSelectedArea(event.target.value),\n    \"data-testid\": \"All-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"All\")), meals.map((meal, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/comidas/${meal.idMeal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: meal.strMealThumb,\n    alt: meal.strMealThumb,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, meal.strMeal)))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/ExploreMealsByArea.jsx"],"names":["React","useEffect","useState","Link","Footer","HeaderWithSearch","ExploreMealsByArea","areas","setAreas","selectedArea","setSelectedArea","meals","setMeals","TWELVE","fetchAreas","areasAPI","response","fetch","then","resp","json","areaList","fetchFilterByAreas","filterByAreasAPI","mealList","slice","alignSelf","event","target","value","map","area","strArea","meal","index","idMeal","strMealThumb","strMeal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport HeaderWithSearch from './HeaderWithSearch';\n\nexport default function ExploreMealsByArea() {\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n  const [meals, setMeals] = useState([]);\n  const TWELVE = 12;\n  useEffect(() => {\n    async function fetchAreas() {\n      const areasAPI = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const response = await fetch(areasAPI).then((resp) => resp.json());\n      const areaList = response.meals;\n      setAreas(areaList);\n    }\n    fetchAreas();\n  }, []);\n  useEffect(() => {\n    async function fetchFilterByAreas() {\n      const filterByAreasAPI = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedArea}`;\n      const response = await fetch(filterByAreasAPI).then((resp) => resp.json());\n      let mealList = response.meals ? [...response.meals] : [];\n      mealList = mealList.slice(0, TWELVE);\n      setMeals(mealList);\n    }\n    if (selectedArea === 'All') fetchFilterByAreas();\n    if (selectedArea) fetchFilterByAreas();\n  }, [selectedArea]);\n  return (\n    <>\n      <HeaderWithSearch />\n      <h3 data-testid=\"page-title\" style={ { alignSelf: 'center' } }>Explorar Origem</h3>\n      <select\n        value={ selectedArea }\n        onChange={ (event) => setSelectedArea(event.target.value) }\n        data-testid=\"explore-by-area-dropdown\"\n        id=\"areas\"\n      >\n        {areas.map((area) => (\n          <option\n            key={ area.strArea }\n            value={ area.strArea }\n            data-testid={ `${area.strArea}-option` }\n          >\n            {area.strArea}\n          </option>\n        ))}\n        <option\n          onChange={ (event) => setSelectedArea(event.target.value) }\n          data-testid=\"All-option\"\n        >\n          All\n        </option>\n      </select>\n      {meals.map((meal, index) => (\n        <Link key={ index } to={ `/comidas/${meal.idMeal}` }>\n          <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n            <img\n              src={ meal.strMealThumb }\n              alt={ meal.strMealThumb }\n              data-testid={ `${index}-card-img` }\n            />\n            <h4 data-testid={ `${index}-card-name` }>{meal.strMeal}</h4>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
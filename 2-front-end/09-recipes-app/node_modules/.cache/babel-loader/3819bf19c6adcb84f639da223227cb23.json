{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Context/RecipesProvider.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport RecipesContext from './RecipesContext';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [searchBar, setsearchBar] = useState(false);\n  const [api, setApi] = useState({\n    meals: [],\n    drinks: []\n  });\n  const [mealDetails, setMealDetails] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsAndInputs, setMealsAndInputs] = useState({\n    meals: [],\n    search: '',\n    mealInput: ''\n  });\n  const contextValue = {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    searchBar,\n    setsearchBar,\n    api,\n    setApi,\n    mealDetails,\n    setMealDetails,\n    meals,\n    setMeals,\n    mealsAndInputs,\n    setMealsAndInputs,\n    drinks,\n    setDrinks\n  };\n  return /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesProvider;","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Context/RecipesProvider.jsx"],"names":["PropTypes","React","useState","RecipesContext","RecipesProvider","children","email","setEmail","password","setPassword","searchBar","setsearchBar","api","setApi","meals","drinks","mealDetails","setMealDetails","setMeals","setDrinks","mealsAndInputs","setMealsAndInputs","search","mealInput","contextValue","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAD,CAA9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,KAAD,EAAQI,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASI,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAClD;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaQ,IAAAA,MAAM,EAAE,EAArB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GADkD,CAApD;AAIA,QAAMC,YAAY,GAAG;AAAElB,IAAAA,KAAF;AACnBC,IAAAA,QADmB;AAEnBC,IAAAA,QAFmB;AAGnBC,IAAAA,WAHmB;AAInBC,IAAAA,SAJmB;AAKnBC,IAAAA,YALmB;AAMnBC,IAAAA,GANmB;AAOnBC,IAAAA,MAPmB;AAQnBG,IAAAA,WARmB;AASnBC,IAAAA,cATmB;AAUnBH,IAAAA,KAVmB;AAWnBI,IAAAA,QAXmB;AAYnBE,IAAAA,cAZmB;AAanBC,IAAAA,iBAbmB;AAcnBN,IAAAA,MAdmB;AAenBI,IAAAA;AAfmB,GAArB;AAkBA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGK,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QADH,CADF;AAKD;;AAEDD,eAAe,CAACqB,SAAhB,GAA4B;AAC1BpB,EAAAA,QAAQ,EAAEL,SAAS,CAAC0B,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAevB,eAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport RecipesContext from './RecipesContext';\n\nfunction RecipesProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [searchBar, setsearchBar] = useState(false);\n  const [api, setApi] = useState({ meals: [], drinks: [] });\n  const [mealDetails, setMealDetails] = useState({});\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsAndInputs, setMealsAndInputs] = useState(\n    { meals: [], search: '', mealInput: '' },\n  );\n\n  const contextValue = { email,\n    setEmail,\n    password,\n    setPassword,\n    searchBar,\n    setsearchBar,\n    api,\n    setApi,\n    mealDetails,\n    setMealDetails,\n    meals,\n    setMeals,\n    mealsAndInputs,\n    setMealsAndInputs,\n    drinks,\n    setDrinks,\n  };\n\n  return (\n    <RecipesContext.Provider value={ contextValue }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}
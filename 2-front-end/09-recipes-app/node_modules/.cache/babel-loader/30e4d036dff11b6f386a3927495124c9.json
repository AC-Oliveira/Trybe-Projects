{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/DrinksPage.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport MainFoodPage from './HeaderWithSearch';\nexport default function DrinksPage() {\n  const {\n    drinks,\n    setDrinks\n  } = useContext(RecipesContext);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({\n    category: '',\n    toogle: false\n  });\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchDrinkAPI() {\n    const APIDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIDrinks).then(resp => resp.json());\n    let drinksList = response.drinks;\n    if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n    setDrinks(drinksList);\n  }\n\n  async function fetchDrinkCatergoryAPI() {\n    const APICategory = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then(resp => resp.json());\n    const categoriesDrinksList = [...response.drinks];\n    const drinkArrayCategories = categoriesDrinksList.reduce((acc, current) => {\n      const {\n        strCategory\n      } = current;\n      return { ...acc,\n        [strCategory]: strCategory\n      };\n    }, {});\n    setDrinkCategories(Object.keys(drinkArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchDrinkAPI();\n    fetchDrinkCatergoryAPI();\n  }, []);\n\n  const handleDrinkCatecory = async category => {\n    const buttonCategory = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n    const response = await fetch(buttonCategory).then(resp => resp.json());\n    const categoryDrinks = [...response.drinks.slice(0, TWELVE)];\n    setDrinks(categoryDrinks);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainFoodPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), drinkCategories.map(category => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"categoryButtons\",\n    type: \"button\",\n    key: category,\n    \"data-testid\": `${category}-category-filter`,\n    onClick: () => {\n      if (categoryToogle.toogle) {\n        if (category === categoryToogle.category) {\n          fetchDrinkAPI();\n          setCategoryToogle({\n            category,\n            toogle: !categoryToogle.toogle\n          });\n        }\n\n        if (category !== categoryToogle.category) {\n          handleDrinkCatecory(category);\n          setCategoryToogle({\n            category,\n            toogle: !categoryToogle.toogle\n          });\n        }\n      }\n\n      if (!categoryToogle.toogle) {\n        handleDrinkCatecory(category);\n        setCategoryToogle({\n          category,\n          toogle: !categoryToogle.toogle\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, category)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: fetchDrinkAPI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"All\"), drinks.map((drink, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/bebidas/${drink.idDrink}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${drink.strDrinkThumb}`,\n    alt: drink.strDrink,\n    \"data-testid\": `${index}-card-img`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 56\n    }\n  }, drink.strDrink))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-recipes-app/src/Pages/DrinksPage.jsx"],"names":["React","useState","useEffect","useContext","Link","Footer","RecipesContext","MainFoodPage","DrinksPage","drinks","setDrinks","drinkCategories","setDrinkCategories","categoryToogle","setCategoryToogle","category","toogle","TWELVE","FIVE","fetchDrinkAPI","APIDrinks","response","fetch","then","resp","json","drinksList","length","slice","fetchDrinkCatergoryAPI","APICategory","categoriesDrinksList","drinkArrayCategories","reduce","acc","current","strCategory","Object","keys","handleDrinkCatecory","buttonCategory","categoryDrinks","map","drink","index","idDrink","strDrinkThumb","strDrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport RecipesContext from '../Context/RecipesContext';\nimport MainFoodPage from './HeaderWithSearch';\n\nexport default function DrinksPage() {\n  const { drinks, setDrinks } = useContext(RecipesContext);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [categoryToogle, setCategoryToogle] = useState({ category: '', toogle: false });\n  const TWELVE = 12;\n  const FIVE = 5;\n\n  async function fetchDrinkAPI() {\n    const APIDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const response = await fetch(APIDrinks).then((resp) => resp.json());\n    let drinksList = response.drinks;\n    if (drinksList.length > TWELVE) drinksList = drinksList.slice(0, TWELVE);\n    setDrinks(drinksList);\n  }\n\n  async function fetchDrinkCatergoryAPI() {\n    const APICategory = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const response = await fetch(APICategory).then((resp) => resp.json());\n    const categoriesDrinksList = [...response.drinks];\n    const drinkArrayCategories = categoriesDrinksList.reduce((acc, current) => {\n      const { strCategory } = current;\n      return { ...acc, [strCategory]: strCategory };\n    }, {});\n    setDrinkCategories(Object.keys(drinkArrayCategories).slice(0, FIVE));\n  }\n\n  useEffect(() => {\n    fetchDrinkAPI();\n    fetchDrinkCatergoryAPI();\n  }, []);\n\n  const handleDrinkCatecory = async (category) => {\n    const buttonCategory = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n    const response = await fetch(buttonCategory).then((resp) => resp.json());\n    const categoryDrinks = [...response.drinks.slice(0, TWELVE)];\n    setDrinks(categoryDrinks);\n  };\n\n  return (\n    <>\n      <MainFoodPage />\n      {\n        drinkCategories\n          .map((category) => (\n            <button\n              className=\"categoryButtons\"\n              type=\"button\"\n              key={ category }\n              data-testid={ `${category}-category-filter` }\n              onClick={ () => {\n                if (categoryToogle.toogle) {\n                  if (category === categoryToogle.category) {\n                    fetchDrinkAPI();\n                    setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                  }\n                  if (category !== categoryToogle.category) {\n                    handleDrinkCatecory(category);\n                    setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                  }\n                }\n                if (!categoryToogle.toogle) {\n                  handleDrinkCatecory(category);\n                  setCategoryToogle({ category, toogle: !categoryToogle.toogle });\n                }\n              } }\n            >\n              {category}\n            </button>))\n      }\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ fetchDrinkAPI }\n      >\n        All\n      </button>\n      {\n        drinks.map((drink, index) => (\n          <Link key={ index } to={ `/bebidas/${drink.idDrink}` }>\n            <div className=\"card\" data-testid={ `${index}-recipe-card` }>\n              <img\n                src={ `${drink.strDrinkThumb}` }\n                alt={ drink.strDrink }\n                data-testid={ `${index}-card-img` }\n              />\n              <h4 data-testid={ `${index}-card-name` }><b>{drink.strDrink}</b></h4>\n            </div>\n          </Link>\n        ))\n      }\n      <Footer />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
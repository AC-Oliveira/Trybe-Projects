{"ast":null,"code":"export function compareCases(str, filterValue, planetValue) {\n  switch (str) {\n    case 'menor que':\n      return filterValue > planetValue;\n\n    case 'igual a':\n      return filterValue === planetValue;\n\n    default:\n      return filterValue < planetValue;\n  }\n}\n\nfunction sortNamesASC(order, planetsList) {\n  const MENUSUM = -1;\n\n  if (order.column === 'name' && order.sort === 'ASC') {\n    planetsList.sort((a, b) => {\n      if (a.name > b.name) return 1;\n      if (a.name < b.name) return MENUSUM;\n      return 0;\n    });\n  }\n\n  return planetsList;\n}\n\nfunction sortNamesDESC(order, planetsList) {\n  const MENUSUM = -1;\n\n  if (order.column === 'name' && order.sort === 'DESC') {\n    planetsList.sort((a, b) => {\n      if (a.name > b.name) return MENUSUM;\n      if (a.name < b.name) return 1;\n      return 0;\n    });\n  }\n\n  return planetsList;\n}\n\nexport function sortPlanetsColumns(order, planetsList) {\n  if (!planetsList.length) return [];\n  if (order.column === 'name' && order.sort === 'ASC') return sortNamesASC(order, planetsList);\n  if (order.column === 'name' && order.sort === 'DESC') return sortNamesDESC(order, planetsList);\n\n  if (order.sort === 'ASC') {\n    return planetsList.sort((a, b) => a[order.column] - b[order.column]);\n  }\n\n  if (order.sort === 'DESC') {\n    return planetsList.sort((a, b) => b[order.column] - a[order.column]);\n  }\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-starwars-planets-search/src/Pages/Utils/CompareCases.js"],"names":["compareCases","str","filterValue","planetValue","sortNamesASC","order","planetsList","MENUSUM","column","sort","a","b","name","sortNamesDESC","sortPlanetsColumns","length"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqD;AAC1D,UAAQF,GAAR;AACA,SAAK,WAAL;AACE,aAAOC,WAAW,GAAGC,WAArB;;AAEF,SAAK,SAAL;AACE,aAAOD,WAAW,KAAKC,WAAvB;;AAEF;AACE,aAAOD,WAAW,GAAGC,WAArB;AARF;AAUD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,WAA7B,EAA0C;AACxC,QAAMC,OAAO,GAAG,CAAC,CAAjB;;AACA,MAAIF,KAAK,CAACG,MAAN,KAAiB,MAAjB,IAA2BH,KAAK,CAACI,IAAN,KAAe,KAA9C,EAAqD;AACnDH,IAAAA,WAAW,CAACG,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,UAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAOL,OAAP;AACrB,aAAO,CAAP;AACD,KAJD;AAKD;;AACD,SAAOD,WAAP;AACD;;AACD,SAASO,aAAT,CAAuBR,KAAvB,EAA8BC,WAA9B,EAA2C;AACzC,QAAMC,OAAO,GAAG,CAAC,CAAjB;;AACA,MAAIF,KAAK,CAACG,MAAN,KAAiB,MAAjB,IAA2BH,KAAK,CAACI,IAAN,KAAe,MAA9C,EAAsD;AACpDH,IAAAA,WAAW,CAACG,IAAZ,CACE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACR,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAOL,OAAP;AACrB,UAAIG,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,aAAO,CAAP;AACD,KALH;AAOD;;AACD,SAAON,WAAP;AACD;;AAED,OAAO,SAASQ,kBAAT,CAA4BT,KAA5B,EAAmCC,WAAnC,EAAgD;AACrD,MAAI,CAACA,WAAW,CAACS,MAAjB,EAAyB,OAAO,EAAP;AACzB,MAAIV,KAAK,CACNG,MADC,KACU,MADV,IACoBH,KAAK,CAACI,IAAN,KAAe,KADvC,EAC8C,OAAOL,YAAY,CAACC,KAAD,EAAQC,WAAR,CAAnB;AAC9C,MAAID,KAAK,CACNG,MADC,KACU,MADV,IACoBH,KAAK,CAACI,IAAN,KAAe,MADvC,EAC+C,OAAOI,aAAa,CAACR,KAAD,EAAQC,WAAR,CAApB;;AAC/C,MAAID,KAAK,CAACI,IAAN,KAAe,KAAnB,EAA0B;AACxB,WAAOH,WAAW,CACfG,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,KAAK,CAACG,MAAP,CAAD,GAAkBG,CAAC,CAACN,KAAK,CAACG,MAAP,CAD9B,CAAP;AAED;;AACD,MAAIH,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B;AACzB,WAAOH,WAAW,CACfG,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACN,KAAK,CAACG,MAAP,CAAD,GAAkBE,CAAC,CAACL,KAAK,CAACG,MAAP,CAD9B,CAAP;AAED;AACF","sourcesContent":["export function compareCases(str, filterValue, planetValue) {\n  switch (str) {\n  case 'menor que':\n    return filterValue > planetValue;\n\n  case 'igual a':\n    return filterValue === planetValue;\n\n  default:\n    return filterValue < planetValue;\n  }\n}\n\nfunction sortNamesASC(order, planetsList) {\n  const MENUSUM = -1;\n  if (order.column === 'name' && order.sort === 'ASC') {\n    planetsList.sort((a, b) => {\n      if (a.name > b.name) return 1;\n      if (a.name < b.name) return MENUSUM;\n      return 0;\n    });\n  }\n  return planetsList;\n}\nfunction sortNamesDESC(order, planetsList) {\n  const MENUSUM = -1;\n  if (order.column === 'name' && order.sort === 'DESC') {\n    planetsList.sort(\n      (a, b) => {\n        if (a.name > b.name) return MENUSUM;\n        if (a.name < b.name) return 1;\n        return 0;\n      },\n    );\n  }\n  return planetsList;\n}\n\nexport function sortPlanetsColumns(order, planetsList) {\n  if (!planetsList.length) return [];\n  if (order\n    .column === 'name' && order.sort === 'ASC') return sortNamesASC(order, planetsList);\n  if (order\n    .column === 'name' && order.sort === 'DESC') return sortNamesDESC(order, planetsList);\n  if (order.sort === 'ASC') {\n    return planetsList\n      .sort((a, b) => a[order.column] - b[order.column]);\n  }\n  if (order.sort === 'DESC') {\n    return planetsList\n      .sort((a, b) => b[order.column] - a[order.column]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
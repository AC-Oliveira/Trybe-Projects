{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-starwars-planets-search/src/Context/PlanetsProvider.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\nconst apiURL = 'https://swapi-trybe.herokuapp.com/api/planets/';\nconst defaultState = {\n  filter: {\n    filterByName: '',\n    filterByNumericValues: []\n  },\n  planetsList: [],\n  order: {\n    column: 'name',\n    sort: 'ASC'\n  }\n};\n\nfunction PlanetsProvider({\n  children\n}) {\n  const [globalState, setGlobalState] = useState(defaultState);\n  useEffect(() => {\n    async function fetchData() {\n      const apiRequest = await fetch(apiURL).then(res => res.json());\n      const data = apiRequest.results;\n      setGlobalState(() => ({ ...globalState,\n        planetsList: data,\n        setGlobalState\n      }));\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: globalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default PlanetsProvider;","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-starwars-planets-search/src/Context/PlanetsProvider.jsx"],"names":["PropTypes","React","useEffect","useState","PlanetsContext","apiURL","defaultState","filter","filterByName","filterByNumericValues","planetsList","order","column","sort","PlanetsProvider","children","globalState","setGlobalState","fetchData","apiRequest","fetch","then","res","json","data","results","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,MAAM,GAAG,gDAAf;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,qBAAqB,EAAE;AAA3C,GADW;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,IAAI,EAAE;AAFD;AAHY,CAArB;;AAQA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACG,YAAD,CAA9C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,SAAf,GAA2B;AACzB,YAAMC,UAAU,GAAG,MAAMC,KAAK,CAACf,MAAD,CAAL,CAAcgB,IAAd,CAAoBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAA5B,CAAzB;AACA,YAAMC,IAAI,GAAGL,UAAU,CAACM,OAAxB;AACAR,MAAAA,cAAc,CAAC,OAAO,EAAE,GAAGD,WAAL;AACpBN,QAAAA,WAAW,EAAEc,IADO;AAEpBP,QAAAA;AAFoB,OAAP,CAAD,CAAd;AAID;;AACDC,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGF,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD;;AAEDD,eAAe,CAACY,SAAhB,GAA4B;AAC1BX,EAAAA,QAAQ,EAAEf,SAAS,CAAC2B,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAed,eAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nconst apiURL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst defaultState = {\n  filter: { filterByName: '', filterByNumericValues: [] },\n  planetsList: [],\n  order: {\n    column: 'name',\n    sort: 'ASC',\n  } };\n\nfunction PlanetsProvider({ children }) {\n  const [globalState, setGlobalState] = useState(defaultState);\n\n  useEffect(() => {\n    async function fetchData() {\n      const apiRequest = await fetch(apiURL).then((res) => res.json());\n      const data = apiRequest.results;\n      setGlobalState(() => ({ ...globalState,\n        planetsList: data,\n        setGlobalState,\n      }));\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <PlanetsContext.Provider value={ globalState }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n\nexport default PlanetsProvider;\n"]},"metadata":{},"sourceType":"module"}
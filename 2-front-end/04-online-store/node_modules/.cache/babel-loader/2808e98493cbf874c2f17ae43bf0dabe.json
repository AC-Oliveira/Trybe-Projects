{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-frontend-online-store/src/components/SearchBar.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport RenderCard from './RenderCard';\nimport Category from './Category';\n\nconst api = require('../services/api');\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeQuantityInCart = () => {\n      const {\n        amountProductsInCart\n      } = this.state;\n      const newQuantity = amountProductsInCart + 1;\n      this.setState({\n        amountProductsInCart: newQuantity\n      });\n      localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n    };\n\n    this.handleClick = () => {\n      const {\n        searchText\n      } = this.state;\n      return api.getProductsFromCategoryAndQuery('&CATEGORY_ID', searchText).then(products => {\n        this.setState({\n          products: products.results\n        });\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    const _amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n\n    this.state = {\n      searchText: '',\n      products: [],\n      amountProductsInCart: _amountProductsInCart\n    };\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\n  } // async componentDidMount() {\n  //   const products = await api.getProductsFromCategoryAndQuery();\n  //   updateState(products);\n  // }\n  // updateState = (products) => this.setState({ products: products.results });\n\n\n  handleChangeCategory(catego) {\n    return api.getProductsFromCategoryAndQuery(catego).then(products => {\n      this.setState({\n        products: products.results\n      });\n    });\n  }\n\n  render() {\n    const {\n      searchText,\n      products,\n      amountProductsInCart\n    } = this.state;\n\n    if (!localStorage.getItem('amountProductsInCart')) {\n      localStorage.setItem('amountProductsInCart', '0');\n    }\n\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"searchText\",\n      type: \"text\",\n      id: \"input-search-bar\",\n      \"data-testid\": \"query-input\",\n      value: searchText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Pesquisar\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"shoppingcart\",\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Carrinho\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, amountProductsInCart), /*#__PURE__*/React.createElement(Category, {\n      onChange: this.handleChangeCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(RenderCard, {\n      products: products,\n      handleChangeQuantityInCart: this.handleChangeQuantityInCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-frontend-online-store/src/components/SearchBar.jsx"],"names":["React","Component","Link","RenderCard","Category","api","require","SearchBar","constructor","props","handleChangeQuantityInCart","amountProductsInCart","state","newQuantity","setState","localStorage","setItem","JSON","stringify","handleClick","searchText","getProductsFromCategoryAndQuery","then","products","results","handleChange","target","name","value","parse","getItem","handleChangeCategory","bind","catego","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport RenderCard from './RenderCard';\nimport Category from './Category';\n\nconst api = require('../services/api');\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    const amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n    this.state = {\n      searchText: '',\n      products: [],\n      amountProductsInCart,\n    };\n\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\n  }\n\n  // async componentDidMount() {\n  //   const products = await api.getProductsFromCategoryAndQuery();\n  //   updateState(products);\n  // }\n\n  // updateState = (products) => this.setState({ products: products.results });\n\n  handleChangeQuantityInCart = () => {\n    const { amountProductsInCart } = this.state;\n    const newQuantity = amountProductsInCart + 1;\n    this.setState({ amountProductsInCart: newQuantity });\n    localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n  }\n\n  handleClick = () => {\n    const { searchText } = this.state;\n    return api.getProductsFromCategoryAndQuery('&CATEGORY_ID', searchText)\n      .then((products) => {\n        this.setState({ products: products.results });\n      });\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  handleChangeCategory(catego) {\n    return api.getProductsFromCategoryAndQuery(catego)\n      .then((products) => {\n        this.setState({ products: products.results });\n      });\n  }\n\n  render() {\n    const { searchText, products, amountProductsInCart } = this.state;\n    if (!localStorage.getItem('amountProductsInCart')) {\n      localStorage.setItem('amountProductsInCart', '0');\n    }\n    return (\n      <main>\n        <label htmlFor=\"input-search-bar\">\n          <h3 data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </h3>\n          <input\n            name=\"searchText\"\n            type=\"text\"\n            id=\"input-search-bar\"\n            data-testid=\"query-input\"\n            value={ searchText }\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.handleClick }\n          >\n            Pesquisar\n          </button>\n        </label>\n        <Link to=\"shoppingcart\" data-testid=\"shopping-cart-button\">\n          Carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{amountProductsInCart}</span>\n        <Category onChange={ this.handleChangeCategory } />\n        <RenderCard\n          products={ products }\n          handleChangeQuantityInCart={ this.handleChangeQuantityInCart }\n        />\n      </main>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-frontend-online-store/src/components/ProductDetails.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport FormAssessment from './FormAssessment';\nimport AllAssessments from './AllAssessments';\nexport default class ProductDetails extends Component {\n  constructor() {\n    super();\n    const amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n    this.state = {\n      product: '',\n      AllComments: [],\n      amountProductsInCart\n    };\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCartClick = this.handleCartClick.bind(this);\n  }\n\n  async componentDidMount() {\n    getProductsFromCategoryAndQuery();\n    this.requestProductApi();\n  }\n\n  handleState(detail) {\n    this.setState({\n      product: detail\n    });\n  }\n\n  handleCartClick({\n    target\n  }) {\n    const shoppingCartList = JSON.parse(localStorage.getItem('productList'));\n    shoppingCartList.push(target.name);\n    localStorage.setItem('productList', JSON.stringify(shoppingCartList));\n    const {\n      amountProductsInCart\n    } = this.state;\n    const newQuantity = amountProductsInCart + 1;\n    this.setState({\n      amountProductsInCart: newQuantity\n    });\n    localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n  }\n\n  handleClick(state) {\n    this.setState(prevValue => ({\n      AllComments: [...prevValue.AllComments, state]\n    }));\n  }\n\n  async requestProductApi() {\n    const {\n      match\n    } = this.props;\n    const url = `https://api.mercadolibre.com/items/${match.params.id}`;\n    const requestProduct = await fetch(url);\n    const resultProduct = await requestProduct.json();\n    this.handleState(resultProduct);\n  }\n\n  render() {\n    const {\n      product,\n      amountProductsInCart\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    if (!localStorage.getItem('productList')) localStorage.setItem('productList', '[]');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"product-detail-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, product.title), /*#__PURE__*/React.createElement(\"img\", {\n      src: product.thumbnail,\n      alt: product.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"R$\", product.price), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Dispon\\xEDveis:\", product.available_quantity), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, product.warranty !== null ? product.warranty : 'Sem Garantia')), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-detail-add-to-cart\",\n      onClick: this.handleCartClick,\n      name: JSON.stringify(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Adcionar ao Carrinho\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/shoppingcart\",\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Carrinho\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, amountProductsInCart), /*#__PURE__*/React.createElement(FormAssessment, {\n      id: match,\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AllAssessments, {\n      id: match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nProductDetails.defaultProps = {\n  match: {}\n};\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  })\n};","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-frontend-online-store/src/components/ProductDetails.jsx"],"names":["React","Component","PropTypes","Link","getProductsFromCategoryAndQuery","FormAssessment","AllAssessments","ProductDetails","constructor","amountProductsInCart","JSON","parse","localStorage","getItem","state","product","AllComments","handleState","bind","handleClick","handleCartClick","componentDidMount","requestProductApi","detail","setState","target","shoppingCartList","push","name","setItem","stringify","newQuantity","prevValue","match","props","url","params","id","requestProduct","fetch","resultProduct","json","render","title","thumbnail","price","available_quantity","warranty","defaultProps","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport FormAssessment from './FormAssessment';\nimport AllAssessments from './AllAssessments';\n\nexport default class ProductDetails extends Component {\n  constructor() {\n    super();\n\n    const amountProductsInCart = JSON.parse(localStorage.getItem('amountProductsInCart'));\n    this.state = {\n      product: '',\n      AllComments: [],\n      amountProductsInCart,\n    };\n\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCartClick = this.handleCartClick.bind(this);\n  }\n\n  async componentDidMount() {\n    getProductsFromCategoryAndQuery();\n    this.requestProductApi();\n  }\n\n  handleState(detail) {\n    this.setState({ product: detail });\n  }\n\n  handleCartClick({ target }) {\n    const shoppingCartList = JSON.parse(localStorage.getItem('productList'));\n    shoppingCartList.push(target.name);\n    localStorage.setItem('productList', JSON.stringify(shoppingCartList));\n    const { amountProductsInCart } = this.state;\n    const newQuantity = amountProductsInCart + 1;\n    this.setState({ amountProductsInCart: newQuantity });\n    localStorage.setItem('amountProductsInCart', JSON.stringify(newQuantity));\n  }\n\n  handleClick(state) {\n    this.setState((prevValue) => ({\n      AllComments: ([...prevValue.AllComments, state]),\n    }));\n  }\n\n  async requestProductApi() {\n    const { match } = this.props;\n    const url = `https://api.mercadolibre.com/items/${match.params.id}`;\n    const requestProduct = await fetch(url);\n    const resultProduct = await requestProduct.json();\n    this.handleState(resultProduct);\n  }\n\n  render() {\n    const { product, amountProductsInCart } = this.state;\n    const { match } = this.props;\n    if (!localStorage.getItem('productList')) localStorage.setItem('productList', '[]');\n    return (\n      <div>\n        <h3 data-testid=\"product-detail-name\">{ product.title }</h3>\n        <img src={ product.thumbnail } alt={ product.title } />\n        <ul>\n          <li>\n            R$\n            { product.price }\n          </li>\n          <li>\n            Disponíveis:\n            { product.available_quantity }\n          </li>\n          <li>\n            { product.warranty !== null ? product.warranty : 'Sem Garantia'}\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.handleCartClick }\n          name={ JSON.stringify(product) }\n        >\n          Adcionar ao Carrinho\n        </button>\n        <Link to=\"/shoppingcart\" data-testid=\"shopping-cart-button\">\n          Carrinho\n        </Link>\n        <span data-testid=\"shopping-cart-size\">{amountProductsInCart}</span>\n        <FormAssessment id={ match } handleClick={ this.handleClick } />\n        <AllAssessments id={ match } />\n      </div>\n    );\n  }\n}\n\nProductDetails.defaultProps = {\n  match: {},\n};\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}
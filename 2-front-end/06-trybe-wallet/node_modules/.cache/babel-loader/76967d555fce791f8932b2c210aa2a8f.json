{"ast":null,"code":"// Coloque aqui suas actions\nexport const LOGIN = 'LOGIN_ACTION';\nexport const WALLET_CURRENCY = 'WALLET_CURRENCY';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const ADD_EXPENSE_ATT_CURR = 'ADD_EXPENSE_ATT_CURR';\nexport const UPDATE_EXPENSE = 'UPDATE_EXPENSE';\nconst economyAPI = 'https://economia.awesomeapi.com.br/json/all';\n\nconst setLogin = payload => ({\n  type: LOGIN,\n  payload\n});\n\nexport const setCurrency = payload => ({\n  type: WALLET_CURRENCY,\n  payload\n});\nexport const listExpenses = payload => ({\n  type: ADD_EXPENSE_ATT_CURR,\n  payload\n});\nexport const deleteExpense = payload => ({\n  type: DELETE_EXPENSE,\n  payload\n});\nexport const editExpense = payload => ({\n  type: EDIT_EXPENSE,\n  payload\n});\nexport const getSecondThunk = expense => async dispatch => {\n  const response = await fetch(economyAPI);\n  const exchangeRates = await response.json();\n  const obj = { ...expense,\n    exchangeRates\n  };\n  dispatch(listExpenses(obj));\n};\nexport const updateExpense = payload => ({\n  type: UPDATE_EXPENSE,\n  payload\n});\nexport const getThirdThunk = expense => async dispatch => {\n  const response = await fetch(economyAPI);\n  const exchangeRates = await response.json();\n  const obj = { ...expense,\n    exchangeRates\n  };\n  dispatch(updateExpense(obj));\n};\nexport const getCurrencyThunk = () => async dispatch => {\n  const response = await fetch(economyAPI);\n  const currenciesJson = await response.json();\n  const payload = Object.keys(currenciesJson);\n  payload.splice(1, 1);\n  dispatch(setCurrency(payload));\n};\nexport default setLogin;","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-trybewallet/src/actions/index.js"],"names":["LOGIN","WALLET_CURRENCY","DELETE_EXPENSE","EDIT_EXPENSE","ADD_EXPENSE_ATT_CURR","UPDATE_EXPENSE","economyAPI","setLogin","payload","type","setCurrency","listExpenses","deleteExpense","editExpense","getSecondThunk","expense","dispatch","response","fetch","exchangeRates","json","obj","updateExpense","getThirdThunk","getCurrencyThunk","currenciesJson","Object","keys","splice"],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAG,cAAd;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,MAAMC,UAAU,GAAG,6CAAnB;;AAEA,MAAMC,QAAQ,GAAIC,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAET,KAAR;AAAeQ,EAAAA;AAAf,CAAd,CAAjB;;AAEA,OAAO,MAAME,WAAW,GAAIF,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAER,eAAR;AAAyBO,EAAAA;AAAzB,CAAd,CAApB;AAEP,OAAO,MAAMG,YAAY,GAAIH,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAEL,oBAAR;AAA8BI,EAAAA;AAA9B,CAAd,CAArB;AAEP,OAAO,MAAMI,aAAa,GAAIJ,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAEP,cAAR;AAAwBM,EAAAA;AAAxB,CAAd,CAAtB;AAEP,OAAO,MAAMK,WAAW,GAAIL,OAAD,KAAc;AAAEC,EAAAA,IAAI,EAAEN,YAAR;AAAsBK,EAAAA;AAAtB,CAAd,CAApB;AAEP,OAAO,MAAMM,cAAc,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC7D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,UAAD,CAA5B;AACA,QAAMa,aAAa,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AACA,QAAMC,GAAG,GAAG,EAAE,GAAGN,OAAL;AAAcI,IAAAA;AAAd,GAAZ;AACAH,EAAAA,QAAQ,CAACL,YAAY,CAACU,GAAD,CAAb,CAAR;AACD,CALM;AAOP,OAAO,MAAMC,aAAa,GAAId,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAEJ,cADmC;AAEzCG,EAAAA;AAFyC,CAAd,CAAtB;AAKP,OAAO,MAAMe,aAAa,GAAIR,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,UAAD,CAA5B;AACA,QAAMa,aAAa,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AACA,QAAMC,GAAG,GAAG,EAAE,GAAGN,OAAL;AAAcI,IAAAA;AAAd,GAAZ;AACAH,EAAAA,QAAQ,CAACM,aAAa,CAACD,GAAD,CAAd,CAAR;AACD,CALM;AAMP,OAAO,MAAMG,gBAAgB,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACxD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,UAAD,CAA5B;AACA,QAAMmB,cAAc,GAAG,MAAMR,QAAQ,CAACG,IAAT,EAA7B;AACA,QAAMZ,OAAO,GAAGkB,MAAM,CAACC,IAAP,CAAYF,cAAZ,CAAhB;AACAjB,EAAAA,OAAO,CAACoB,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACAZ,EAAAA,QAAQ,CAACN,WAAW,CAACF,OAAD,CAAZ,CAAR;AACD,CANM;AAQP,eAAeD,QAAf","sourcesContent":["// Coloque aqui suas actions\nexport const LOGIN = 'LOGIN_ACTION';\nexport const WALLET_CURRENCY = 'WALLET_CURRENCY';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const ADD_EXPENSE_ATT_CURR = 'ADD_EXPENSE_ATT_CURR';\nexport const UPDATE_EXPENSE = 'UPDATE_EXPENSE';\n\nconst economyAPI = 'https://economia.awesomeapi.com.br/json/all';\n\nconst setLogin = (payload) => ({ type: LOGIN, payload });\n\nexport const setCurrency = (payload) => ({ type: WALLET_CURRENCY, payload });\n\nexport const listExpenses = (payload) => ({ type: ADD_EXPENSE_ATT_CURR, payload });\n\nexport const deleteExpense = (payload) => ({ type: DELETE_EXPENSE, payload });\n\nexport const editExpense = (payload) => ({ type: EDIT_EXPENSE, payload });\n\nexport const getSecondThunk = (expense) => async (dispatch) => {\n  const response = await fetch(economyAPI);\n  const exchangeRates = await response.json();\n  const obj = { ...expense, exchangeRates };\n  dispatch(listExpenses(obj));\n};\n\nexport const updateExpense = (payload) => ({\n  type: UPDATE_EXPENSE,\n  payload,\n});\n\nexport const getThirdThunk = (expense) => async (dispatch) => {\n  const response = await fetch(economyAPI);\n  const exchangeRates = await response.json();\n  const obj = { ...expense, exchangeRates };\n  dispatch(updateExpense(obj));\n};\nexport const getCurrencyThunk = () => async (dispatch) => {\n  const response = await fetch(economyAPI);\n  const currenciesJson = await response.json();\n  const payload = Object.keys(currenciesJson);\n  payload.splice(1, 1);\n  dispatch(setCurrency(payload));\n};\n\nexport default setLogin;\n"]},"metadata":{},"sourceType":"module"}
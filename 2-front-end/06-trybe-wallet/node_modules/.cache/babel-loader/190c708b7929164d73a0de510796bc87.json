{"ast":null,"code":"var _jsxFileName = \"/home/allan/Projects/Trybe-Projects/sd-013-b-project-trybewallet/src/pages/Utils/Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getSecondThunk, updateExpense } from '../../actions/index';\nimport ItemList from './ItemList';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createExpen = this.createExpen.bind(this);\n    this.formToFill = this.formToFill.bind(this);\n    this.tagLabel = this.tagLabel.bind(this);\n    this.labellabel = this.labellabel.bind(this);\n    this.expenseEdit = this.expenseEdit.bind(this);\n  }\n\n  FormInputText(value, text, name, handle) {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, text, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      id: name,\n      onChange: handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  tagLabel(tag) {\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Saúde', 'Transporte'];\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"tag\",\n      id: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, tags.map(type => {\n      if (type === tag) return /*#__PURE__*/React.createElement(\"option\", {\n        value: type,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }\n      }, type);\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: type,\n        value: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, type);\n    })));\n  }\n\n  labellabel(method) {\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de Pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"method\",\n      id: \"method\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, methods.map(met => {\n      if (met === method) return /*#__PURE__*/React.createElement(\"option\", {\n        value: met,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }\n      }, met);\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: met,\n        value: met,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }\n      }, met);\n    })));\n  }\n\n  handleChange({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  createExpen() {\n    const {\n      id\n    } = this.state;\n    this.setState({\n      id: id + 1\n    });\n    const {\n      attCurrencyThunk\n    } = this.props;\n    attCurrencyThunk({ ...this.state\n    });\n  }\n\n  formToFill() {\n    const {\n      currencies,\n      expensesList: {\n        editor\n      }\n    } = this.props;\n    const {\n      value,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, this.FormInputText(value, 'Valor', 'value', this.handleChange), this.FormInputText(description, 'Descrição', 'description', this.handleChange), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"currency\",\n      id: \"currency\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, currencies.map(currencie => /*#__PURE__*/React.createElement(\"option\", {\n      value: currencie,\n      key: currencie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, currencie)))), this.tagLabel(), this.labellabel(), !editor ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.createExpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Adicionar despesas\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.expenseEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Editar despesa\"));\n  }\n\n  expenseEdit() {\n    const {\n      editExpense,\n      id,\n      expenses\n    } = this.props;\n    const {\n      exchangeRates\n    } = expenses[id];\n    editExpense({ ...this.state,\n      id,\n      exchangeRates\n    });\n  }\n\n  render() {\n    const {\n      expensesList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.formToFill(), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\")), expensesList.expenses.length === 0 ? null : expensesList.expenses.map((item, index) => /*#__PURE__*/React.createElement(ItemList, {\n      item: item,\n      key: index,\n      id: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nForm.propTypes = {\n  attCurrencyThunk: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({\n    map: PropTypes.func.isRequired\n  }).isRequired,\n  // exchangeRates: PropTypes.string.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    map: PropTypes.func.isRequired\n  }).isRequired,\n  expensesList: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  expensesList: state.wallet,\n  id: state.wallet.idToEdit,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  attCurrencyThunk: value => dispatch(getSecondThunk(value)),\n  editExpense: editedExpense => dispatch(updateExpense(editedExpense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/allan/Projects/Trybe-Projects/sd-013-b-project-trybewallet/src/pages/Utils/Form.js"],"names":["React","Component","PropTypes","connect","getSecondThunk","updateExpense","ItemList","Form","constructor","props","state","id","value","description","currency","method","tag","handleChange","bind","createExpen","formToFill","tagLabel","labellabel","expenseEdit","FormInputText","text","name","handle","tags","map","type","methods","met","target","setState","attCurrencyThunk","currencies","expensesList","editor","currencie","editExpense","expenses","exchangeRates","render","length","item","index","propTypes","func","isRequired","shape","number","mapStateToProps","wallet","idToEdit","mapDispatchToProps","dispatch","editedExpense"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getSecondThunk, updateExpense } from '../../actions/index';\nimport ItemList from './ItemList';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createExpen = this.createExpen.bind(this);\n    this.formToFill = this.formToFill.bind(this);\n    this.tagLabel = this.tagLabel.bind(this);\n    this.labellabel = this.labellabel.bind(this);\n    this.expenseEdit = this.expenseEdit.bind(this);\n  }\n\n  FormInputText(value, text, name, handle) {\n    return (\n      <label htmlFor={ name }>\n        {text}\n        <input\n          type=\"text\"\n          name={ name }\n          value={ value }\n          id={ name }\n          onChange={ handle }\n        />\n      </label>\n    );\n  }\n\n  tagLabel(tag) {\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Saúde', 'Transporte'];\n    return (\n      <label htmlFor=\"tag\">\n        Tag\n        <select name=\"tag\" id=\"tag\" onChange={ this.handleChange }>\n          {tags.map((type) => {\n            if (type === tag) return <option value={ type } selected>{type}</option>;\n            return <option key={ type } value={ type }>{type}</option>;\n          })}\n        </select>\n      </label>\n    );\n  }\n\n  labellabel(method) {\n    const methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    return (\n      <label htmlFor=\"method\">\n        Método de Pagamento\n        <select name=\"method\" id=\"method\" onChange={ this.handleChange }>\n          {methods.map((met) => {\n            if (met === method) return <option value={ met } selected>{met}</option>;\n            return <option key={ met } value={ met }>{met}</option>;\n          })}\n        </select>\n      </label>);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  createExpen() {\n    const { id } = this.state;\n    this.setState({\n      id: id + 1,\n    });\n    const { attCurrencyThunk } = this.props;\n    attCurrencyThunk({ ...this.state });\n  }\n\n  formToFill() {\n    const { currencies, expensesList: { editor } } = this.props;\n    const { value, description } = this.state;\n    return (\n      <form>\n        {this.FormInputText(value, 'Valor', 'value', this.handleChange)}\n        {this.FormInputText(description, 'Descrição', 'description', this\n          .handleChange)}\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            onChange={ this.handleChange }\n          >\n            {currencies.map((currencie) => (\n              <option\n                value={ currencie }\n                key={ currencie }\n              >\n                {currencie}\n              </option>\n            ))}\n          </select>\n        </label>\n        {this.tagLabel()}\n        {this.labellabel()}\n        { !editor\n          ? <button type=\"button\" onClick={ this.createExpen }>Adicionar despesas</button>\n          : <button type=\"button\" onClick={ this.expenseEdit }>Editar despesa</button>}\n      </form>\n    );\n  }\n\n  expenseEdit() {\n    const { editExpense, id, expenses } = this.props;\n    const { exchangeRates } = expenses[id];\n    editExpense({ ...this.state, id, exchangeRates });\n  }\n\n  render() {\n    const { expensesList } = this.props;\n    return (\n      <>\n        {this.formToFill()}\n        <table>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          {expensesList.expenses.length === 0 ? null : expensesList.expenses\n            .map((item,\n              index) => <ItemList item={ item } key={ index } id={ index } />)}\n        </table>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  attCurrencyThunk: PropTypes.func.isRequired,\n  currencies: PropTypes.shape({\n    map: PropTypes.func.isRequired,\n  }).isRequired, // exchangeRates: PropTypes.string.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  expenses: PropTypes.shape({\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n  expensesList: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expensesList: state.wallet,\n  id: state.wallet.idToEdit,\n  expenses: state.wallet.expenses,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  attCurrencyThunk: (value) => dispatch(getSecondThunk(value)),\n  editExpense: (editedExpense) => dispatch(updateExpense(editedExpense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}